{"version":3,"file":"static/js/62.1ebbae1b.chunk.js","mappings":"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","sources":["components/AdminCabinet/ClientUsers/UserProfile/Profile/AccountSummary/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/PersonalInfo/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/AddressInformation/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/BankDetails/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/CompanyDetails/Directors/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/CompanyDetails/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/SuperFundDetails/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/DocumentsUpload/index.js","components/AdminCabinet/ClientUsers/UserProfile/Profile/index.js","components/AdminCabinet/ClientUsers/UserProfile/Balances/index.js","components/AdminCabinet/ClientUsers/UserProfile/Deposits/index.js","components/AdminCabinet/ClientUsers/UserProfile/Withdraw/index.js","components/AdminCabinet/ClientUsers/UserProfile/Trading/index.js","components/AdminCabinet/ClientUsers/UserProfile/index.js","components/AdminCabinet/ClientUsers/index.js","components/Common/DownloadReportsButton.js","helpers/DataPicker/index.js","helpers/ModalPopup/index.js","helpers/reactSelectStyles.js","helpers/selectOptions.js","helpers/setDefaultDateRangeFilterQuery.js","helpers/setFieldColor.js","helpers/timeStampToDate.js","utils/config/exchange_ids.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAccountSummary,\n  updateAccountSummary,\n} from \"../../../../../../requests/adminRequests\";\n\nconst AccountSummary = ({ id }) => {\n  const dispatch = useDispatch();\n  const summaryDate = useSelector((store) => store.client.profile.summary);\n  const optionsData = useSelector((store) => store.options);\n  const [state, setState] = useState({\n    optionsToUpdate: {},\n    type: {\n      value: \"\",\n      comment: \"\",\n      status: {\n        id: 0,\n        name: \"\",\n      },\n    },\n    sourceOfFunds: {\n      value: \"\",\n      comment: \"\",\n      status: {\n        id: 0,\n        name: \"\",\n      },\n    },\n    purpose: {\n      value: \"\",\n      comment: \"\",\n      status: {\n        id: 0,\n        name: \"\",\n      },\n    },\n    isLoading: true,\n    options: [],\n    summary: {},\n  });\n  useEffect(() => {\n    dispatch(getAccountSummary(id));\n  }, [id]);\n  console.log(summaryDate);\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      type: summaryDate.type,\n      sourceOfFunds: summaryDate.sourceOfFunds,\n      purpose: summaryDate.purpose,\n      options: optionsData.options,\n      summary: summaryDate,\n      isLoading: optionsData.options.isLoading,\n    }));\n  }, [summaryDate, optionsData.options]);\n  const handleOnTextAreaChange = (type, e) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [value.name]: {\n        ...prevState[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n\n  const onSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [value.name]: {\n        ...prevState[value.name],\n        value: selectedOption.value,\n      },\n    }));\n  };\n\n  const setDefaultValue = (field, options) => {\n    let value;\n    if (field && options.length) {\n      value = options.find((el) => el.id === field);\n      if (!value) {\n        value = Object.values(options)[0];\n      }\n      return [{ value: value.id, label: value.name }];\n    }\n  };\n  const { sourceOfFunds, type, purpose, isLoading, summary, options } = state;\n  const dataToUpdate = {\n    type: {\n      value: type.value,\n      comment: type.comment,\n      status: type.status.id || type.status,\n    },\n    purpose: {\n      value: purpose.value,\n      comment: purpose.comment,\n      status: purpose.status.id || purpose.status,\n    },\n    sourceOfFunds: {\n      value: sourceOfFunds.value,\n      comment: sourceOfFunds.comment,\n      status: sourceOfFunds.status.id || sourceOfFunds.status,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer\">\n        <ul>\n          <li>\n            Account type\n            <span>\n              <Select\n                defaultValue={setDefaultValue(\n                  summary.type.value,\n                  options.accountTypes\n                )}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                options={prepareOptions(options.accountTypes)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"type\"\n                styles={colourStyles}\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  type.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"type\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={type.comment}\n                onChange={(e) => handleOnTextAreaChange(\"type\", e)}\n                className=\"react-select-container\"\n                name=\"typeComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Account purpose\n            <span>\n              <Select\n                defaultValue={setDefaultValue(\n                  summary.purpose.value,\n                  options.accountPurposes\n                )}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                options={prepareOptions(options.accountPurposes)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"purpose\"\n                styles={colourStyles}\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  purpose.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"purpose\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={purpose.comment}\n                onChange={(e) => handleOnTextAreaChange(\"purpose\", e)}\n                className=\"react-select-container\"\n                name=\"purposeComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Source Of Funds\n            <span>\n              <Select\n                defaultValue={setDefaultValue(\n                  summary.sourceOfFunds.value,\n                  options.sourceOfFunds\n                )}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                options={prepareOptions(options.sourceOfFunds)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"sourceOfFunds\"\n                styles={colourStyles}\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  sourceOfFunds.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"sourceOfFunds\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={sourceOfFunds.comment}\n                onChange={(e) => handleOnTextAreaChange(\"sourceOfFunds\", e)}\n                className=\"react-select-container\"\n                name=\"sourceOfFundsComment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => dispatch(updateAccountSummary(id, dataToUpdate))}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nAccountSummary.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default AccountSummary;\n","import React, { useState, useEffect } from \"react\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport {\n  dateOptions,\n  prepareOptions,\n} from \"../../../../../../helpers/selectOptions\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getIdentityDetails,\n  updateIdentityDetails,\n} from \"../../../../../../requests/adminRequests\";\n\nconst VerifiedFields = ({ value = \"\", comment = \"\", status = 1 }) => ({\n  value,\n  comment,\n  status,\n});\n\nconst PersonalInfo = ({ id }) => {\n  const dispatch = useDispatch();\n  const optionsData = useSelector((store) => store.options);\n  const identityDetails = useSelector(\n    (store) => store.client.profile.identityDetails\n  );\n  const [state, setState] = useState({\n    dateOfBirth: {\n      day: \"\",\n      month: \"\",\n      year: \"\",\n      status: \"\",\n    },\n    email: new VerifiedFields(),\n    firstName: new VerifiedFields(),\n    lastName: new VerifiedFields(),\n    mobileNumber: new VerifiedFields(),\n    idDocument: {\n      type: \"\",\n      value: \"\",\n      comment: \"\",\n      status: {\n        id: \"\",\n        name: \"\",\n      },\n    },\n    options: [],\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    dispatch(getIdentityDetails(id));\n  }, [id]);\n\n  useEffect(() => {\n    setState({\n      dateOfBirth: {\n        day: identityDetails.dateOfBirth.value.slice(0, 2) || \"\",\n        month: identityDetails.dateOfBirth.value.slice(3, 5) || \"\",\n        year: identityDetails.dateOfBirth.value.slice(6) || \"\",\n        status: identityDetails.dateOfBirth.status || \"\",\n      },\n      email: identityDetails.email,\n      firstName: identityDetails.firstName,\n      lastName: identityDetails.lastName,\n      mobileNumber: identityDetails.mobileNumber,\n      idDocument: identityDetails.idDocument,\n      options: optionsData.options,\n      isLoading: false,\n    });\n  }, [identityDetails, optionsData.options]);\n\n  const onSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      dateOfBirth: {\n        ...prevState.dateOfBirth,\n        [value.name]: selectedOption.value,\n      },\n    }));\n  };\n\n  const onIdDocumentSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      idDocument: {\n        ...prevState.idDocument,\n        [value.name]: selectedOption.value,\n      },\n    }));\n  };\n\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [value.name]: {\n        ...prevState[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n\n  const setDefaultDateOfBirthValue = (values, date, type) => {\n    if (date && date.value) {\n      let defaultValue = [];\n      let day = date.value.split(\".\")[0];\n      let month = date.value.split(\".\")[1];\n      let year = date.value.split(\".\")[2];\n\n      switch (type) {\n        case \"day\":\n          defaultValue.push(values.find((el) => el.value.includes(day)));\n          break;\n        case \"month\":\n          defaultValue = values.find((el) => el.value.includes(month));\n          break;\n        case \"year\":\n          defaultValue = values.find((el) => el.value == year);\n          break;\n      }\n      return defaultValue;\n    }\n  };\n\n  const setDefaultValue = (field, options) => {\n    let value = options.find((el) => el.id === field);\n\n    if (!value) {\n      return [{ value: 1, label: \"not provided\" }];\n    }\n\n    return [{ value: value.id, label: value.name }];\n  };\n\n  const handleOnChange = (type, e) => {\n    setState({\n      [type]: {\n        ...state[type],\n        value: e.target.value,\n      },\n    });\n  };\n\n  const handleOnTextAreaChange = (type, e) => {\n    setState({\n      [type]: {\n        ...state[type],\n        comment: e.target.value,\n      },\n    });\n  };\n  const {\n    dateOfBirth,\n    email,\n    firstName,\n    lastName,\n    mobileNumber,\n    idDocument,\n    options,\n  } = state;\n\n  const dataToUpdate = {\n    email: {\n      value: email.value,\n      comment: email.comment,\n      status: email.status.id || email.status,\n    },\n    firstName: {\n      value: firstName.value,\n      comment: firstName.comment,\n      status: firstName.status.id || firstName.status,\n    },\n    lastName: {\n      value: lastName.value,\n      comment: lastName.comment,\n      status: lastName.status.id || lastName.status,\n    },\n    mobileNumber: {\n      value: mobileNumber.value,\n      comment: mobileNumber.comment,\n      status: mobileNumber.status.id || mobileNumber.status,\n    },\n    dateOfBirth: {\n      value: dateOfBirth.day + \".\" + dateOfBirth.month + \".\" + dateOfBirth.year,\n      comment: dateOfBirth.comment || \"\",\n      status: dateOfBirth.status.id || dateOfBirth.status,\n    },\n    idDocument: {\n      type: idDocument.type.id || idDocument.type,\n      value: idDocument.value,\n      comment: idDocument.comment,\n      status: idDocument.status.id || idDocument.status,\n    },\n  };\n\n  return (\n    !state.isLoading && (\n      <div className=\"addressContainer\">\n        <ul>\n          <li>\n            Date of birth\n            <span>\n              <Select\n                options={dateOptions.days()}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                defaultValue={\n                  identityDetails.dateOfBirth !== \"\"\n                    ? setDefaultDateOfBirthValue(\n                        dateOptions.days(),\n                        identityDetails.dateOfBirth,\n                        \"day\"\n                      )\n                    : \"\"\n                }\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"day\"\n                placeholder=\"Day\"\n                styles={colourStyles}\n              />\n              <Select\n                options={dateOptions.months()}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                defaultValue={\n                  identityDetails.dateOfBirth !== \"\"\n                    ? setDefaultDateOfBirthValue(\n                        dateOptions.months(),\n                        identityDetails.dateOfBirth,\n                        \"month\"\n                      )\n                    : \"\"\n                }\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"month\"\n                placeholder=\"Month\"\n                styles={colourStyles}\n              />\n              <Select\n                options={dateOptions.years()}\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                defaultValue={\n                  identityDetails.dateOfBirth !== \"\"\n                    ? setDefaultDateOfBirthValue(\n                        dateOptions.years(),\n                        identityDetails.dateOfBirth,\n                        \"year\"\n                      )\n                    : \"\"\n                }\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"year\"\n                placeholder=\"Year\"\n                styles={colourStyles}\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  dateOfBirth.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"dateOfBirth\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={dateOfBirth.comment}\n                onChange={(e) => handleOnTextAreaChange(\"dateOfBirth\", e)}\n                className=\"react-select-container\"\n                name=\"dateOfBirthComment\"\n              />\n            </span>\n          </li>\n          <li>\n            First name\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"firstName\", e)}\n                value={firstName.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"firstName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  firstName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"firstName\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={firstName.comment}\n                onChange={(e) => handleOnTextAreaChange(\"firstName\", e)}\n                className=\"react-select-container\"\n                name=\"firstName\"\n              />\n            </span>\n          </li>\n          <li>\n            Last name\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"lastName\", e)}\n                value={lastName.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"lastName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  lastName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"lastName\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={lastName.comment}\n                onChange={(e) => handleOnTextAreaChange(\"lastName\", e)}\n                className=\"react-select-container\"\n                name=\"lastNameComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Primary mobile number\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"mobileNumber\", e)}\n                value={mobileNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"mobileNumber\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  mobileNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"mobileNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={mobileNumber.comment}\n                onChange={(e) => handleOnTextAreaChange(\"mobileNumber\", e)}\n                className=\"react-select-container\"\n                name=\"mobileNumberComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Email\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"email\", e)}\n                value={email.value}\n                className=\"react-select-container\"\n                type=\"email\"\n                name=\"email\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  email.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"email\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={email.comment}\n                onChange={(e) => handleOnTextAreaChange(\"email\", e)}\n                className=\"react-select-container\"\n                name=\"emailComment\"\n              />\n            </span>\n          </li>\n          <li>\n            ID\n            <span>\n              <Select\n                defaultValue={setDefaultValue(\n                  idDocument.type.id,\n                  options.idDocumentTypes\n                )}\n                options={prepareOptions(options.idDocumentTypes)}\n                onChange={(selectedOption, value) =>\n                  onIdDocumentSelectChange(selectedOption, value)\n                }\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                name=\"type\"\n                placeholder=\"Document\"\n                styles={colourStyles}\n              />\n              <input\n                onChange={(e) => handleOnChange(\"idDocument\", e)}\n                value={idDocument.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"idDocument\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  idDocument.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"idDocument\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={idDocument.comment}\n                onChange={(e) => handleOnTextAreaChange(\"idDocument\", e)}\n                className=\"react-select-container\"\n                name=\"idDocumentComment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => dispatch(updateIdentityDetails(id, dataToUpdate))}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nPersonalInfo.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default PersonalInfo;\n","import React, { useState, useEffect } from \"react\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAddress,\n  updateAddress,\n} from \"../../../../../../requests/adminRequests\";\n\nconst VerifiedFields = (value, comment, status) => {\n  return {\n    value: value || \"\",\n    comment: comment || \"\",\n    status: status || 1,\n  };\n};\n\nconst AddressInformation = (props) => {\n  const dispatch = useDispatch();\n  const optionsData = useSelector((store) => store.options);\n  const addressData = useSelector((store) => store.client.profile.address);\n  const [state, setState] = useState({\n    line1: VerifiedFields(),\n    line2: VerifiedFields(),\n    country: VerifiedFields(),\n    city: VerifiedFields(),\n    stateInfo: VerifiedFields(),\n    zipCode: VerifiedFields(),\n    options: [],\n    address: {},\n    isLoading: true,\n  });\n  useEffect(() => {\n    const { id } = props;\n    dispatch(getAddress(id));\n  }, [props]);\n\n  useEffect(() => {\n    setState({\n      line1: addressData.line1,\n      line2: addressData.line2,\n      country: addressData.country,\n      city: addressData.city,\n      stateInfo: addressData.state,\n      zipCode: addressData.zipCode,\n      options: optionsData.options,\n      address: addressData,\n      isLoading: false,\n    });\n  }, [addressData, optionsData.options]);\n\n  const setDefaultSelectValue = (value) => {\n    return [{ value: value, label: value }];\n  };\n\n  const setDefaultValue = (field, options) => {\n    let value = options.find((el) => el.id === field);\n    if (!value) {\n      return [{ value: 1, label: \"not provided\" }];\n    }\n    return [{ value: value.id, label: value.name }];\n  };\n\n  const onSelectChange = (selectedOption) => {\n    setState((prevState) => ({\n      ...prevState,\n      country: {\n        ...prevState.country,\n        value: selectedOption.label,\n      },\n    }));\n  };\n\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [value.name]: {\n        ...prevState[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n\n  const handleOnChange = (type, e) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        value: e.target.value,\n      },\n    }));\n  };\n\n  const handleOnTextAreaChange = (type, e) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n\n  const { id } = props;\n  const { isLoading, line1, line2, country, city, stateInfo, zipCode } = state;\n\n  const dataToUpdate = {\n    line1: {\n      value: line1.value,\n      comment: line1.comment,\n      status: line1.status.id || line1.status,\n    },\n    line2: {\n      value: line2.value,\n      comment: line2.comment,\n      status: line2.status.id || line2.status,\n    },\n    country: {\n      value: country.value,\n      comment: country.comment,\n      status: country.status.id || country.status,\n    },\n    city: {\n      value: city.value,\n      comment: city.comment,\n      status: city.status.id || city.status,\n    },\n    stateInfo: {\n      value: stateInfo.value,\n      comment: stateInfo.comment,\n      status: stateInfo.status.id || stateInfo.status,\n    },\n    zipCode: {\n      value: zipCode.value,\n      comment: zipCode.comment,\n      status: zipCode.status.id || zipCode.status,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer\">\n        <ul>\n          <li>\n            Address line 1\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"line1\", e)}\n                value={line1.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"line1\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  line1.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"line1\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={line1.comment}\n                onChange={(e) => handleOnTextAreaChange(\"line1\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Address line 2\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"line2\", e)}\n                value={line2.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"line2\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  line2.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"line2\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={line2.comment}\n                onChange={(e) => handleOnTextAreaChange(\"line2\", e)}\n                className=\"react-select-container\"\n                name=\"line2Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Country\n            <span>\n              <Select\n                defaultValue={setDefaultSelectValue(country.value)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption) => onSelectChange(selectedOption)}\n                options={prepareOptions(state.options.countries)}\n                name=\"country\"\n                placeholder=\"Select country\"\n                styles={colourStyles}\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  country.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"country\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={country.comment}\n                onChange={(e) => handleOnTextAreaChange(\"country\", e)}\n                className=\"react-select-container\"\n                name=\"countryComment\"\n              />\n            </span>\n          </li>\n          <li>\n            State\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"state\", e)}\n                value={state.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"state\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  state.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"state\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={state.comment}\n                onChange={(e) => handleOnTextAreaChange(\"state\", e)}\n                className=\"react-select-container\"\n                name=\"stateComment\"\n              />\n            </span>\n          </li>\n          <li>\n            City\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"city\", e)}\n                value={city.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"city\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  city.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"city\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={city.comment}\n                onChange={(e) => handleOnTextAreaChange(\"city\", e)}\n                className=\"react-select-container\"\n                name=\"cityComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Zip/Post code\n            <span>\n              <input\n                onChange={(e) => handleOnChange(\"zipCode\", e)}\n                value={zipCode.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"zipcode\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  zipCode.status.id,\n                  state.options.verificationStatuses\n                )}\n                options={prepareOptions(state.options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"zipCode\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={zipCode.comment}\n                onChange={(e) => handleOnTextAreaChange(\"zipCode\", e)}\n                className=\"react-select-container\"\n                name=\"zipCodeComment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => dispatch(updateAddress(id, dataToUpdate))}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nAddressInformation.propTypes = {\n  id: PropTypes.any,\n  address: PropTypes.any,\n  options: PropTypes.any,\n};\n\nexport default AddressInformation;\n","import React, { useState, useEffect } from \"react\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getBankDetails,\n  updateBankDetails,\n} from \"../../../../../../requests/adminRequests\";\n\nconst BankDetails = ({ id }) => {\n  const dispatch = useDispatch();\n  const optionsState = useSelector((store) => store.options);\n  const bankDetailsState = useSelector(\n    (store) => store.client.profile.bankDetails\n  );\n  const [state, setState] = useState({\n    accountName: \"\",\n    accountNumber: \"\",\n    bankName: \"\",\n    bsb: \"\",\n    accountNameComment: \"\",\n    accountNumberComment: \"\",\n    bankNameComment: \"\",\n    bsbComment: \"\",\n    accountNameStatus: \"\",\n    accountNumberStatus: \"\",\n    bankNameStatus: \"\",\n    bsbStatus: \"\",\n    bankDetails: {},\n    options: {},\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    dispatch(getBankDetails(id));\n  }, [id]);\n\n  useEffect(() => {\n    setState({\n      accountName: bankDetailsState.accountName.value,\n      accountNumber: bankDetailsState.accountNumber.value,\n      bankName: bankDetailsState.bankName.value,\n      bsb: bankDetailsState.bsb.value,\n      accountNameStatus: bankDetailsState.accountName.status.id,\n      accountNumberStatus: bankDetailsState.accountNumber.status.id,\n      bankNameStatus: bankDetailsState.bankName.status.id,\n      bsbStatus: bankDetailsState.bsb.status.id,\n      accountNameComment: bankDetailsState.accountName.comment,\n      accountNumberComment: bankDetailsState.accountNumber.comment,\n      bankNameComment: bankDetailsState.bankName.comment,\n      bsbComment: bankDetailsState.bsb.comment,\n      bankDetails: bankDetailsState,\n      options: optionsState.options,\n      isLoading: false,\n    });\n  }, [bankDetailsState, optionsState.options]);\n\n  const handleOnChange = (type, e) => {\n    setState({\n      ...state,\n      [type]: e.target.value,\n    });\n  };\n\n  const onSelectChange = (selectedOption, value) => {\n    setState({\n      ...state,\n      [value.name]: selectedOption.value,\n    });\n  };\n\n  const setDefaultValue = (field, options) => {\n    let value = options.find((el) => el.id === field);\n\n    if (!value) {\n      return [{ value: 1, label: \"not provided\" }];\n    }\n\n    return [{ value: value.id, label: value.name }];\n  };\n\n  const {\n    accountName,\n    accountNameComment,\n    accountNameStatus,\n    accountNumber,\n    accountNumberComment,\n    accountNumberStatus,\n    bankName,\n    bankNameComment,\n    bankNameStatus,\n    bsb,\n    bsbComment,\n    bsbStatus,\n    bankDetails,\n    options,\n    isLoading,\n  } = state;\n\n  const detailToUpdate = {\n    accountName: {\n      value: accountName,\n      comment: accountNameComment,\n      status: accountNameStatus,\n    },\n    accountNumber: {\n      value: accountNumber,\n      comment: accountNumberComment,\n      status: accountNumberStatus,\n    },\n    bankName: {\n      value: bankName,\n      comment: bankNameComment,\n      status: bankNameStatus,\n    },\n    bsb: {\n      value: bsb,\n      comment: bsbComment,\n      status: bsbStatus,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer \">\n        <ul>\n          <li>\n            Account Name\n            <span>\n              <input\n                value={accountName}\n                onChange={(e) => handleOnChange(\"accountName\", e)}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"accountName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  bankDetails.accountName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                name=\"accountNameStatus\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={accountNameComment}\n                onChange={(e) => handleOnChange(\"accountNameComment\", e)}\n                className=\"react-select-container\"\n                name=\"accountNameComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Account Number\n            <span>\n              <input\n                value={accountNumber}\n                onChange={(e) => handleOnChange(\"accountNumber\", e)}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"accountNumber\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  bankDetails.accountNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                name=\"accountNumberStatus\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={accountNumberComment}\n                onChange={(e) => handleOnChange(\"accountNumberComment\", e)}\n                className=\"react-select-container\"\n                name=\"accountNumberComment\"\n              />\n            </span>\n          </li>\n          <li>\n            BSB\n            <span>\n              <input\n                value={bsb}\n                onChange={(e) => handleOnChange(\"bsb\", e)}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"bsb\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  bankDetails.bsb.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                name=\"bsbStatus\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={bsbComment}\n                onChange={(e) => handleOnChange(\"bsbComment\", e)}\n                className=\"react-select-container\"\n                name=\"bsbComment\"\n              />\n            </span>\n          </li>\n          <li>\n            Bank Name\n            <span>\n              <input\n                value={bankName}\n                onChange={(e) => handleOnChange(\"bankName\", e)}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"bankName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  bankDetails.bankName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onSelectChange(selectedOption, value)\n                }\n                name=\"bankNameStatus\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={bankNameComment}\n                onChange={(e) => handleOnChange(\"bankNameComment\", e)}\n                className=\"react-select-container\"\n                name=\"bankNameComment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => dispatch(updateBankDetails(id, detailToUpdate))}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nBankDetails.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { prepareOptions } from \"../../../../../../../helpers/selectOptions\";\nimport { colourStyles } from \"../../../../../../../helpers/reactSelectStyles\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { updateDirectors } from \"../../../../../../../requests/adminRequests\";\n\nconst Directors = ({ id, directors, options }) => {\n  const dispatch = useDispatch();\n  const [directorsId, setDirectorsId] = useState({});\n  useEffect(() => {\n    if (directors && directors.length) {\n      const directorsReducer = (acc, el) => {\n        acc[el.id] = {\n          id: el.id,\n          status: el.status.id,\n          comment: el.comment,\n        };\n        return acc;\n      };\n\n      setDirectorsId(directors.reduce(directorsReducer, {}));\n    }\n  }, [directors]);\n\n  const handleOnTextAreaChange = (type, e) => {\n    setDirectorsId((prevDirectorsId) => ({\n      ...prevDirectorsId,\n      [type]: {\n        ...prevDirectorsId[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n\n  const onStatusSelectChange = (selectedOption, value) => {\n    setDirectorsId((prevDirectorsId) => ({\n      ...prevDirectorsId,\n      [value.name]: {\n        ...prevDirectorsId[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n\n  const setDefaultValue = (field, options) => {\n    let value;\n\n    if (field && options.length) {\n      value = options.find((el) => el.id === field);\n      if (!value) {\n        value = Object.values(options)[0];\n      }\n      return [{ value: value.id, label: value.name }];\n    }\n  };\n\n  const displayDirectors = () => {\n    if (directors && directors.length) {\n      return directors.map((el) => (\n        <li key={el.id}>\n          <span>\n            <a target=\"_blank\" href={el.photoId} rel=\"noreferrer\">\n              document\n            </a>\n          </span>\n          <span>\n            <span>{`${el.firstName} ${el.lastName}`}</span>\n            <Select\n              defaultValue={setDefaultValue(\n                el.status.id,\n                options.verificationStatuses\n              )}\n              options={prepareOptions(options.verificationStatuses)}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              onChange={(selectedOption, value) =>\n                onStatusSelectChange(selectedOption, value)\n              }\n              name={`${el.id}`}\n              styles={colourStyles}\n              placeholder=\"action\"\n            />\n          </span>\n          <span>\n            <span>comment </span>\n            <textarea\n              rows=\"5\"\n              value={\n                el.comment || (directorsId[el.id] && directorsId[el.id].comment)\n              }\n              onChange={(e) => handleOnTextAreaChange(`${el.id}`, e)}\n              className=\"react-select-container\"\n              name=\"line1Comment\"\n            />\n          </span>\n          <div className=\"profileButton\">\n            <span\n              onClick={() => dispatch(updateDirectors(id, directorsId[el.id]))}\n              className=\"profileButton-submit\"\n            >\n              Submit\n            </span>\n          </div>\n        </li>\n      ));\n    } else {\n      return (\n        <li>\n          <span className=\"noDirectors\">Directors are not added yet</span>\n        </li>\n      );\n    }\n  };\n\n  return <ul className=\"companyMenuList-directors\">{displayDirectors()}</ul>;\n};\n\nDirectors.propTypes = {\n  id: PropTypes.any,\n  directors: PropTypes.any,\n  options: PropTypes.any,\n};\n\nexport default Directors;\n","import React, { useState, useEffect } from \"react\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions.js\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport Directors from \"./Directors\";\nimport \"./index.less\";\nimport DownloadReportsButton from \"../../../../../../components/Common/DownloadReportsButton\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCompanyDetails,\n  updateCompanyDetails,\n} from \"../../../../../../requests/adminRequests\";\n\nconst CompanyDetails = (props) => {\n  const dispatch = useDispatch();\n  const companyDetails = useSelector(\n    (store) => store.client.profile.companyDetails.details\n  );\n  const optionsState = useSelector((store) => store.options);\n  const [state, setState] = useState({\n    companyName: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    australianBusinessNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    australianCompanyNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    taxFileNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    companyAddress: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    companyWebsiteUrl: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    companyExtractDocuments: {\n      files: [],\n      status: {\n        id: 1,\n        name: \"\",\n      },\n      comment: \"\",\n    },\n    registrationDocumentsValue: \"\",\n    options: [],\n    directors: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    const { id } = props;\n    dispatch(getCompanyDetails(id));\n  }, [props]);\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      companyName: companyDetails.companyName,\n      australianBusinessNumber: companyDetails.australianBusinessNumber,\n      australianCompanyNumber: companyDetails.australianCompanyNumber,\n      taxFileNumber: companyDetails.taxFileNumber,\n      companyAddress: companyDetails.companyAddress,\n      companyWebsiteUrl: companyDetails.companyWebsiteUrl,\n      companyExtractDocuments: companyDetails.companyExtractDocuments,\n      options: optionsState.options,\n      directors: companyDetails.directors,\n      isLoading: false,\n    }));\n  }, [companyDetails, optionsState]);\n  const handleOnTextAreaChange = (type, e) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [value.name]: {\n        ...prevState[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n  const setDefaultValue = (field, options) => {\n    let value;\n\n    if (field && options.length) {\n      value = options.find((el) => el.id === field);\n      if (!value) {\n        value = Object.values(options)[0];\n      }\n      return [{ value: value.id, label: value.name }];\n    }\n  };\n  const onInputChange = (e, type) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        value: e.target.value,\n      },\n    }));\n  };\n  const onHandlerSubmit = (dataToUpdate) => {\n    const { id } = props;\n    let extractDocuments = document.getElementById(\"extractDocuments\").files;\n    if (extractDocuments) {\n      dataToUpdate.companyExtractDocuments.files = extractDocuments;\n    }\n    dispatch(updateCompanyDetails(id, dataToUpdate));\n  };\n\n  const {\n    companyName,\n    australianBusinessNumber,\n    australianCompanyNumber,\n    taxFileNumber,\n    companyWebsiteUrl,\n    companyExtractDocuments,\n    companyAddress,\n    options,\n    isLoading,\n    directors,\n    registrationDocumentsValue,\n  } = state;\n\n  const dataToUpdate = {\n    companyName: {\n      value: companyName.value,\n      comment: companyName.comment,\n      status: companyName.status.id || companyName.status,\n    },\n    australianBusinessNumber: {\n      value: australianBusinessNumber.value,\n      comment: australianBusinessNumber.comment,\n      status:\n        australianBusinessNumber.status.id || australianBusinessNumber.status,\n    },\n    australianCompanyNumber: {\n      value: australianCompanyNumber.value,\n      comment: australianCompanyNumber.comment,\n      status:\n        australianCompanyNumber.status.id || australianCompanyNumber.status,\n    },\n    taxFileNumber: {\n      value: taxFileNumber.value,\n      comment: taxFileNumber.comment,\n      status: taxFileNumber.status.id || taxFileNumber.status,\n    },\n    companyAddress: {\n      value: companyAddress.value,\n      comment: companyAddress.comment,\n      status: companyAddress.status.id || companyAddress.status,\n    },\n    companyWebsiteUrl: {\n      value: companyWebsiteUrl.value,\n      comment: companyWebsiteUrl.comment,\n      status: companyWebsiteUrl.status.id || companyWebsiteUrl.status,\n    },\n    companyExtractDocuments: {\n      comment: companyExtractDocuments.comment,\n      status:\n        companyExtractDocuments.status.id || companyExtractDocuments.status,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer\">\n        <ul>\n          <li>\n            Company name\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"companyName\")}\n                value={companyName.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"companyName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  companyName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"companyName\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={companyName.comment}\n                onChange={(e) => handleOnTextAreaChange(\"companyName\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Australian Business Number (ABN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"australianBusinessNumber\")}\n                value={australianBusinessNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"abn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  australianBusinessNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"australianBusinessNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={australianBusinessNumber.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"australianBusinessNumber\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Australian Company Number (ACN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"australianCompanyNumber\")}\n                value={australianCompanyNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"acn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  australianCompanyNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"australianCompanyNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={australianCompanyNumber.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"australianCompanyNumber\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Tax File Number (TFN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"taxFileNumber\")}\n                value={taxFileNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"tfn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  taxFileNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"taxFileNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={taxFileNumber.comment}\n                onChange={(e) => handleOnTextAreaChange(\"taxFileNumber\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Company address\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"companyAddress\")}\n                value={companyAddress.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"companyAddress\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  companyAddress.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"companyAddress\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={companyAddress.comment}\n                onChange={(e) => handleOnTextAreaChange(\"companyAddress\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Company website URL\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"companyWebsiteUrl\")}\n                value={companyWebsiteUrl.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"webSite\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  companyWebsiteUrl.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"companyWebsiteUrl\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={companyWebsiteUrl.comment}\n                onChange={(e) => handleOnTextAreaChange(\"companyWebsiteUrl\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Company Extract documents\n            <span className=\"documentsLinks\">\n              {companyExtractDocuments.files &&\n                companyExtractDocuments.files.map((el, index) => (\n                  <DownloadReportsButton key={index} docs={true} url={el} />\n                ))}\n            </span>\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"registrationDocumentsValue\")}\n                className=\"react-select-container uploadDocuments\"\n                type=\"file\"\n                id=\"extractDocuments\"\n                name=\"extractDocuments\"\n                accept=\"image/*\"\n                multiple=\"multiple\"\n              />\n              <label htmlFor=\"extractDocuments\">\n                {registrationDocumentsValue.value || \"choose file...\"}\n              </label>\n              <Select\n                defaultValue={setDefaultValue(\n                  companyExtractDocuments.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"companyExtractDocuments\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={companyExtractDocuments.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"companyExtractDocuments\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => onHandlerSubmit(dataToUpdate)}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n        <h4>Directors:</h4>\n        <Directors options={options} directors={directors} id={props.id} />\n      </div>\n    )\n  );\n};\n\nCompanyDetails.propTypes = {\n  id: PropTypes.any,\n  options: PropTypes.any,\n};\n\nexport default CompanyDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport DownloadReportsButton from \"../../../../../../components/Common/DownloadReportsButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getSuperFundDetails,\n  updateSuperFundDetails,\n} from \"../../../../../../requests/adminRequests\";\n\nconst SuperFundDetails = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const superFundDetails = useSelector(\n    (store) => store.client.profile.superFundDetails.details\n  );\n  const optionsState = useSelector((store) => store.options);\n  const [state, setState] = useState({\n    fundName: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    australianBusinessNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    australianCompanyNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    taxFileNumber: {\n      value: \"\",\n      comment: \"\",\n      status: 1,\n    },\n    registrationDocuments: {\n      files: [],\n      status: {\n        id: 0,\n        name: \"\",\n      },\n      comment: \"\",\n    },\n    registrationDocumentsValue: \"\",\n    options: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    dispatch(getSuperFundDetails(id));\n  }, [id]);\n  useEffect(() => {\n    setState((prev) => ({\n      ...prev,\n      fundName: superFundDetails.fundName,\n      australianBusinessNumber: superFundDetails.australianBusinessNumber,\n      australianCompanyNumber: superFundDetails.australianCompanyNumber,\n      taxFileNumber: superFundDetails.taxFileNumber,\n      registrationDocuments: superFundDetails.registrationDocuments,\n      options: optionsState.options,\n      isLoading: false,\n    }));\n  }, [superFundDetails, optionsState]);\n  const handleOnTextAreaChange = (type, e) => {\n    setState((prev) => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prev) => ({\n      ...prev,\n      [value.name]: {\n        ...prev[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n  const setDefaultValue = (field, options) => {\n    let value;\n    if (field && options.length) {\n      value = options.find((el) => el.id === field);\n      if (!value) {\n        value = Object.values(options)[0];\n      }\n      return [{ value: value.id, label: value.name }];\n    }\n  };\n  const onInputChange = (e, type) => {\n    setState((prev) => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        value: e.target.value,\n      },\n    }));\n  };\n  const onHandlerSubmit = (dataToUpdate) => {\n    let registrationDocuments = document.getElementById(\n      \"registrationDocuments\"\n    ).files;\n    if (registrationDocuments) {\n      dataToUpdate.registrationDocuments.files = registrationDocuments;\n    }\n    dispatch(updateSuperFundDetails(id, dataToUpdate));\n  };\n  const {\n    isLoading,\n    options,\n    fundName,\n    registrationDocumentsValue,\n    australianBusinessNumber,\n    australianCompanyNumber,\n    taxFileNumber,\n    registrationDocuments,\n  } = state;\n\n  const dataToUpdate = {\n    fundName: {\n      value: fundName.value,\n      comment: fundName.comment,\n      status: fundName.status.id || fundName.status,\n    },\n    australianBusinessNumber: {\n      value: australianBusinessNumber.value,\n      comment: australianBusinessNumber.comment,\n      status:\n        australianBusinessNumber.status.id || australianBusinessNumber.status,\n    },\n    australianCompanyNumber: {\n      value: australianCompanyNumber.value,\n      comment: australianCompanyNumber.comment,\n      status:\n        australianCompanyNumber.status.id || australianCompanyNumber.status,\n    },\n    taxFileNumber: {\n      value: taxFileNumber.value,\n      comment: taxFileNumber.comment,\n      status: taxFileNumber.status.id || taxFileNumber.status,\n    },\n    registrationDocuments: {\n      comment: registrationDocuments.comment,\n      status: registrationDocuments.status.id || registrationDocuments.status,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer\">\n        <ul>\n          <li>\n            Fund name\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"fundName\")}\n                value={fundName.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"fundName\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  fundName.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"fundName\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={fundName.comment}\n                onChange={(e) => handleOnTextAreaChange(\"fundName\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Australian Business Number (ABN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"australianBusinessNumber\")}\n                value={australianBusinessNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"abn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  australianBusinessNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"australianBusinessNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={australianBusinessNumber.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"australianBusinessNumber\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Australian Company Number (ACN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"australianCompanyNumber\")}\n                value={australianCompanyNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"acn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  australianCompanyNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"australianCompanyNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={australianCompanyNumber.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"australianCompanyNumber\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Tax File Number (TFN)\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"taxFileNumber\")}\n                value={taxFileNumber.value}\n                className=\"react-select-container\"\n                type=\"text\"\n                name=\"tfn\"\n              />\n              <Select\n                defaultValue={setDefaultValue(\n                  taxFileNumber.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"taxFileNumber\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={taxFileNumber.comment}\n                onChange={(e) => handleOnTextAreaChange(\"taxFileNumber\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Registration documents\n            <span className=\"documentsLinks\">\n              {registrationDocuments.files &&\n                registrationDocuments.files.map((el, index) => (\n                  <DownloadReportsButton key={index} docs={true} url={el} />\n                ))}\n            </span>\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"registrationDocumentsValue\")}\n                className=\"uploadDocuments\"\n                type=\"file\"\n                id=\"registrationDocuments\"\n                name=\"registrationDocuments\"\n                accept=\"image/*\"\n                multiple=\"multiple\"\n              />\n              <label htmlFor=\"registrationDocuments\">\n                {registrationDocumentsValue.value || \"choose file...\"}\n              </label>\n              <Select\n                defaultValue={setDefaultValue(\n                  registrationDocuments.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"registrationDocuments\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={registrationDocuments.comment}\n                onChange={(e) =>\n                  handleOnTextAreaChange(\"registrationDocuments\", e)\n                }\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n        </ul>\n\n        <div className=\"profileButton\">\n          <span\n            onClick={() => onHandlerSubmit(dataToUpdate)}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default SuperFundDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { prepareOptions } from \"../../../../../../helpers/selectOptions\";\nimport { colourStyles } from \"../../../../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport \"./index.less\";\nimport DownloadReportsButton from \"../../../../../../components/Common/DownloadReportsButton\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDocuments,\n  sendDocument,\n} from \"../../../../../../requests/adminRequests\";\n\nconst DocumentsUpload = ({ id }) => {\n  const dispatch = useDispatch();\n  const documents = useSelector((store) => store.client.profile.documents);\n  const optionsState = useSelector((store) => store.options);\n  const [state, setState] = useState({\n    idCloseUp: {\n      files: [],\n      status: {\n        id: 0,\n        name: \"\",\n      },\n      comment: \"\",\n    },\n    idCloseUpValue: \"\",\n    selfieWithId: {\n      files: [],\n      status: {\n        id: 0,\n        name: \"\",\n      },\n      comment: \"\",\n    },\n    selfieValue: \"\",\n    proofOfAddress: {\n      files: [],\n      status: {\n        id: 0,\n        name: \"\",\n      },\n      comment: \"\",\n    },\n    proofAddressValue: \"\",\n    isLoading: true,\n    options: {},\n  });\n  useEffect(() => {\n    dispatch(getDocuments(id));\n  }, [id]);\n  useEffect(() => {\n    setState((prev) => ({\n      ...prev,\n      idCloseUp: documents.idCloseUp,\n      selfieWithId: documents.selfieWithId,\n      proofOfAddress: documents.proofOfAddress,\n      options: optionsState.options,\n      isLoading: false,\n    }));\n  }, [documents, optionsState]);\n  const handleOnTextAreaChange = (type, e) => {\n    setState((prev) => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        comment: e.target.value,\n      },\n    }));\n  };\n  const onStatusSelectChange = (selectedOption, value) => {\n    setState((prev) => ({\n      ...prev,\n      [value.name]: {\n        ...prev[value.name],\n        status: selectedOption.value,\n      },\n    }));\n  };\n  const setDefaultValue = (field, options) => {\n    let value;\n    if (field && options.length) {\n      value = options.find((el) => el.id === field);\n\n      if (!value) {\n        value = Object.values(options)[0];\n      }\n\n      return [{ value: value.id, label: value.name }];\n    }\n  };\n  const onInputChange = (e, type) => {\n    setState((prev) => ({\n      ...prev,\n      [type]: e.target.value,\n    }));\n  };\n  const onHandlerSumbit = () => {\n    const { idCloseUp, selfieWithId, proofOfAddress } = state;\n    const dataToUpdate = {\n      idCloseUp: {\n        comment: idCloseUp.comment,\n        status: idCloseUp.status.id || idCloseUp.status,\n      },\n      selfieWithId: {\n        comment: selfieWithId.comment,\n        status: selfieWithId.status.id || selfieWithId.status,\n      },\n      proofOfAddress: {\n        comment: proofOfAddress.comment,\n        status: proofOfAddress.status.id || proofOfAddress.status,\n      },\n    };\n    let selfie = document.getElementById(\"selfie\").files[0];\n    let idCloseUpFile = document.getElementById(\"idCloseUp\").files[0];\n    let proofAddressFile = document.getElementById(\"proofAddress\").files[0];\n    if (idCloseUpFile) {\n      dataToUpdate.idCloseUp.files = idCloseUpFile;\n    }\n    if (selfie) {\n      dataToUpdate.selfieWithId.files = selfie;\n    }\n    if (proofAddressFile) {\n      dataToUpdate.proofOfAddress.files = proofAddressFile;\n    }\n    dispatch(sendDocument(id, dataToUpdate));\n  };\n  const {\n    isLoading,\n    options,\n    idCloseUp,\n    selfieWithId,\n    proofOfAddress,\n    selfieValue,\n    idCloseUpValue,\n    proofAddressValue,\n  } = state;\n\n  const dataToUpdate = {\n    idCloseUp: {\n      comment: idCloseUp.comment,\n      status: idCloseUp.status.id || idCloseUp.status,\n    },\n    selfieWithId: {\n      comment: selfieWithId.comment,\n      status: selfieWithId.status.id || selfieWithId.status,\n    },\n    proofOfAddress: {\n      comment: proofOfAddress.comment,\n      status: proofOfAddress.status.id || proofOfAddress.status,\n    },\n  };\n\n  return (\n    !isLoading && (\n      <div className=\"addressContainer\">\n        <ul className=\"documentsUploadList\">\n          <li>\n            Selfie with photo\n            <span>\n              {idCloseUp.files && (\n                <DownloadReportsButton\n                  docs={true}\n                  url={selfieWithId.files[0]}\n                />\n              )}\n            </span>\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"selfieValue\")}\n                className=\"uploadDocuments\"\n                type=\"file\"\n                id=\"selfie\"\n                name=\"selfie\"\n                accept=\"image/*\"\n              />\n              <label htmlFor=\"selfie\">{selfieValue || \"choose file...\"}</label>\n              <Select\n                defaultValue={setDefaultValue(\n                  selfieWithId.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"selfieWithId\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={selfieWithId.comment}\n                onChange={(e) => handleOnTextAreaChange(\"selfieWithId\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            ID close up\n            <span>\n              {idCloseUp.files && (\n                <DownloadReportsButton docs={true} url={idCloseUp.files[0]} />\n              )}\n            </span>\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"idCloseUpValue\")}\n                className=\"uploadDocuments\"\n                type=\"file\"\n                name=\"idCloseUp\"\n                id=\"idCloseUp\"\n              />\n              <label htmlFor=\"idCloseUp\">\n                {idCloseUpValue || \"choose file...\"}\n              </label>\n              <Select\n                defaultValue={setDefaultValue(\n                  idCloseUp.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"idCloseUp\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>{\" \"}\n              <textarea\n                rows=\"5\"\n                value={idCloseUp.comment}\n                onChange={(e) => handleOnTextAreaChange(\"idCloseUp\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n          <li>\n            Proof of address\n            <span>\n              {idCloseUp.files && (\n                <DownloadReportsButton\n                  docs={true}\n                  url={proofOfAddress.files[0]}\n                />\n              )}\n            </span>\n            <span>\n              <input\n                onChange={(e) => onInputChange(e, \"proofAddressValue\")}\n                className=\"react-select-container uploadDocuments\"\n                type=\"file\"\n                name=\"proofAddress\"\n                id=\"proofAddress\"\n              />\n              <label htmlFor=\"proofAddress\">\n                {proofAddressValue || \"choose file...\"}\n              </label>\n              <Select\n                defaultValue={setDefaultValue(\n                  proofOfAddress.status.id,\n                  options.verificationStatuses\n                )}\n                options={prepareOptions(options.verificationStatuses)}\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                onChange={(selectedOption, value) =>\n                  onStatusSelectChange(selectedOption, value)\n                }\n                name=\"proofOfAddress\"\n                styles={colourStyles}\n                placeholder=\"action\"\n              />\n            </span>\n            <span>\n              <span>comment</span>\n              <textarea\n                rows=\"5\"\n                value={proofOfAddress.comment}\n                onChange={(e) => handleOnTextAreaChange(\"proofOfAddress\", e)}\n                className=\"react-select-container\"\n                name=\"line1Comment\"\n              />\n            </span>\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => onHandlerSumbit(dataToUpdate)}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    )\n  );\n};\n\nDocumentsUpload.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default DocumentsUpload;\n","import React, { useEffect } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport \"./index.less\";\nimport {\n  URLS_LOCAL_GROUPS,\n  URLS_LOCAL_USER,\n} from \"../../../../../utils/config/URLS\";\nimport AccountSummary from \"./AccountSummary\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport AddressInformation from \"./AddressInformation\";\nimport BankDetails from \"./BankDetails\";\nimport CompanyDetails from \"./CompanyDetails\";\nimport SuperFundDetails from \"./SuperFundDetails\";\nimport DocumentsUpload from \"./DocumentsUpload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getClientActivity,\n  getOptions,\n} from \"../../../../../requests/adminRequests\";\n\nconst Profile = () => {\n  const { id, accType } = useParams();\n  const dispatch = useDispatch();\n  const summary = useSelector((store) => store.client.profile.summary);\n  useEffect(() => {\n    dispatch(getClientActivity(id));\n    dispatch(getOptions());\n  }, [id]);\n  const renderTab = () => {\n    switch (accType) {\n      case \"account-summary\":\n        return <AccountSummary id={id} />;\n      case \"personal-info\":\n        return <PersonalInfo id={id} />;\n      case \"address-information\":\n        return <AddressInformation id={id} />;\n      case \"banking-details\":\n        return <BankDetails id={id} />;\n      case \"company-details\":\n        return <CompanyDetails id={id} />;\n      case \"super-fund-details\":\n        return <SuperFundDetails id={id} />;\n      case \"documents-upload\":\n        return <DocumentsUpload id={id} />;\n      default:\n        return <AccountSummary id={id} />;\n    }\n  };\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta\">\n          <ul className=\"tabList\">\n            <li>\n              <NavLink\n                to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.accountSummary}`}\n              >\n                Account Summary\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.personalInfo}`}\n              >\n                Personal info\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.addressInformation}`}\n              >\n                Address information\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.bankingDetails}`}\n              >\n                Bank details\n              </NavLink>\n            </li>\n            {summary && summary.type && summary.type.value === 2 ? (\n              <li>\n                <NavLink\n                  to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.companyDetails}`}\n                >\n                  Company details\n                </NavLink>\n              </li>\n            ) : null}\n            {summary && summary.type && summary.type.value === 3 ? (\n              <li>\n                <NavLink\n                  to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.superFundDetails}`}\n                >\n                  Super fund details\n                </NavLink>\n              </li>\n            ) : null}\n            <li>\n              <NavLink\n                to={`${URLS_LOCAL_GROUPS.clientUser}/${id}${URLS_LOCAL_USER.profile}${URLS_LOCAL_USER.documentsUpload}`}\n              >\n                Documents upload\n              </NavLink>\n            </li>\n          </ul>\n\n          {renderTab()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { SYMBOLS_INFO } from \"../../../../../utils/config/exchange_ids\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getClientBalances } from \"../../../../../requests/adminRequests\";\n\nconst Balances = ({ id }) => {\n  const dispatch = useDispatch();\n  const clientBalances = useSelector((store) => store.client.balances);\n  const [state, setState] = useState({\n    balances: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    dispatch(getClientBalances(id));\n  }, []);\n  useEffect(() => {\n    if (clientBalances !== state.balances) {\n      setState((prevState) => ({\n        ...prevState,\n        balances: clientBalances.data,\n        isLoading: clientBalances.isLoading,\n      }));\n    }\n  }, [clientBalances]);\n  const displayBalances = (balances) => {\n    return balances.map((el, i) => (\n      <div key={i} className=\"balancesHeader\">\n        <div className=\"balancesHeader-info\">\n          <span>{el.currency}</span>\n          <span>\n            {(+el.balance).toFixed(SYMBOLS_INFO[el.currency].precision)}\n          </span>\n          <span>\n            {(+el.availableBalance).toFixed(\n              SYMBOLS_INFO[el.currency].precision\n            )}\n          </span>\n        </div>\n      </div>\n    ));\n  };\n  return (\n    <div className=\"container-wrap mw\">\n      <div className=\"addressContainer \">\n        <h4>Balances</h4>\n        <div className=\"balancesContainer\">\n          <div className=\"balancesHeader\">\n            <div className=\"balancesHeader-info\">\n              <span>Currency</span>\n              <span>Balance</span>\n              <span>Available Balance</span>\n            </div>\n          </div>\n          {displayBalances(state.balances)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBalances.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default Balances;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"./index.less\";\nimport \"react-table/react-table.css\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport {\n  ccy,\n  reportsDepositsStatuses,\n} from \"../../../../../utils/config/exchange_ids\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getClientDeposits } from \"../../../../../requests/adminRequests\";\n\nconst columns = [\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: reportsDepositsStatuses,\n      }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit ID\",\n    accessor: \"publicId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    filterable: false,\n    accessor: \"time\",\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToTime(row.original.time) +\n            \" \" +\n            timeStampToDate(row.original.timestamp)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Currency\",\n    accessor: \"currency\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"fee\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account from\",\n    accessor: \"accountNumber\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account to\",\n    accessor: \"bankAccountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Address from\",\n    accessor: \"addressFrom\",\n    filterable: false,\n  },\n  {\n    Header: \"Account to\",\n    accessor: \"accountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Transaction Hash\",\n    accessor: \"description\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Method\",\n    accessor: \"method\",\n    filterable: false,\n  },\n];\n\nconst Deposits = ({ id }) => {\n  const dispatch = useDispatch();\n  const clientDeposits = useSelector((store) => store.client.deposits);\n  const [state, setState] = useState({\n    isFetchData: false,\n    clientDeposits: clientDeposits.data,\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [],\n    },\n  });\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      pages: clientDeposits.pages,\n      clientDeposits: clientDeposits.data,\n      isFetchData: false,\n    }));\n  }, [clientDeposits]);\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => {\n          dispatch(getClientDeposits(id, state.params));\n        }\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => {\n          dispatch(getClientDeposits(id, state.params));\n        }\n      );\n    }\n  };\n  return (\n    <div className=\"addressContainer deposits-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Deposits</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n          {/*<DownloadReportsButton url={BuildAPIUrl(URLS.REPORTS) + '/deposits/download'} params={urlParams} />*/}\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={state.isFetchData}\n        data={state.clientDeposits}\n        pages={state.pages}\n        manual\n        filterable={true}\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={(state, instance) => {\n          setState((prevState) => ({\n            ...prevState,\n            isFetchData: true,\n            params: {\n              page: Number(state.page),\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered,\n            },\n          }));\n          dispatch(\n            getClientDeposits(id, {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered,\n            })\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nDeposits.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default Deposits;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"./index.less\";\nimport \"react-table/react-table.css\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport {\n  ccy,\n  reportsWithdrawalsStatuses,\n} from \"../../../../../utils/config/exchange_ids\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getClientWithdrawals } from \"../../../../../requests/adminRequests\";\n\nconst columns = [\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: reportsWithdrawalsStatuses,\n      }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Withdrawal ID\",\n    accessor: \"publicId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    filterable: false,\n    accessor: \"time\",\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToTime(row.original.time) +\n            \" \" +\n            timeStampToDate(row.original.timestamp)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Currency\",\n    accessor: \"currency\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"fee\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account from\",\n    accessor: \"accountNumber\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account to\",\n    accessor: \"bankAccountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Address from\",\n    accessor: \"addressFrom\",\n    filterable: false,\n  },\n  {\n    Header: \"Account to\",\n    accessor: \"accountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Transaction Hash\",\n    accessor: \"description\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Method\",\n    accessor: \"method\",\n    filterable: false,\n  },\n];\n\nconst Withdraw = ({ pages, id }) => {\n  const dispatch = useDispatch();\n  const clientWithdrawals = useSelector((store) => store.client.withdrawals);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  const [dateRangeState, setDateRangeState] = useState(dateRangeObj);\n  useEffect(() => {\n    setIsFetchData(false);\n  }, [clientWithdrawals]);\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setDateRangeState([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setDateRangeState([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Withdrawals</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={clientWithdrawals.data}\n        pages={pages}\n        manual\n        filterable={true}\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={(state) => {\n          setIsFetchData(true);\n          setParams({\n            page: Number(state.page),\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          dispatch(\n            getClientWithdrawals(id, {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered,\n            })\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nWithdraw.propTypes = {\n  pages: PropTypes.any,\n  id: PropTypes.any,\n};\n\nexport default Withdraw;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"./index.less\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport {\n  makeSideColor,\n  makeStatusColor,\n} from \"../../../../../helpers/setFieldColor\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { sideValues, ccyPairs } from \"../../../../../utils/config/exchange_ids\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getClientOrders,\n  getClientTrades,\n} from \"../../../../../requests/adminRequests\";\n\nconst OrdersColumns = [\n  {\n    Header: \"Order id\",\n    accessor: \"id\",\n    filterable: true,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Pair\",\n    accessor: \"symbol\",\n    filterable: true,\n    width: 100,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccyPairs }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n    Cell: (row) => {\n      return row.original.symbol.replace(\"_\", \"/\");\n    },\n  },\n  {\n    Header: \"Side\",\n    accessor: \"side\",\n    filterable: true,\n    width: 100,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: sideValues }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeSideColor(rowInfo.row.side),\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"quantity\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Created\",\n    accessor: \"createdAt\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.createdAt) +\n            \" \" +\n            timeStampToTime(row.original.createdAt)}\n        </span>\n      );\n    },\n  },\n  {\n    Header: \"Updated\",\n    accessor: \"updatedAt\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.updatedAt) +\n            \" \" +\n            timeStampToTime(row.original.updatedAt)}\n        </span>\n      );\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    filterable: true,\n    getProps: (state, rowInfo, column) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeStatusColor(rowInfo.row.status),\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst TradesColumns = [\n  {\n    Header: \"Trade id\",\n    accessor: \"id\",\n    filterable: true,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Order id\",\n    accessor: \"orderId\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Pair\",\n    accessor: \"symbol\",\n    filterable: true,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccyPairs }),\n    Cell: (row) => {\n      return row.original.symbol.replace(\"_\", \"/\");\n    },\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Side\",\n    accessor: \"side\",\n    filterable: true,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: sideValues }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeSideColor(rowInfo.row.side),\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"feeAmount\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee Currency\",\n    accessor: \"feeCcy\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"timestamp\",\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.timestamp)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    accessor: \"timestamp\",\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.timestamp)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Maker id\",\n    accessor: \"publicMakerClientId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Taker id\",\n    accessor: \"publicTakerClientId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nlet tradesBounce;\nlet ordersBounce;\nconst Trading = ({ id }) => {\n  const dispatch = useDispatch();\n  const clientOrders = useSelector((store) => store.client.orders);\n  const clientTrades = useSelector((store) => store.client.trades);\n  const [isOrdersFetchData, setOrdersFetchData] = useState(false);\n  const [orders, setOrders] = useState(clientOrders.data);\n  const [ordersPages, setOrdersPages] = useState(1);\n  const [isTradesFetchData, setTradesFetchData] = useState(false);\n  const [trades, setTrades] = useState(clientTrades.data);\n  const [tradesPages, setTradesPages] = useState(1);\n  const [tradesDateRange, setTradesDateRange] = useState(dateRangeObj);\n  const [ordersDateRange, setOrdersDateRange] = useState(dateRangeObj);\n  const [ordersParams, setOrdersParams] = useState({\n    page: 1,\n    perPage: 10,\n    sorted: [],\n    filtered: [],\n  });\n  const [tradesParams, setTradesParams] = useState({\n    page: 1,\n    perPage: 10,\n    sorted: [],\n    filtered: [],\n  });\n\n  useEffect(() => {\n    setOrdersPages(clientOrders.pages);\n    setOrders(clientOrders.data);\n    setOrdersFetchData(false);\n  }, [clientOrders]);\n\n  useEffect(() => {\n    setTradesPages(clientTrades.pages);\n    setTrades(clientTrades.data);\n    setTradesFetchData(false);\n  }, [clientTrades]);\n\n  const onTradesDateRange = (value) => {\n    if (value) {\n      setTradesDateRange([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setTradesParams({\n        ...tradesParams,\n        filtered: tradesParams.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setTradesDateRange([]);\n      setTradesParams({\n        ...tradesParams,\n        filtered: tradesParams.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n    dispatch(getClientTrades(id, tradesParams));\n  };\n\n  const onOrdersDateRange = (value) => {\n    if (value) {\n      setOrdersDateRange([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setOrdersParams({\n        ...ordersParams,\n        filtered: ordersParams.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setOrdersDateRange([]);\n      setOrdersParams({\n        ...ordersParams,\n        filtered: ordersParams.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n    dispatch(getClientOrders(id, ordersParams));\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table tradingContainer\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Orders</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={onOrdersDateRange} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={10}\n        columns={OrdersColumns}\n        loading={isOrdersFetchData}\n        data={orders}\n        pages={ordersPages}\n        manual\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={(state, instance) => {\n          setOrdersFetchData(true);\n          setOrdersParams({\n            page: Number(state.page),\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          clearTimeout(ordersBounce);\n          ordersBounce = setTimeout(\n            () =>\n              dispatch(\n                getClientOrders(id, {\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: state.filtered.concat(ordersDateRange),\n                })\n              ),\n            200\n          );\n        }}\n      />\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Trades</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={onTradesDateRange} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={10}\n        columns={TradesColumns}\n        loading={isTradesFetchData}\n        data={trades}\n        pages={tradesPages}\n        manual\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={(state, instance) => {\n          setTradesFetchData(true);\n          setTradesParams({\n            page: Number(state.page),\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          clearTimeout(tradesBounce);\n          tradesBounce = setTimeout(\n            () =>\n              dispatch(\n                getClientTrades(id, {\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: state.filtered.concat(tradesDateRange),\n                })\n              ),\n            200\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nTrading.propTypes = {\n  id: PropTypes.any,\n};\n\nexport default Trading;\n","import React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport {\n  URLS_LOCAL_GROUPS,\n  URLS_LOCAL_USER,\n} from \"../../../../utils/config/URLS\";\nimport classNames from \"classnames\";\nimport \"./index.less\";\nimport Profile from \"../../../../components/AdminCabinet/ClientUsers/UserProfile/Profile\";\nimport Balances from \"./Balances\";\nimport Deposits from \"./Deposits\";\nimport Withdraw from \"./Withdraw\";\nimport Trading from \"./Trading\";\nimport ClientUsers from \"../../../../components/AdminCabinet/ClientUsers\";\n\nconst UserProfile = ({ ...props }) => {\n  const params = useParams();\n  const { type, id } = params;\n  const renderTabContent = () => {\n    switch (type) {\n      case \"profile\":\n        return <Profile {...props} />;\n      case \"balances\":\n        return <Balances id={id} />;\n      case \"deposits\":\n        return <Deposits id={id} />;\n      case \"withdraw\":\n        return <Withdraw id={id} />;\n      case \"trading\":\n        return <Trading id={id} />;\n      default:\n        return <ClientUsers />;\n    }\n  };\n\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta\">\n          {id && (\n            <ul className=\"tabList\">\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.clientUser +\n                    `/${id}` +\n                    URLS_LOCAL_USER.profile +\n                    URLS_LOCAL_USER.accountSummary\n                  }\n                  className={classNames({ active: type === \"profile\" })}\n                >\n                  Profile\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.clientUser +\n                    `/${id}` +\n                    URLS_LOCAL_USER.balances\n                  }\n                  className={classNames({ active: type === \"balances\" })}\n                >\n                  Balances\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.clientUser +\n                    `/${id}` +\n                    URLS_LOCAL_USER.deposits\n                  }\n                  className={classNames({ active: type === \"deposits\" })}\n                >\n                  Deposits\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.clientUser +\n                    `/${id}` +\n                    URLS_LOCAL_USER.withdraw\n                  }\n                  className={classNames({ active: type === \"withdraw\" })}\n                >\n                  Withdraw\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.clientUser +\n                    `/${id}` +\n                    URLS_LOCAL_USER.trading\n                  }\n                  className={classNames({ active: type === \"trading\" })}\n                >\n                  Trading\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {renderTabContent()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport { colourStyles } from \"../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport \"./index.less\";\nimport { URLS_LOCAL_GROUPS, URLS_LOCAL_USER } from \"../../../utils/config/URLS\";\nimport \"react-table/react-table.css\";\nimport ModalPopup from \"../../../helpers/ModalPopup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  adminResetClientPassword,\n  adminUpdateClientStatus,\n  getAllClients,\n} from \"../../../requests/adminRequests\";\nimport { NavLink } from \"react-router-dom\";\n\nlet bounce;\n\nfunction Columns({ params, handlerShowPopup, dispatch }) {\n  let userStatus = \"\";\n  return [\n    {\n      Header: \"Client Id\",\n      accessor: \"publicId\",\n      Cell: (row) => {\n        return (\n          <NavLink\n            to={\n              URLS_LOCAL_GROUPS.clientUser +\n              `/${row.original.id}` +\n              URLS_LOCAL_USER.profile +\n              URLS_LOCAL_USER.accountSummary\n            }\n          >\n            {row.original.publicId}\n          </NavLink>\n        );\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Country\",\n      accessor: \"country\",\n    },\n    {\n      Header: \"Account Type\",\n      accessor: \"accountType\",\n    },\n    {\n      Header: \"Verification Status\",\n      accessor: \"verificationStatus\",\n    },\n    {\n      Header: \"Last login \",\n      accessor: \"lastLogin\",\n      Cell: (row) => {\n        return <span>{row.original.lastLogin.replace(/\\./g, \"-\")}</span>;\n      },\n      filterable: false,\n    },\n    {\n      Header: \"Account Status\",\n      accessor: \"accountStatus\",\n      width: 100,\n    },\n    {\n      Header: \"Action\",\n      id: \"Action\",\n      filterable: false,\n      sortable: false,\n      width: 100,\n      Cell: (row) => (\n        <Select\n          options={[\n            { value: 2, label: \"block\" },\n            { value: 1, label: \"activate\" },\n          ]}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          onChange={(selectedOption) => {\n            userStatus = selectedOption.value;\n          }}\n          name=\"purpose\"\n          placeholder=\"action\"\n          styles={colourStyles}\n        />\n      ),\n    },\n    {\n      Header: \"Reset Password\",\n      sortable: false,\n      filterable: false,\n      width: 100,\n      Cell: (row) => {\n        return (\n          <span\n            className=\"resetPass\"\n            onClick={() => handlerShowPopup(row.original.id)}\n          >\n            <img\n              className=\"resetPass-icon\"\n              src=\"/img/svg/reset_pass.svg\"\n              title=\"Reset password\"\n              alt=\"Reset password\"\n            />\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Save\",\n      filterable: false,\n      sortable: false,\n      width: 80,\n      Cell: (row) => {\n        return (\n          <span\n            onClick={() => {\n              if (!userStatus) {\n                userStatus = row.original.accountStatus === \"blocked\" ? 2 : 1;\n              }\n              dispatch(adminUpdateClientStatus(row.original.id, userStatus));\n              setTimeout(() => dispatch(getAllClients(params)), 200);\n            }}\n            className=\"adminTableActions\"\n          >\n            <i className=\"far fa-save\" />\n          </span>\n        );\n      },\n    },\n  ];\n}\n\nfunction ClientUsers() {\n  const dispatch = useDispatch();\n  const allClients = useSelector((store) => store.allClients.allClients);\n  const { data: allClientsData, pages } = allClients;\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    setIsFetchData(false);\n  }, [allClientsData]);\n  const handlerShowPopup = (id) => {\n    setShowPopup(true);\n    setId(id);\n  };\n  const handlerClosePopup = () => {\n    setShowPopup(false);\n  };\n  return (\n    <div className=\"adminContainer\">\n      <ReactTable\n        defaultPageSize={20}\n        filterable\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        columns={Columns({\n          params,\n          handlerShowPopup,\n          dispatch,\n        })}\n        loading={isFetchData}\n        data={allClientsData || []}\n        pages={pages}\n        manual\n        onFetchData={(state, instance) => {\n          setIsFetchData(true);\n          setParams({\n            page: Number(state.page) + 1,\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getAllClients({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: state.filtered,\n                })\n              ),\n            200\n          );\n        }}\n        getTdProps={(state, rowInfo, column) => {\n          return {\n            style:\n              column.id === \"Action\"\n                ? { overflow: \"visible\", padding: \"0 7px\" }\n                : {},\n          };\n        }}\n        getTableProps={() => {\n          return {\n            style: { overflow: \"visible\" },\n          };\n        }}\n        getTbodyProps={() => {\n          return {\n            style: { overflow: \"visible\" },\n          };\n        }}\n      />\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            dispatch(adminResetClientPassword(id));\n          }}\n          onClose={(e) => handlerClosePopup(e)}\n          title={\"Reset password?\"}\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          id={id}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClientUsers;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DownloadReportsButton.less\";\nimport { BuildUrl } from \"../../helpers/axios\";\nimport { useSelector } from \"react-redux\";\n\nconst DownloadReportsButton = ({ url, params, docs = false }) => {\n  const token = useSelector((store) => store.user.accessToken);\n  return (\n    <form target=\"_blank\" action={BuildUrl(url, params)} method=\"POST\">\n      <input type=\"hidden\" name=\"_token\" value={`Bearer ${token}`} />\n      {docs ? (\n        <button type=\"submit\" className=\"documentsButton\">\n          document\n        </button>\n      ) : (\n        <button type=\"submit\" className=\"container-tabs-export\">\n          <i className=\"fas fa-cloud-download-alt\" />\n          <span>Export</span>\n        </button>\n      )}\n    </form>\n  );\n};\n\nDownloadReportsButton.propTypes = {\n  url: PropTypes.string,\n  params: PropTypes.object,\n  docs: PropTypes.bool,\n};\n\nexport default DownloadReportsButton;\n","import React, { useState } from \"react\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\nimport \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker.css\";\nimport \"react-calendar/dist/Calendar.css\";\n\nconst now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nconst DatePicker = ({ dateRange }) => {\n  const [value, setValue] = useState([yesterdayBegin, todayEnd]);\n  const onChange = (newValue) => {\n    setValue(newValue);\n    if (newValue) {\n      let valueToTimestamp = newValue.map((el) => el.getTime().toString());\n      dateRange(valueToTimestamp);\n    } else {\n      dateRange();\n    }\n  };\n  return (\n    <div className=\"Sample\">\n      <div className=\"Sample__container\">\n        <main className=\"Sample__container__content\">\n          <DateRangePicker\n            onChange={onChange}\n            value={value}\n            format={\"dd-MM-y\"}\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nDatePicker.propTypes = {\n  dateRange: PropTypes.any,\n};\n\nexport default DatePicker;\n","import React from \"react\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\n\nconst ModalPopup = ({\n  onClose,\n  onYes,\n  id,\n  children,\n  title,\n  ok,\n  cancel,\n  type,\n  onChange,\n}) => {\n  return (\n    <div onClick={(e) => onClose(e)} className=\"popupOverlay\">\n      <div className=\"popupContent\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modalPopup\">\n          <h2>{title}</h2>\n          {type && type === \"reject\" && (\n            <React.Fragment>\n              <label htmlFor=\"modalPopup-comment\">Comment:</label>\n              <textarea\n                onFocus={(e) => e.stopPropagation()}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    onYes(e);\n                  }\n                }}\n                onChange={(e) => onChange(e)}\n                rows=\"3\"\n                id=\"modalPopup-comment\"\n                className=\"modalPopup-comment\"\n              />\n            </React.Fragment>\n          )}\n          <div className=\"modalPopup-buttons\">\n            <span\n              onClick={(e) => {\n                onYes(id);\n                onClose(e);\n              }}\n            >\n              {ok}\n            </span>\n            <span onClick={(e) => onClose(e)}>{cancel}</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalPopup.propTypes = {\n  onClose: PropTypes.any,\n  onYes: PropTypes.any,\n  id: PropTypes.any,\n  children: PropTypes.any,\n  title: PropTypes.any,\n  ok: PropTypes.any,\n  cancel: PropTypes.any,\n  type: PropTypes.any,\n  onChange: PropTypes.any,\n};\n\nexport default ModalPopup;\n","export const colourStyles = {\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isSelected\n        ? \"var(--no-active-tabs)\"\n        : isFocused\n        ? \"var(--no-active-tabs)\"\n        : \"var(--main-bg-color)\",\n      borderTop: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      borderBottom: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      color: \"#FFF\",\n      cursor: \"pointer\",\n    };\n  },\n  placeholder: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  singleValue: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  input: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n      padding: \"2px\",\n    };\n  },\n  indicatorSeparator: (styles) => {\n    return {\n      ...styles,\n      display: \"none\",\n    };\n  },\n  dropdownIndicator: (styles) => {\n    return {\n      ...styles,\n      padding: \"0\",\n      color: \"var(--text-white-color)\",\n    };\n  },\n  menu: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      background: \"var(--main-bg-color)\",\n    };\n  },\n  container: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      maxHeight: \"30px\",\n      fontSize: \"12px\",\n      width: \"100%\",\n      marginRight: \"2px\",\n    };\n  },\n  control: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      height: \"30px\",\n      display: \"flex\",\n      minHeight: \"0\",\n      alignItems: \"center\",\n      border: \"none\",\n      borderRadius: \"0\",\n      background: \"var(--main-bg-color)\",\n      boxShadow: \"none\",\n    };\n  },\n};\n","import moment from \"moment\";\nimport React from \"react\";\n\nexport const dateOptions = {\n  days: () => {\n    let days = [];\n    for (let i = 1; i <= 31; i++) {\n      days.push({\n        label: i,\n        value: i.toString().length > 1 ? i.toString() : \"0\" + i,\n      });\n    }\n    return days;\n  },\n  months: () => {\n    let months = [];\n    let start = new Date(1970, 0);\n    for (let i = 0; i < 12; i++) {\n      months.push({\n        label: moment(start.getMilliseconds()).add(i, \"month\").format(\"MMMM\"),\n        value: i.toString().length > 1 ? (i + 1).toString() : \"0\" + (i + 1),\n      });\n    }\n    return months;\n  },\n  years: () => {\n    let years = [];\n    let date = new Date();\n    let lastYear = date.getFullYear() - 18;\n    for (let i = 1920; i <= lastYear; i++) {\n      years.push({ label: i.toString(), value: i.toString() });\n    }\n    return years;\n  },\n};\nfunction optsMapper(opt) {\n  return { value: opt.id, label: opt.name };\n}\nexport const prepareOptions = (options) =>\n  options ? options.map(optsMapper) : [];\nexport const customSelectFilter = ({ filter, onChange, options }) => {\n  return (\n    <select\n      onChange={(event) => onChange(event.target.value)}\n      style={{\n        width: \"100%\",\n        height: \"20px\",\n        padding: 0,\n        background: \"#252f35\",\n        color: \"#fff\",\n      }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"\">Show All</option>\n      {options\n        .filter((item, i, s) => s.lastIndexOf(item) == i)\n        .map(function (item) {\n          return (\n            <option key={item.key} value={item.key}>\n              {item.value}\n            </option>\n          );\n        })}\n    </select>\n  );\n};\n","const now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nexport const dateRangeObj = [\n  { id: \"from\", value: yesterdayBegin.getTime().toString() },\n  { id: \"to\", value: todayEnd.getTime().toString() },\n];\n","const COLOR_RED = \"#ef4f1b\";\nconst COLOR_GREEN = \"#44be24\";\nconst COLOR_YELLOW = \"#ffc015\";\nexport const ORDER_STATUS_PARTIALLY_FILLED = \"partially filled\";\nexport const ORDER_STATUS_NEW = \"new\";\nexport const ORDER_STATUS_PENDING = \"pending\";\nexport const ORDER_STATUS_EXECUTED = \"executed\";\nexport const ORDER_STATUS_CANCELLED = \"cancelled\";\nexport const ORDER_STATUS_REJECTED = \"rejected\";\nexport const ORDER_STATUS_REJECTED_INVALID_QUANTITY =\n  \"rejected invalid quantity\";\nexport const ORDER_STATUS_REJECTED_INVALID_PRICE = \"rejected invalid price\";\nexport const ORDER_STATUS_REJECTED_INSUFFICIENT_QUANTITY =\n  \"rejected insufficient quantity\";\nexport const ORDER_STATUS_REJECTED_NO_LIQUIDITY = \"rejected no liquidity\";\nexport const ORDER_STATUS_REJECTED_NO_LIQUIDITY_PARCIALLY_FILLED =\n  \"rejected no liquidity partially filled\";\n\nexport const ORDER_STATUS_LIST = {\n  [ORDER_STATUS_NEW]: COLOR_GREEN,\n  [ORDER_STATUS_PENDING]: COLOR_YELLOW,\n  [ORDER_STATUS_PARTIALLY_FILLED]: COLOR_YELLOW,\n  [ORDER_STATUS_CANCELLED]: COLOR_RED,\n  [ORDER_STATUS_EXECUTED]: COLOR_GREEN,\n  [ORDER_STATUS_REJECTED]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INVALID_QUANTITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INVALID_PRICE]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INSUFFICIENT_QUANTITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_NO_LIQUIDITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_NO_LIQUIDITY_PARCIALLY_FILLED]: COLOR_RED,\n};\n\nexport const ORDER_SIDE_BUY = \"buy\";\nexport const ORDER_SIDE_SELL = \"sell\";\nexport const ORDER_SIDE_LIST = {\n  [ORDER_SIDE_BUY]: COLOR_GREEN,\n  [ORDER_SIDE_SELL]: COLOR_RED,\n};\n\nexport function makeStatusColor(status) {\n  return ORDER_STATUS_LIST[status];\n}\n\nexport function makeSideColor(side) {\n  return ORDER_SIDE_LIST[side];\n}\n","import moment from \"moment\";\n\nexport const timeStampToDate = (timeStamp) => {\n  return moment(timeStamp).format(\"DD-MM-YYYY\");\n};\nexport const timeStampToTime = (timeStamp) => {\n  return moment(timeStamp).format(\"HH:mm:ss.SSS\");\n};\n","export const SYMBOLS_INFO = {\n  BTC: {\n    symbol: \"BTC\",\n    title: \"Bitcoin\",\n    precision: 8,\n  },\n  ETH: {\n    symbol: \"ETH\",\n    title: \"Ethereum\",\n    precision: 8,\n  },\n  LTC: {\n    symbol: \"LTC\",\n    title: \"Litecoin\",\n    precision: 8,\n  },\n  USDT: {\n    symbol: \"USDT\",\n    title: \"Tether\",\n    precision: 8,\n  },\n};\n\nexport const ccyPairs = [\n  { key: \"BTC_USDT\", value: \"BTC/USDT\" },\n  { key: \"ETH_USDT\", value: \"ETH/USDT\" },\n  { key: \"LTC_USDT\", value: \"LTC/USDT\" },\n];\n\nexport const ccy = [\n  { key: \"USDT\", value: \"USDT\" },\n  // {key:'BTC', value: 'BTC'},\n  // {key:'ETH', value: 'ETH'},\n];\n\nexport const statementsType = [\n  { key: \"1\", value: \"withdrawal\" },\n  { key: \"2\", value: \"deposit\" },\n  { key: \"3\", value: \"fee\" },\n  { key: \"4\", value: \"duplicate\" },\n];\n\nexport const statementsStatuses = [\n  { key: \"0\", value: \"new\" },\n  { key: \"1\", value: \"pending\" },\n  { key: \"2\", value: \"approved\" },\n  { key: \"3\", value: \"rejected\" },\n  { key: \"4\", value: \"admin account\" },\n];\n\nexport const csvFileStatuses = [\n  { key: \"1\", value: \"processed\" },\n  { key: \"2\", value: \"failed\" },\n  { key: \"3\", value: \"pending\" },\n];\n\nexport const abaFilesStatuses = [\n  { key: \"7\", value: \"Rejected\" },\n  { key: \"3\", value: \"Pending\" },\n];\n\nexport const abaArchiveFilesStatuses = [\n  { key: \"7\", value: \"Approved\" },\n  { key: \"8\", value: \"Partially Approved\" },\n  { key: \"9\", value: \"Returned\" },\n];\n\nexport const sideValues = [\n  { key: \"sell\", value: \"sell\" },\n  { key: \"buy\", value: \"buy\" },\n];\n\nexport const withdrawalHistoryStatuses = [\n  { key: \"2\", value: \"Approved\" },\n  { key: \"4\", value: \"Returned\" },\n];\n\nexport const reportsWithdrawalsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"Returned\" },\n  { key: \"5\", value: \"AdminAccount\" },\n];\n\nexport const reportsDepositsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"AdminAccount\" },\n  { key: \"5\", value: \"Archive\" },\n];\n"],"names":["_ref","id","dispatch","useDispatch","summaryDate","useSelector","store","client","profile","summary","optionsData","options","state","setState","useState","optionsToUpdate","type","value","comment","status","name","sourceOfFunds","purpose","isLoading","useEffect","getAccountSummary","console","log","prevState","handleOnTextAreaChange","e","target","onStatusSelectChange","selectedOption","onSelectChange","setDefaultValue","field","length","find","el","Object","values","label","dataToUpdate","_jsxs","className","children","_jsx","Select","defaultValue","accountTypes","onChange","prepareOptions","classNamePrefix","styles","colourStyles","verificationStatuses","placeholder","rows","accountPurposes","onClick","updateAccountSummary","VerifiedFields","_ref2","identityDetails","dateOfBirth","day","month","year","email","firstName","lastName","mobileNumber","idDocument","getIdentityDetails","slice","setDefaultDateOfBirthValue","date","split","push","includes","handleOnChange","dateOptions","days","months","years","idDocumentTypes","onIdDocumentSelectChange","updateIdentityDetails","props","addressData","address","line1","line2","country","city","stateInfo","zipCode","getAddress","countries","updateAddress","optionsState","bankDetailsState","bankDetails","accountName","accountNumber","bankName","bsb","accountNameComment","accountNumberComment","bankNameComment","bsbComment","accountNameStatus","accountNumberStatus","bankNameStatus","bsbStatus","getBankDetails","detailToUpdate","updateBankDetails","directors","directorsId","setDirectorsId","directorsReducer","acc","reduce","map","href","photoId","rel","concat","prevDirectorsId","updateDirectors","companyDetails","details","companyName","australianBusinessNumber","australianCompanyNumber","taxFileNumber","companyAddress","companyWebsiteUrl","companyExtractDocuments","files","registrationDocumentsValue","getCompanyDetails","onInputChange","index","DownloadReportsButton","docs","url","accept","multiple","htmlFor","extractDocuments","document","getElementById","updateCompanyDetails","onHandlerSubmit","Directors","SuperFundDetails","useParams","superFundDetails","fundName","registrationDocuments","getSuperFundDetails","prev","updateSuperFundDetails","documents","idCloseUp","idCloseUpValue","selfieWithId","selfieValue","proofOfAddress","proofAddressValue","getDocuments","onHandlerSumbit","selfie","idCloseUpFile","proofAddressFile","sendDocument","Profile","accType","getClientActivity","getOptions","NavLink","to","URLS_LOCAL_GROUPS","clientUser","URLS_LOCAL_USER","accountSummary","personalInfo","addressInformation","bankingDetails","documentsUpload","renderTab","AccountSummary","PersonalInfo","AddressInformation","BankDetails","CompanyDetails","DocumentsUpload","clientBalances","balances","getClientBalances","data","i","currency","balance","toFixed","SYMBOLS_INFO","precision","availableBalance","columns","Header","accessor","Filter","filter","customSelectFilter","reportsDepositsStatuses","getProps","rowInfo","undefined","style","textAlign","filterable","Cell","row","timeStampToTime","original","time","timeStampToDate","timestamp","ccy","_ref3","clientDeposits","deposits","isFetchData","pages","dateRange","dateRangeObj","params","page","perPage","sorted","filtered","DatePicker","getClientDeposits","ReactTable","defaultPageSize","loading","manual","defaultFilterMethod","String","onFetchData","instance","Number","pageSize","reportsWithdrawalsStatuses","clientWithdrawals","withdrawals","setIsFetchData","setParams","dateRangeState","setDateRangeState","getClientWithdrawals","OrdersColumns","width","ccyPairs","symbol","replace","sideValues","color","makeSideColor","side","createdAt","updatedAt","column","makeStatusColor","TradesColumns","_ref4","tradesBounce","ordersBounce","_ref5","clientOrders","orders","clientTrades","trades","isOrdersFetchData","setOrdersFetchData","setOrders","ordersPages","setOrdersPages","isTradesFetchData","setTradesFetchData","setTrades","tradesPages","setTradesPages","tradesDateRange","setTradesDateRange","ordersDateRange","setOrdersDateRange","ordersParams","setOrdersParams","tradesParams","setTradesParams","getClientOrders","clearTimeout","setTimeout","getClientTrades","classNames","active","withdraw","trading","renderTabContent","Balances","Deposits","Withdraw","Trading","ClientUsers","bounce","Columns","handlerShowPopup","userStatus","publicId","lastLogin","sortable","src","title","alt","padding","display","alignItems","justifyContent","accountStatus","adminUpdateClientStatus","getAllClients","allClients","allClientsData","showPopup","setShowPopup","setId","getTdProps","overflow","getTableProps","getTbodyProps","ModalPopup","onYes","adminResetClientPassword","onClose","ok","cancel","token","user","accessToken","action","BuildUrl","method","now","Date","yesterdayBegin","getFullYear","getMonth","getDate","todayEnd","setValue","DateRangePicker","newValue","valueToTimestamp","getTime","toString","format","stopPropagation","React","onFocus","onKeyPress","key","option","isDisabled","isFocused","isSelected","backgroundColor","borderTop","borderBottom","cursor","singleValue","input","indicatorSeparator","dropdownIndicator","menu","boxSizing","background","container","maxHeight","fontSize","marginRight","control","height","minHeight","border","borderRadius","boxShadow","start","moment","getMilliseconds","add","lastYear","optsMapper","opt","event","item","s","lastIndexOf","COLOR_RED","COLOR_GREEN","COLOR_YELLOW","ORDER_STATUS_LIST","ORDER_SIDE_LIST","timeStamp","BTC","ETH","LTC","USDT","statementsType","statementsStatuses","csvFileStatuses","abaFilesStatuses","abaArchiveFilesStatuses","withdrawalHistoryStatuses"],"sourceRoot":""}