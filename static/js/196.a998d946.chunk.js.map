{"version":3,"file":"static/js/196.a998d946.chunk.js","mappings":"oNAkEA,QAzDA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,GAAGH,UACxCI,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAC3CC,EAAAA,EAAAA,YAAU,KACRT,GAASU,EAAAA,EAAAA,MAAY,GACpB,KACHD,EAAAA,EAAAA,YAAU,KACJP,GACFK,GAAa,EACf,GACC,CAACL,IACJ,MAAMS,GAAYC,EAAAA,EAAAA,UAAQ,IACnBV,EAGEA,EAAOW,KAAKC,IACjBC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAOF,EAAGI,OAAOC,QAAQ,IAAK,QAC9BF,EAAAA,EAAAA,KAAA,QACEG,UAAWC,IAAW,CACpBC,OAAQR,EAAGS,SACXC,SAAUV,EAAGS,WACZP,SAEFF,EAAGS,SAAW,SAAW,aAE5BN,EAAAA,EAAAA,KAAA,QAAMQ,QAASA,IAAMzB,GAAS0B,EAAAA,EAAAA,IAAqB,OAAQZ,EAAGI,SAASF,SAAC,UAGxEC,EAAAA,EAAAA,KAAA,QACEQ,QAASA,IAAMzB,GAAS0B,EAAAA,EAAAA,IAAqB,QAASZ,EAAGI,SAASF,SACnE,YAfMF,EAAGI,UAHL,MAuBR,CAAChB,IACJ,OACGI,IACCW,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBJ,UAC7BD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,sBAAqBJ,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcJ,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,sBAAqBJ,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eAERC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oBAAmBJ,SAAEL,WAM/C,C","sources":["components/AdminCabinet/MeManager/index.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport \"./index.less\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getFullME,\n  matchingEngineAction,\n} from \"../../../requests/adminRequests\";\n\nfunction MeManager() {\n  const dispatch = useDispatch();\n  const meList = useSelector((store) => store.me.meList);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    dispatch(getFullME());\n  }, []);\n  useEffect(() => {\n    if (meList) {\n      setIsLoading(false);\n    }\n  }, [meList]);\n  const displayME = useMemo(() => {\n    if (!meList) {\n      return null;\n    }\n    return meList.map((el) => (\n      <li key={el.symbol}>\n        <span>{el.symbol.replace(\"_\", \"/\")}</span>\n        <span\n          className={classNames({\n            active: el.isActive,\n            stopped: !el.isActive,\n          })}\n        >\n          {el.isActive ? \"Active\" : \"Stopped\"}\n        </span>\n        <span onClick={() => dispatch(matchingEngineAction(\"stop\", el.symbol))}>\n          Stop\n        </span>\n        <span\n          onClick={() => dispatch(matchingEngineAction(\"start\", el.symbol))}\n        >\n          Start\n        </span>\n      </li>\n    ));\n  }, [meList]);\n  return (\n    !isLoading && (\n      <div className=\"container-wrap\">\n        <div className=\"addressContainer mb\">\n          <h4>Matching Engine </h4>\n          <div className=\"meManagement\">\n            <div className=\"meManagement-header\">\n              <span>ME</span>\n              <span>Status</span>\n              <span>Action</span>\n            </div>\n            <ul className=\"meManagement-body\">{displayME}</ul>\n          </div>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default MeManager;\n"],"names":["dispatch","useDispatch","meList","useSelector","store","me","isLoading","setIsLoading","useState","useEffect","getFullME","displayME","useMemo","map","el","_jsxs","children","_jsx","symbol","replace","className","classNames","active","isActive","stopped","onClick","matchingEngineAction"],"sourceRoot":""}