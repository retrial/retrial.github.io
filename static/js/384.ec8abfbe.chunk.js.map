{"version":3,"file":"static/js/384.ec8abfbe.chunk.js","mappings":"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","sources":["components/AdminCabinet/ClientUsers/index.js","helpers/ModalPopup/index.js","helpers/reactSelectStyles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport { colourStyles } from \"../../../helpers/reactSelectStyles\";\nimport Select from \"react-select\";\nimport \"./index.less\";\nimport { URLS_LOCAL_GROUPS, URLS_LOCAL_USER } from \"../../../utils/config/URLS\";\nimport \"react-table/react-table.css\";\nimport ModalPopup from \"../../../helpers/ModalPopup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  adminResetClientPassword,\n  adminUpdateClientStatus,\n  getAllClients,\n} from \"../../../requests/adminRequests\";\nimport { NavLink } from \"react-router-dom\";\n\nlet bounce;\n\nfunction Columns({ params, handlerShowPopup, dispatch }) {\n  let userStatus = \"\";\n  return [\n    {\n      Header: \"Client Id\",\n      accessor: \"publicId\",\n      Cell: (row) => {\n        return (\n          <NavLink\n            to={\n              URLS_LOCAL_GROUPS.clientUser +\n              `/${row.original.id}` +\n              URLS_LOCAL_USER.profile +\n              URLS_LOCAL_USER.accountSummary\n            }\n          >\n            {row.original.publicId}\n          </NavLink>\n        );\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Country\",\n      accessor: \"country\",\n    },\n    {\n      Header: \"Account Type\",\n      accessor: \"accountType\",\n    },\n    {\n      Header: \"Verification Status\",\n      accessor: \"verificationStatus\",\n    },\n    {\n      Header: \"Last login \",\n      accessor: \"lastLogin\",\n      Cell: (row) => {\n        return <span>{row.original.lastLogin.replace(/\\./g, \"-\")}</span>;\n      },\n      filterable: false,\n    },\n    {\n      Header: \"Account Status\",\n      accessor: \"accountStatus\",\n      width: 100,\n    },\n    {\n      Header: \"Action\",\n      id: \"Action\",\n      filterable: false,\n      sortable: false,\n      width: 100,\n      Cell: (row) => (\n        <Select\n          options={[\n            { value: 2, label: \"block\" },\n            { value: 1, label: \"activate\" },\n          ]}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          onChange={(selectedOption) => {\n            userStatus = selectedOption.value;\n          }}\n          name=\"purpose\"\n          placeholder=\"action\"\n          styles={colourStyles}\n        />\n      ),\n    },\n    {\n      Header: \"Reset Password\",\n      sortable: false,\n      filterable: false,\n      width: 100,\n      Cell: (row) => {\n        return (\n          <span\n            className=\"resetPass\"\n            onClick={() => handlerShowPopup(row.original.id)}\n          >\n            <img\n              className=\"resetPass-icon\"\n              src=\"/img/svg/reset_pass.svg\"\n              title=\"Reset password\"\n              alt=\"Reset password\"\n            />\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Save\",\n      filterable: false,\n      sortable: false,\n      width: 80,\n      Cell: (row) => {\n        return (\n          <span\n            onClick={() => {\n              if (!userStatus) {\n                userStatus = row.original.accountStatus === \"blocked\" ? 2 : 1;\n              }\n              dispatch(adminUpdateClientStatus(row.original.id, userStatus));\n              setTimeout(() => dispatch(getAllClients(params)), 200);\n            }}\n            className=\"adminTableActions\"\n          >\n            <i className=\"far fa-save\" />\n          </span>\n        );\n      },\n    },\n  ];\n}\n\nfunction ClientUsers() {\n  const dispatch = useDispatch();\n  const allClients = useSelector((store) => store.allClients.allClients);\n  const { data: allClientsData, pages } = allClients;\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    setIsFetchData(false);\n  }, [allClientsData]);\n  const handlerShowPopup = (id) => {\n    setShowPopup(true);\n    setId(id);\n  };\n  const handlerClosePopup = () => {\n    setShowPopup(false);\n  };\n  return (\n    <div className=\"adminContainer\">\n      <ReactTable\n        defaultPageSize={20}\n        filterable\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        columns={Columns({\n          params,\n          handlerShowPopup,\n          dispatch,\n        })}\n        loading={isFetchData}\n        data={allClientsData || []}\n        pages={pages}\n        manual\n        onFetchData={(state, instance) => {\n          setIsFetchData(true);\n          setParams({\n            page: Number(state.page) + 1,\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getAllClients({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: state.filtered,\n                })\n              ),\n            200\n          );\n        }}\n        getTdProps={(state, rowInfo, column) => {\n          return {\n            style:\n              column.id === \"Action\"\n                ? { overflow: \"visible\", padding: \"0 7px\" }\n                : {},\n          };\n        }}\n        getTableProps={() => {\n          return {\n            style: { overflow: \"visible\" },\n          };\n        }}\n        getTbodyProps={() => {\n          return {\n            style: { overflow: \"visible\" },\n          };\n        }}\n      />\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            dispatch(adminResetClientPassword(id));\n          }}\n          onClose={(e) => handlerClosePopup(e)}\n          title={\"Reset password?\"}\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          id={id}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClientUsers;\n","import React from \"react\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\n\nconst ModalPopup = ({\n  onClose,\n  onYes,\n  id,\n  children,\n  title,\n  ok,\n  cancel,\n  type,\n  onChange,\n}) => {\n  return (\n    <div onClick={(e) => onClose(e)} className=\"popupOverlay\">\n      <div className=\"popupContent\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modalPopup\">\n          <h2>{title}</h2>\n          {type && type === \"reject\" && (\n            <React.Fragment>\n              <label htmlFor=\"modalPopup-comment\">Comment:</label>\n              <textarea\n                onFocus={(e) => e.stopPropagation()}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    onYes(e);\n                  }\n                }}\n                onChange={(e) => onChange(e)}\n                rows=\"3\"\n                id=\"modalPopup-comment\"\n                className=\"modalPopup-comment\"\n              />\n            </React.Fragment>\n          )}\n          <div className=\"modalPopup-buttons\">\n            <span\n              onClick={(e) => {\n                onYes(id);\n                onClose(e);\n              }}\n            >\n              {ok}\n            </span>\n            <span onClick={(e) => onClose(e)}>{cancel}</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalPopup.propTypes = {\n  onClose: PropTypes.any,\n  onYes: PropTypes.any,\n  id: PropTypes.any,\n  children: PropTypes.any,\n  title: PropTypes.any,\n  ok: PropTypes.any,\n  cancel: PropTypes.any,\n  type: PropTypes.any,\n  onChange: PropTypes.any,\n};\n\nexport default ModalPopup;\n","export const colourStyles = {\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isSelected\n        ? \"var(--no-active-tabs)\"\n        : isFocused\n        ? \"var(--no-active-tabs)\"\n        : \"var(--main-bg-color)\",\n      borderTop: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      borderBottom: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      color: \"#FFF\",\n      cursor: \"pointer\",\n    };\n  },\n  placeholder: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  singleValue: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  input: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n      padding: \"2px\",\n    };\n  },\n  indicatorSeparator: (styles) => {\n    return {\n      ...styles,\n      display: \"none\",\n    };\n  },\n  dropdownIndicator: (styles) => {\n    return {\n      ...styles,\n      padding: \"0\",\n      color: \"var(--text-white-color)\",\n    };\n  },\n  menu: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      background: \"var(--main-bg-color)\",\n    };\n  },\n  container: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      maxHeight: \"30px\",\n      fontSize: \"12px\",\n      width: \"100%\",\n      marginRight: \"2px\",\n    };\n  },\n  control: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      height: \"30px\",\n      display: \"flex\",\n      minHeight: \"0\",\n      alignItems: \"center\",\n      border: \"none\",\n      borderRadius: \"0\",\n      background: \"var(--main-bg-color)\",\n      boxShadow: \"none\",\n    };\n  },\n};\n"],"names":["bounce","Columns","_ref","params","handlerShowPopup","dispatch","userStatus","Header","accessor","Cell","row","_jsx","NavLink","to","URLS_LOCAL_GROUPS","clientUser","concat","original","id","URLS_LOCAL_USER","profile","accountSummary","children","publicId","lastLogin","replace","filterable","width","sortable","Select","options","value","label","className","classNamePrefix","onChange","selectedOption","name","placeholder","styles","colourStyles","onClick","src","title","alt","getProps","state","rowInfo","undefined","style","padding","display","alignItems","justifyContent","accountStatus","adminUpdateClientStatus","setTimeout","getAllClients","useDispatch","allClients","useSelector","store","data","allClientsData","pages","isFetchData","setIsFetchData","useState","showPopup","setShowPopup","setId","setParams","page","perPage","sorted","filtered","useEffect","_jsxs","ReactTable","defaultPageSize","defaultFilterMethod","filter","String","columns","loading","manual","onFetchData","instance","Number","pageSize","clearTimeout","getTdProps","column","overflow","getTableProps","getTbodyProps","ModalPopup","onYes","adminResetClientPassword","onClose","e","ok","cancel","type","stopPropagation","React","htmlFor","onFocus","onKeyPress","key","rows","option","isDisabled","isFocused","isSelected","backgroundColor","borderTop","borderBottom","color","cursor","singleValue","input","indicatorSeparator","dropdownIndicator","menu","boxSizing","background","container","maxHeight","fontSize","marginRight","control","height","minHeight","border","borderRadius","boxShadow"],"sourceRoot":""}