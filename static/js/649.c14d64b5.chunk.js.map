{"version":3,"file":"static/js/649.c14d64b5.chunk.js","mappings":"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","sources":["store/actions/platformBalancesAction/index.js","requests/platformBalancesRequests/index.js","components/AdminCabinet/PlatformBalances/UserBalances/index.js","components/AdminCabinet/PlatformBalances/index.js","utils/config/exchange_ids.js"],"sourcesContent":["import * as platformBalancesActions from \"./constants.js\";\n\nexport function getPlatformBalancesSuccess(balances) {\n  return {\n    type: platformBalancesActions.PLATFORM_GET_BALANCES_SUCCESS,\n    payload: balances,\n  };\n}\n\nexport function getPlatformBalancesFailure(error) {\n  return {\n    type: platformBalancesActions.PLATFORM_GET_BALANCES_FAILURE,\n    payload: error,\n  };\n}\n\nexport function getUsersBalancesByCcySuccess(balances) {\n  return {\n    type: platformBalancesActions.PLATFORM_GET_USERS_BALANCES_BY_CCY_SUCCESS,\n    payload: balances,\n  };\n}\n\nexport function getUsersBalancesByCcyFailure(error) {\n  return {\n    type: platformBalancesActions.PLATFORM_GET_USERS_BALANCES_BY_CCY_FAILURE,\n    payload: error,\n  };\n}\n","import { BuildAPIUrl, URLS } from \"../../utils/config/URLS\";\nimport { GetAxios } from \"../../helpers/axios\";\nimport {\n  getPlatformBalancesFailure,\n  getPlatformBalancesSuccess,\n  getUsersBalancesByCcyFailure,\n  getUsersBalancesByCcySuccess,\n} from \"../../store/actions/platformBalancesAction\";\nconst axios = GetAxios();\n\nexport function getUsersBalancesByCcy(ccy, params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BALANCES + `/clients/${ccy}`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getUsersBalancesByCcySuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getUsersBalancesByCcyFailure(res.response.data.error));\n        } else {\n          dispatch(getUsersBalancesByCcyFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getPlatformBalances() {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BALANCES + `/platform`), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPlatformBalancesSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPlatformBalancesFailure(res.response.data.error));\n        } else {\n          dispatch(getPlatformBalancesFailure(res.message));\n        }\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport { SYMBOLS_INFO } from \"../../../../utils/config/exchange_ids\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsersBalancesByCcy } from \"../../../../requests/platformBalancesRequests\";\n\nfunction UserPlatformBalances({ ccy, total, commission }) {\n  const dispatch = useDispatch();\n  const usersBalancesByCcy = useSelector(\n    (store) => store.platformBalances.usersBalancesByCcy\n  );\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [balances, setBalances] = useState(usersBalancesByCcy.data || []);\n  const [pages, setPages] = useState(1);\n  useEffect(() => {\n    if (usersBalancesByCcy !== balances) {\n      setPages(usersBalancesByCcy.pages);\n      setBalances(usersBalancesByCcy.data || []);\n      setIsFetchData(false);\n    }\n  }, [usersBalancesByCcy]);\n  const columns = [\n    {\n      Header: \"User ID\",\n      accessor: \"publicId\",\n      width: 100,\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"User Name\",\n      Cell: (row) => {\n        return (\n          <span>{row.original.firstName + \" \" + row.original.lastName}</span>\n        );\n      },\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Balance\",\n      accessor: \"clientBalance\",\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.clientBalance).toFixed(SYMBOLS_INFO[ccy].precision)}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Platform commission\",\n      accessor: \"platformFees\",\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.platformFees * -1).toFixed(\n              SYMBOLS_INFO[ccy].precision\n            )}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Imbalance\",\n      accessor: \"imbalance\",\n      width: 100,\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.imbalance).toFixed(SYMBOLS_INFO[ccy].precision)}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n  ];\n\n  return (\n    <div className=\"platformBalances\">\n      <div className=\"platformBalances-wrap\">\n        <div className=\"platformBalances-total\">\n          <span>Currency</span>\n          <span>{ccy}</span>\n        </div>\n        <div className=\"platformBalances-total\">\n          <span>Total commission</span>\n          <span>{(+commission).toFixed(SYMBOLS_INFO[ccy].precision)}</span>\n        </div>\n        <div className=\"platformBalances-total\">\n          <span>Total balance</span>\n          <span>{(+total).toFixed(SYMBOLS_INFO[ccy].precision)}</span>\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={balances}\n        pages={pages}\n        manual\n        onFetchData={(state, instance) => {\n          setIsFetchData(true);\n          dispatch(\n            getUsersBalancesByCcy(ccy, {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n            })\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nUserPlatformBalances.propTypes = {\n  ccy: PropTypes.any,\n  total: PropTypes.any,\n  commission: PropTypes.any,\n};\n\nexport default UserPlatformBalances;\n","import React, { useState, useEffect } from \"react\";\nimport \"./index.less\";\nimport ReactTable from \"react-table\";\nimport UserPlatformBalances from \"./UserBalances\";\nimport { URLS_LOCAL_GROUPS } from \"../../../utils/config/URLS\";\nimport classNames from \"classnames\";\nimport { SYMBOLS_INFO } from \"../../../utils/config/exchange_ids\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getPlatformBalances,\n  getUsersBalancesByCcy,\n} from \"../../../requests/platformBalancesRequests\";\n\nfunction PlatformBalances() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  const platformBalancesInfo = useSelector(\n    (store) => store.platformBalances.balances\n  );\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [platformBalances, setPlatformBalances] = useState(\n    platformBalancesInfo || []\n  );\n  const [ccy, setCcy] = useState(\"USDT\");\n  const [total, setTotal] = useState(\"\");\n  const [commission, setCommission] = useState(\"\");\n  const setDataToState = (ccy, total, commission) => {\n    setCcy(ccy);\n    setTotal(total);\n    setCommission(commission);\n  };\n  useEffect(() => {\n    if (platformBalancesInfo !== platformBalances) {\n      setPlatformBalances(platformBalancesInfo || []);\n      setIsFetchData(false);\n      setTotal(platformBalancesInfo && platformBalancesInfo[0].platformBalance);\n      setCommission(\n        platformBalancesInfo && platformBalancesInfo[0].platformFees * -1\n      );\n    }\n  }, [platformBalancesInfo]);\n  const columns = [\n    {\n      Header: \"Currency\",\n      Cell: (row) => {\n        return (\n          <span\n            className={classNames({\n              balanceCcy: true,\n              \"active-ccy\": params.ccy === row.original.currency,\n            })}\n            onClick={() => {\n              dispatch(\n                getUsersBalancesByCcy(row.original.currency, {\n                  page: 1,\n                  perPage: 20,\n                  sorted: [],\n                })\n              );\n              setDataToState(\n                row.original.currency,\n                row.original.platformAssets,\n                row.original.platformFees\n              );\n              navigate(\n                URLS_LOCAL_GROUPS.platformBalances + `/${row.original.currency}`\n              );\n            }}\n          >\n            {row.original.currency}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Balance\",\n      accessor: \"platformBalance\",\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.clientBalance).toFixed(\n              SYMBOLS_INFO[row.original.currency].precision\n            )}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Platform commission\",\n      accessor: \"platformFees\",\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.platformFees * -1).toFixed(\n              SYMBOLS_INFO[row.original.currency].precision\n            )}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Total\",\n      accessor: \"platformBalance\",\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.platformBalance).toFixed(\n              SYMBOLS_INFO[row.original.currency].precision\n            )}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Imbalance\",\n      accessor: \"imbalance\",\n      getProps: (state, rowInfo, column) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <span>\n            {(+row.original.imbalance).toFixed(\n              SYMBOLS_INFO[row.original.currency].precision\n            )}\n          </span>\n        );\n      },\n    },\n  ];\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"platformBalances-titles\">\n        <span>Platform balances</span>\n        <span>User balances</span>\n      </div>\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta platformBalances-wrap\">\n          <div className=\"platformBalances\">\n            <ReactTable\n              defaultPageSize={3}\n              columns={columns}\n              loading={isFetchData}\n              data={platformBalances}\n              manual\n              onFetchData={() => {\n                setIsFetchData(true);\n                dispatch(getPlatformBalances());\n              }}\n            />\n          </div>\n          <UserPlatformBalances\n            ccy={ccy}\n            commission={commission}\n            total={total}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlatformBalances;\n","export const SYMBOLS_INFO = {\n  BTC: {\n    symbol: \"BTC\",\n    title: \"Bitcoin\",\n    precision: 8,\n  },\n  ETH: {\n    symbol: \"ETH\",\n    title: \"Ethereum\",\n    precision: 8,\n  },\n  LTC: {\n    symbol: \"LTC\",\n    title: \"Litecoin\",\n    precision: 8,\n  },\n  USDT: {\n    symbol: \"USDT\",\n    title: \"Tether\",\n    precision: 8,\n  },\n};\n\nexport const ccyPairs = [\n  { key: \"BTC_USDT\", value: \"BTC/USDT\" },\n  { key: \"ETH_USDT\", value: \"ETH/USDT\" },\n  { key: \"LTC_USDT\", value: \"LTC/USDT\" },\n];\n\nexport const ccy = [\n  { key: \"USDT\", value: \"USDT\" },\n  // {key:'BTC', value: 'BTC'},\n  // {key:'ETH', value: 'ETH'},\n];\n\nexport const statementsType = [\n  { key: \"1\", value: \"withdrawal\" },\n  { key: \"2\", value: \"deposit\" },\n  { key: \"3\", value: \"fee\" },\n  { key: \"4\", value: \"duplicate\" },\n];\n\nexport const statementsStatuses = [\n  { key: \"0\", value: \"new\" },\n  { key: \"1\", value: \"pending\" },\n  { key: \"2\", value: \"approved\" },\n  { key: \"3\", value: \"rejected\" },\n  { key: \"4\", value: \"admin account\" },\n];\n\nexport const csvFileStatuses = [\n  { key: \"1\", value: \"processed\" },\n  { key: \"2\", value: \"failed\" },\n  { key: \"3\", value: \"pending\" },\n];\n\nexport const abaFilesStatuses = [\n  { key: \"7\", value: \"Rejected\" },\n  { key: \"3\", value: \"Pending\" },\n];\n\nexport const abaArchiveFilesStatuses = [\n  { key: \"7\", value: \"Approved\" },\n  { key: \"8\", value: \"Partially Approved\" },\n  { key: \"9\", value: \"Returned\" },\n];\n\nexport const sideValues = [\n  { key: \"sell\", value: \"sell\" },\n  { key: \"buy\", value: \"buy\" },\n];\n\nexport const withdrawalHistoryStatuses = [\n  { key: \"2\", value: \"Approved\" },\n  { key: \"4\", value: \"Returned\" },\n];\n\nexport const reportsWithdrawalsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"Returned\" },\n  { key: \"5\", value: \"AdminAccount\" },\n];\n\nexport const reportsDepositsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"AdminAccount\" },\n  { key: \"5\", value: \"Archive\" },\n];\n"],"names":["getPlatformBalancesFailure","error","type","platformBalancesActions","payload","getUsersBalancesByCcyFailure","axios","GetAxios","getUsersBalancesByCcy","ccy","params","dispatch","get","BuildAPIUrl","URLS","BALANCES","concat","headers","then","res","balances","data","catch","response","message","getPlatformBalances","_ref","total","commission","useDispatch","usersBalancesByCcy","useSelector","store","platformBalances","isFetchData","setIsFetchData","useState","setBalances","pages","setPages","useEffect","columns","Header","accessor","width","getProps","state","rowInfo","column","undefined","style","textAlign","Cell","row","_jsx","children","original","firstName","lastName","clientBalance","toFixed","SYMBOLS_INFO","precision","platformFees","imbalance","_jsxs","className","ReactTable","defaultPageSize","loading","manual","onFetchData","instance","page","Number","perPage","pageSize","sorted","navigate","useNavigate","useParams","platformBalancesInfo","setPlatformBalances","setCcy","setTotal","setCommission","platformBalance","classNames","balanceCcy","currency","onClick","setDataToState","platformAssets","URLS_LOCAL_GROUPS","padding","UserPlatformBalances","BTC","symbol","title","ETH","LTC","USDT","ccyPairs","key","value","statementsType","statementsStatuses","csvFileStatuses","abaFilesStatuses","abaArchiveFilesStatuses","sideValues","withdrawalHistoryStatuses","reportsWithdrawalsStatuses","reportsDepositsStatuses"],"sourceRoot":""}