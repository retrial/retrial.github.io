{"version":3,"file":"static/js/750.c8cce7d3.chunk.js","mappings":"+PAcA,MA+CA,EA/CuBA,IACrB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKH,YAC5CI,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KACnCC,EAAAA,EAAAA,YAAU,KACRT,GAASU,EAAAA,EAAAA,MAA6B,GACrC,CAACX,IACJ,MAAMY,EAAiBA,CAACC,EAAMC,KAC5BN,EAASM,EAAMC,OAAOC,OACtB,IAAIC,EAAO,CAAEC,MAAOL,EAAMG,MAAOF,EAAMC,OAAOC,OAC9Cf,GAASkB,EAAAA,EAAAA,IAAkBF,GAAM,EAE7BG,EAAiBN,IACrBA,EAAMO,iBACNpB,GAASqB,EAAAA,EAAAA,GAAyBf,GAAO,EAE3C,OACEgB,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAACC,MAAM,iBAAgBC,SAAA,EACnCH,EAAAA,EAAAA,MAAA,QAAMI,SAAWb,GAAUM,EAAcN,GAAOY,SAAA,EAC9CE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJhB,KAAK,QACLiB,KAAK,QACLL,MAAK,QAAAM,OAAUC,EAAAA,IACfC,UAAU,aACVC,YAAW,QAAAH,OAAUC,EAAAA,IACrBhB,MAAOT,EACP4B,MAAOhC,EAAgB,MACvBiC,SAAWtB,GAAUF,EAAe,QAASE,GAC7CuB,OAASvB,GAAUF,EAAe,QAASE,MAE7Cc,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBP,UACjCE,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLzB,KAAK,SACLoB,UAAU,uBACVM,QAAUzB,GAAUM,EAAcN,GAAOY,SAExCc,EAAAA,KAAKC,EAAE,WAADV,OAAYW,EAAAA,aAIzBd,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBP,UACrCE,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,WAAUlB,SAAEc,EAAAA,KAAKC,EAAE,WAADV,OAAYc,EAAAA,WAE3B,C","sources":["components/ResetPassword/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { I18n } from \"react-redux-i18n\";\nimport Input from \"../Common/Input\";\nimport Button from \"../Common/Button\";\nimport { LOG_IN, EMAIL, SEND_RESET_LINK } from \"../../utils/config/language\";\nimport CenteredBlock from \"../Common/CenteredBlock\";\nimport {\n  onChangeInputData,\n  resetAllErrorMessageAction,\n} from \"../../store/actions/userActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserSendResetEmailAction } from \"../../requests/userRequests\";\n\nconst ResetPassword = (props) => {\n  const dispatch = useDispatch();\n  const messages = useSelector((store) => store.user.messages);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    dispatch(resetAllErrorMessageAction());\n  }, [props]);\n  const handleOnChange = (type, event) => {\n    setEmail(event.target.value);\n    let args = { field: type, value: event.target.value };\n    dispatch(onChangeInputData(args));\n  };\n  const handleOnClick = (event) => {\n    event.preventDefault();\n    dispatch(UserSendResetEmailAction(email));\n  };\n  return (\n    <CenteredBlock title=\"Reset password\">\n      <form onSubmit={(event) => handleOnClick(event)}>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          title={`form.${EMAIL}`}\n          className=\"input-wrap\"\n          placeholder={`form.${EMAIL}`}\n          value={email}\n          error={messages[\"email\"]}\n          onChange={(event) => handleOnChange(\"email\", event)}\n          onBlur={(event) => handleOnChange(\"email\", event)}\n        />\n        <div className=\"signin-btn-wrapper\">\n          <Button\n            type=\"submit\"\n            className=\"signin-btn btn-green\"\n            onClick={(event) => handleOnClick(event)}\n          >\n            {I18n.t(`buttons.${SEND_RESET_LINK}`)}\n          </Button>\n        </div>\n      </form>\n      <div className=\"signin-options-wrapper\">\n        <Link to=\"/sign-in\">{I18n.t(`buttons.${LOG_IN}`)}</Link>\n      </div>\n    </CenteredBlock>\n  );\n};\n\nexport default ResetPassword;\n"],"names":["props","dispatch","useDispatch","messages","useSelector","store","user","email","setEmail","useState","useEffect","resetAllErrorMessageAction","handleOnChange","type","event","target","value","args","field","onChangeInputData","handleOnClick","preventDefault","UserSendResetEmailAction","_jsxs","CenteredBlock","title","children","onSubmit","_jsx","Input","name","concat","EMAIL","className","placeholder","error","onChange","onBlur","Button","onClick","I18n","t","SEND_RESET_LINK","Link","to","LOG_IN"],"sourceRoot":""}