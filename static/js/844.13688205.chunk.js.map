{"version":3,"file":"static/js/844.13688205.chunk.js","mappings":"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","sources":["store/actions/platformReportsActions/index.js","requests/platformReportRequests/index.js","components/AdminCabinet/Reports/Deposits/index.js","components/AdminCabinet/Reports/Trades/index.js","components/AdminCabinet/Reports/Orders/index.js","components/AdminCabinet/Reports/Withdrawals/index.js","components/AdminCabinet/Reports/index.js","components/Common/DownloadReportsButton.js","helpers/DataPicker/index.js","helpers/selectOptions.js","helpers/setDefaultDateRangeFilterQuery.js","helpers/setFieldColor.js","helpers/timeStampToDate.js","utils/config/exchange_ids.js"],"sourcesContent":["import * as platformReportsActions from \"./constants.js\";\n\nexport function getPlatformTradesSuccess(trades) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_TRADES_REPORTS_SUCCESS,\n    payload: trades,\n  };\n}\n\nexport function getPlatformTradesFailure(error) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_TRADES_REPORTS_FAILURE,\n    payload: error,\n  };\n}\n\nexport function getPlatformOrdersSuccess(orders) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_ORDERS_REPORTS_SUCCESS,\n    payload: orders,\n  };\n}\n\nexport function getPlatformOrdersFailure(error) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_ORDERS_REPORTS_FAILURE,\n    payload: error,\n  };\n}\n\nexport function getPlatformWithdrawalsSuccess(withdrawals) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_WITHDRAWALS_REPORTS_SUCCESS,\n    payload: withdrawals,\n  };\n}\n\nexport function getPlatformWithdrawalsFailure(error) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_WITHDRAWALS_REPORTS_FAILURE,\n    payload: error,\n  };\n}\n\nexport function getPlatformDepositsSuccess(deposits) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_DEPOSITS_REPORTS_SUCCESS,\n    payload: deposits,\n  };\n}\n\nexport function getPlatformDepositsFailure(error) {\n  return {\n    type: platformReportsActions.PLATFORM_GET_DEPOSITS_REPORTS_FAILURE,\n    payload: error,\n  };\n}\n","import { BuildAPIUrl, URLS } from \"../../utils/config/URLS\";\nimport { GetAxios } from \"../../helpers/axios\";\nimport {\n  getPlatformDepositsFailure,\n  getPlatformDepositsSuccess,\n  getPlatformOrdersFailure,\n  getPlatformOrdersSuccess,\n  getPlatformTradesFailure,\n  getPlatformTradesSuccess,\n  getPlatformWithdrawalsFailure,\n  getPlatformWithdrawalsSuccess,\n} from \"../../store/actions/platformReportsActions\";\nconst axios = GetAxios();\n\nexport function getPlatformDeposits(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.REPORTS + `/deposits`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPlatformDepositsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPlatformDepositsFailure(res.response.data.error));\n        } else {\n          dispatch(getPlatformDepositsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getPlatformWithdrawals(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.REPORTS + `/withdrawals`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPlatformWithdrawalsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPlatformWithdrawalsFailure(res.response.data.error));\n        } else {\n          dispatch(getPlatformWithdrawalsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getPlatformOrders(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.REPORTS + `/orders`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPlatformOrdersSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPlatformOrdersFailure(res.response.data.error));\n        } else {\n          dispatch(getPlatformOrdersFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getPlatformTrades(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.REPORTS + `/trades`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPlatformTradesSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPlatformTradesFailure(res.response.data.error));\n        } else {\n          dispatch(getPlatformTradesFailure(res.message));\n        }\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport DownloadReportsButton from \"../../../../components/Common/DownloadReportsButton\";\nimport { BuildAPIUrl, URLS } from \"../../../../utils/config/URLS\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport {\n  ccy,\n  reportsDepositsStatuses,\n} from \"../../../../utils/config/exchange_ids\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPlatformDeposits } from \"../../../../requests/platformReportRequests\";\n\nconst columns = [\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: reportsDepositsStatuses,\n      }),\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"User ID\",\n    accessor: \"clientId\",\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"User Name\",\n    accessor: \"clientName\",\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Deposit ID\",\n    accessor: \"publicId\",\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"right\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Date\",\n    filterable: false,\n    width: 150,\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.time) +\n            \" \" +\n            timeStampToTime(row.original.timestamp)}\n        </span>\n      );\n    },\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Currency\",\n    accessor: \"currency\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    filterable: false,\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"right\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"fee\",\n    filterable: false,\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"right\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Bank Account from\",\n    accessor: \"accountNumber\",\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Bank Account to\",\n    accessor: \"bankAccountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Address from\",\n    accessor: \"addressFrom\",\n    filterable: false,\n  },\n  {\n    Header: \"Account to\",\n    accessor: \"accountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Transaction Hash\",\n    accessor: \"description\",\n    getProps: () => {\n      return {\n        style: {\n          textAlign: \"left\",\n        },\n      };\n    },\n  },\n  {\n    Header: \"Method\",\n    accessor: \"method\",\n    filterable: false,\n  },\n];\n\nconst DepositsReports = () => {\n  const dispatch = useDispatch();\n  const depositsData = useSelector((store) => store.platformReports.deposits);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [deposits, setDeposits] = useState(depositsData.data);\n  const [pages, setPages] = useState(1);\n  const [dateRange, setDateRange] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    if (depositsData !== deposits) {\n      setPages(depositsData.pages);\n      setDeposits(depositsData.data);\n      setIsFetchData(false);\n    }\n  }, [depositsData, deposits]);\n  const handleDateRange = (value) => {\n    if (value) {\n      setDateRange([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n      dispatch(getPlatformDeposits(params));\n    } else {\n      setDateRange([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n      dispatch(getPlatformDeposits(params));\n    }\n  };\n  const urlParams = { ...params, filtered: params.filtered.concat(dateRange) };\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Deposits</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRange} />\n          <DownloadReportsButton\n            url={BuildAPIUrl(URLS.REPORTS) + \"/deposits/download\"}\n            params={urlParams}\n          />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={deposits}\n        pages={pages}\n        manual\n        filterable={true}\n        sortable={true}\n        onFetchData={(state) => {\n          setIsFetchData(true);\n          setParams({\n            page: Number(state.page),\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n          dispatch(\n            getPlatformDeposits({\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered.concat(dateRange),\n            })\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DepositsReports;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../helpers/timeStampToDate\";\nimport { makeSideColor } from \"../../../../helpers/setFieldColor\";\nimport { BuildAPIUrl, URLS } from \"../../../../utils/config/URLS\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport \"./index.less\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport { sideValues, ccyPairs } from \"../../../../utils/config/exchange_ids\";\nimport DownloadReportsButton from \"../../../../components/Common/DownloadReportsButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPlatformTrades } from \"../../../../requests/platformReportRequests\";\n\nlet bounce;\nconst columns = [\n  {\n    Header: \"Trade ID\",\n    accessor: \"id\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Maker order ID\",\n    accessor: \"makerOrderId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Taker order ID\",\n    accessor: \"takerOrderId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Pair\",\n    accessor: \"symbol\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccyPairs }),\n    Cell: (row) => {\n      return row.original.symbol.replace(\"_\", \"/\");\n    },\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Side\",\n    accessor: \"side\",\n    filterable: true,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: sideValues }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeSideColor(rowInfo.row.side),\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"feeAmount\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee Currency\",\n    accessor: \"feeCcy\",\n  },\n  {\n    Header: \"Date\",\n    accessor: \"timestamp\",\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.timestamp)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    accessor: \"timestamp\",\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.timestamp)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Maker ID\",\n    accessor: \"publicMakerClientId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Taker ID\",\n    accessor: \"publicTakerClientId\",\n    filterable: true,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst TradesReports = (props) => {\n  const tradesData = useSelector((store) => store.platformReports.trades);\n  const dispatch = useDispatch();\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [trades, setTrades] = useState(tradesData.data);\n  console.log(trades);\n  const [pages, setPages] = useState(1);\n  const [dateRangeFilter, setDateRangeFilter] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n\n  useEffect(() => {\n    setPages(tradesData.pages);\n    setTrades(tradesData.data);\n    setIsFetchData(false);\n  }, [tradesData]);\n\n  const handleDateRangeChange = (value) => {\n    if (value) {\n      setDateRangeFilter([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n      dispatch(getPlatformTrades(params));\n    } else {\n      setDateRangeFilter([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n      dispatch(getPlatformTrades(params));\n    }\n  };\n\n  const handleFetchData = (state) => {\n    setIsFetchData(true);\n    setParams({\n      page: Number(state.page) + 1,\n      perPage: state.pageSize,\n      sorted: state.sorted,\n      filtered: state.filtered,\n    });\n    clearTimeout(bounce);\n    bounce = setTimeout(() => {\n      dispatch(\n        getPlatformTrades({\n          page: Number(state.page) + 1,\n          perPage: state.pageSize,\n          sorted: state.sorted,\n          filtered: state.filtered.concat(dateRangeFilter),\n        })\n      );\n    }, 200);\n  };\n\n  const urlParams = {\n    ...params,\n    filtered: params.filtered.concat(dateRangeFilter),\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Trades</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRangeChange} />\n          <DownloadReportsButton\n            url={BuildAPIUrl(URLS.REPORTS) + \"/trades/download\"}\n            params={urlParams}\n          />\n        </div>\n      </div>\n      <ReactTable\n        data={trades}\n        pages={pages}\n        loading={isFetchData}\n        defaultPageSize={20}\n        manual\n        columns={columns}\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={handleFetchData}\n      />\n    </div>\n  );\n};\n\nexport default TradesReports;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../helpers/timeStampToDate\";\nimport {\n  makeSideColor,\n  makeStatusColor,\n} from \"../../../../helpers/setFieldColor\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { BuildAPIUrl, URLS } from \"../../../../utils/config/URLS\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport \"./index.less\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport { ccyPairs, sideValues } from \"../../../../utils/config/exchange_ids\";\nimport DownloadReportsButton from \"../../../../components/Common/DownloadReportsButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPlatformOrders } from \"../../../../requests/platformReportRequests\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"User ID\",\n    accessor: \"publicUserId\",\n    filterable: true,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Order ID\",\n    accessor: \"id\",\n    filterable: true,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Pair\",\n    accessor: \"symbol\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccyPairs }),\n    Cell: (row) => {\n      return row.original.symbol.replace(\"_\", \"/\");\n    },\n    filterable: true,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Order Type\",\n    accessor: \"type\",\n    width: 100,\n    filterable: true,\n  },\n  {\n    Header: \"Side\",\n    accessor: \"side\",\n    width: 100,\n    filterable: true,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: sideValues }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeSideColor(rowInfo.row.side),\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"quantity\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Price\",\n    accessor: \"price\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Created\",\n    accessor: \"createdAt\",\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.createdAt) +\n            \" \" +\n            timeStampToTime(row.original.createdAt)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Updated\",\n    accessor: \"updatedAt\",\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.updatedAt) +\n            \" \" +\n            timeStampToTime(row.original.updatedAt)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    filterable: true,\n    getProps: (state, rowInfo, column) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            color: makeStatusColor(rowInfo.row.status),\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst OrdersReports = () => {\n  const dispatch = useDispatch();\n  const ordersData = useSelector((store) => store.platformReports.orders);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [orders, setOrders] = useState(ordersData.data);\n  const [pages, setPages] = useState(1);\n  const [dateRangeFilter, setDateRangeFilter] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    if (ordersData !== orders) {\n      setPages(ordersData.pages);\n      setOrders(ordersData.data);\n      setIsFetchData(false);\n    }\n  }, [ordersData, orders]);\n  const handleDateRangeChange = (value) => {\n    if (value) {\n      setDateRangeFilter([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n      dispatch(getPlatformOrders(params));\n    } else {\n      setDateRangeFilter([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n      dispatch(getPlatformOrders(params));\n    }\n  };\n  const handleFetchData = (state) => {\n    setIsFetchData(true);\n    setParams({\n      page: Number(state.page) + 1,\n      perPage: state.pageSize,\n      sorted: state.sorted,\n      filtered: state.filtered,\n    });\n    clearTimeout(bounce);\n    bounce = setTimeout(() => {\n      dispatch(\n        getPlatformOrders({\n          page: Number(state.page) + 1,\n          perPage: state.pageSize,\n          sorted: state.sorted,\n          filtered: state.filtered.concat(dateRangeFilter),\n        })\n      );\n    }, 200);\n  };\n  const urlParams = {\n    ...params,\n    filtered: params.filtered.concat(dateRangeFilter),\n  };\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Orders</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRangeChange} />\n          <DownloadReportsButton\n            url={BuildAPIUrl(URLS.REPORTS) + \"/orders/download\"}\n            params={urlParams}\n          />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={orders}\n        pages={pages}\n        defaultSorted={[\n          {\n            id: \"id\",\n            desc: true,\n          },\n        ]}\n        manual\n        defaultFilterMethod={(filter, row) =>\n          String(row[filter.id]) === filter.value\n        }\n        onFetchData={handleFetchData}\n      />\n    </div>\n  );\n};\n\nexport default OrdersReports;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport {\n  ccy,\n  reportsWithdrawalsStatuses,\n} from \"../../../../utils/config/exchange_ids\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../helpers/timeStampToDate\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport DownloadReportsButton from \"../../../../components/Common/DownloadReportsButton\";\nimport { BuildAPIUrl, URLS } from \"../../../../utils/config/URLS\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPlatformWithdrawals } from \"../../../../requests/platformReportRequests\";\n\nlet columns = [\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: reportsWithdrawalsStatuses,\n      }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"User ID\",\n    accessor: \"clientId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"User Name\",\n    accessor: \"clientName\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Withdrawal ID\",\n    accessor: \"publicId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    filterable: false,\n    accessor: \"time\",\n    width: 150,\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.time) +\n            \" \" +\n            timeStampToTime(row.original.timestamp)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Currency\",\n    accessor: \"currency\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"fee\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account from\",\n    accessor: \"accountNumber\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Account to\",\n    accessor: \"bankAccountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Address from\",\n    accessor: \"addressFrom\",\n    filterable: false,\n  },\n  {\n    Header: \"Account to\",\n    accessor: \"accountTo\",\n    filterable: false,\n  },\n  {\n    Header: \"Transaction Hash\",\n    accessor: \"description\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Method\",\n    accessor: \"method\",\n    filterable: false,\n  },\n];\n\nconst WithdrawalsReports = () => {\n  const dispatch = useDispatch();\n  const withdrawalsList = useSelector(\n    (store) => store.platformReports.withdrawals\n  );\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [withdrawals, setWithdrawals] = useState(withdrawalsList.data);\n  const [pages, setPages] = useState(1);\n  const [dateRangeState, setDateRangeState] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    if (withdrawalsList !== withdrawals) {\n      setPages(withdrawalsList.pages);\n      setWithdrawals(withdrawalsList.data);\n      setIsFetchData(false);\n    }\n  }, [withdrawalsList, withdrawals]);\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setDateRangeState([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setDateRangeState([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n  let urlParams = params;\n  urlParams.filtered = urlParams.filtered.concat(dateRangeState);\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <h4>Withdrawals</h4>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n          <DownloadReportsButton\n            url={BuildAPIUrl(URLS.REPORTS) + \"/withdrawals/download\"}\n            params={urlParams}\n          />\n        </div>\n      </div>\n      <ReactTable\n        data={withdrawals}\n        pages={pages}\n        loading={isFetchData}\n        defaultPageSize={20}\n        manual\n        filterable={true}\n        sortable={true}\n        columns={columns}\n        onFetchData={(state) => {\n          setIsFetchData(true);\n          setParams({\n            page: Number(state.page),\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          });\n\n          dispatch(\n            getPlatformWithdrawals({\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered,\n            })\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default WithdrawalsReports;\n","import React from \"react\";\nimport { URLS_LOCAL_GROUPS } from \"../../../utils/config/URLS\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport DepositsReports from \"./Deposits\";\nimport TradesReports from \"./Trades\";\nimport OrdersReports from \"./Orders\";\nimport WithdrawalsReports from \"./Withdrawals\";\nimport \"./index.less\";\n\nconst Reports = () => {\n  const params = useParams();\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta reports\">\n          <ul className=\"tabList\">\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.reports + \"/trades\"}\n                className={classNames({\n                  active: params.type === \"trades\",\n                })}\n              >\n                Trades\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.reports + \"/orders\"}\n                className={classNames({\n                  active: params.type === \"orders\",\n                })}\n              >\n                Orders\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.reports + \"/withdrawals\"}\n                className={classNames({\n                  active: params.type === \"withdrawals\",\n                })}\n              >\n                Withdrawals\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.reports + \"/deposits\"}\n                className={classNames({\n                  active: params.type === \"deposits\",\n                })}\n              >\n                Deposits\n              </NavLink>\n            </li>\n          </ul>\n          {(() => {\n            switch (params.type) {\n              case \"trades\":\n                return <TradesReports />;\n              case \"orders\":\n                return <OrdersReports />;\n              case \"withdrawals\":\n                return <WithdrawalsReports />;\n              case \"deposits\":\n                return <DepositsReports />;\n              default:\n                return <TradesReports />;\n            }\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DownloadReportsButton.less\";\nimport { BuildUrl } from \"../../helpers/axios\";\nimport { useSelector } from \"react-redux\";\n\nconst DownloadReportsButton = ({ url, params, docs = false }) => {\n  const token = useSelector((store) => store.user.accessToken);\n  return (\n    <form target=\"_blank\" action={BuildUrl(url, params)} method=\"POST\">\n      <input type=\"hidden\" name=\"_token\" value={`Bearer ${token}`} />\n      {docs ? (\n        <button type=\"submit\" className=\"documentsButton\">\n          document\n        </button>\n      ) : (\n        <button type=\"submit\" className=\"container-tabs-export\">\n          <i className=\"fas fa-cloud-download-alt\" />\n          <span>Export</span>\n        </button>\n      )}\n    </form>\n  );\n};\n\nDownloadReportsButton.propTypes = {\n  url: PropTypes.string,\n  params: PropTypes.object,\n  docs: PropTypes.bool,\n};\n\nexport default DownloadReportsButton;\n","import React, { useState } from \"react\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\nimport \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker.css\";\nimport \"react-calendar/dist/Calendar.css\";\n\nconst now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nconst DatePicker = ({ dateRange }) => {\n  const [value, setValue] = useState([yesterdayBegin, todayEnd]);\n  const onChange = (newValue) => {\n    setValue(newValue);\n    if (newValue) {\n      let valueToTimestamp = newValue.map((el) => el.getTime().toString());\n      dateRange(valueToTimestamp);\n    } else {\n      dateRange();\n    }\n  };\n  return (\n    <div className=\"Sample\">\n      <div className=\"Sample__container\">\n        <main className=\"Sample__container__content\">\n          <DateRangePicker\n            onChange={onChange}\n            value={value}\n            format={\"dd-MM-y\"}\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nDatePicker.propTypes = {\n  dateRange: PropTypes.any,\n};\n\nexport default DatePicker;\n","import moment from \"moment\";\nimport React from \"react\";\n\nexport const dateOptions = {\n  days: () => {\n    let days = [];\n    for (let i = 1; i <= 31; i++) {\n      days.push({\n        label: i,\n        value: i.toString().length > 1 ? i.toString() : \"0\" + i,\n      });\n    }\n    return days;\n  },\n  months: () => {\n    let months = [];\n    let start = new Date(1970, 0);\n    for (let i = 0; i < 12; i++) {\n      months.push({\n        label: moment(start.getMilliseconds()).add(i, \"month\").format(\"MMMM\"),\n        value: i.toString().length > 1 ? (i + 1).toString() : \"0\" + (i + 1),\n      });\n    }\n    return months;\n  },\n  years: () => {\n    let years = [];\n    let date = new Date();\n    let lastYear = date.getFullYear() - 18;\n    for (let i = 1920; i <= lastYear; i++) {\n      years.push({ label: i.toString(), value: i.toString() });\n    }\n    return years;\n  },\n};\nfunction optsMapper(opt) {\n  return { value: opt.id, label: opt.name };\n}\nexport const prepareOptions = (options) =>\n  options ? options.map(optsMapper) : [];\nexport const customSelectFilter = ({ filter, onChange, options }) => {\n  return (\n    <select\n      onChange={(event) => onChange(event.target.value)}\n      style={{\n        width: \"100%\",\n        height: \"20px\",\n        padding: 0,\n        background: \"#252f35\",\n        color: \"#fff\",\n      }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"\">Show All</option>\n      {options\n        .filter((item, i, s) => s.lastIndexOf(item) == i)\n        .map(function (item) {\n          return (\n            <option key={item.key} value={item.key}>\n              {item.value}\n            </option>\n          );\n        })}\n    </select>\n  );\n};\n","const now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nexport const dateRangeObj = [\n  { id: \"from\", value: yesterdayBegin.getTime().toString() },\n  { id: \"to\", value: todayEnd.getTime().toString() },\n];\n","const COLOR_RED = \"#ef4f1b\";\nconst COLOR_GREEN = \"#44be24\";\nconst COLOR_YELLOW = \"#ffc015\";\nexport const ORDER_STATUS_PARTIALLY_FILLED = \"partially filled\";\nexport const ORDER_STATUS_NEW = \"new\";\nexport const ORDER_STATUS_PENDING = \"pending\";\nexport const ORDER_STATUS_EXECUTED = \"executed\";\nexport const ORDER_STATUS_CANCELLED = \"cancelled\";\nexport const ORDER_STATUS_REJECTED = \"rejected\";\nexport const ORDER_STATUS_REJECTED_INVALID_QUANTITY =\n  \"rejected invalid quantity\";\nexport const ORDER_STATUS_REJECTED_INVALID_PRICE = \"rejected invalid price\";\nexport const ORDER_STATUS_REJECTED_INSUFFICIENT_QUANTITY =\n  \"rejected insufficient quantity\";\nexport const ORDER_STATUS_REJECTED_NO_LIQUIDITY = \"rejected no liquidity\";\nexport const ORDER_STATUS_REJECTED_NO_LIQUIDITY_PARCIALLY_FILLED =\n  \"rejected no liquidity partially filled\";\n\nexport const ORDER_STATUS_LIST = {\n  [ORDER_STATUS_NEW]: COLOR_GREEN,\n  [ORDER_STATUS_PENDING]: COLOR_YELLOW,\n  [ORDER_STATUS_PARTIALLY_FILLED]: COLOR_YELLOW,\n  [ORDER_STATUS_CANCELLED]: COLOR_RED,\n  [ORDER_STATUS_EXECUTED]: COLOR_GREEN,\n  [ORDER_STATUS_REJECTED]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INVALID_QUANTITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INVALID_PRICE]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_INSUFFICIENT_QUANTITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_NO_LIQUIDITY]: COLOR_RED,\n  [ORDER_STATUS_REJECTED_NO_LIQUIDITY_PARCIALLY_FILLED]: COLOR_RED,\n};\n\nexport const ORDER_SIDE_BUY = \"buy\";\nexport const ORDER_SIDE_SELL = \"sell\";\nexport const ORDER_SIDE_LIST = {\n  [ORDER_SIDE_BUY]: COLOR_GREEN,\n  [ORDER_SIDE_SELL]: COLOR_RED,\n};\n\nexport function makeStatusColor(status) {\n  return ORDER_STATUS_LIST[status];\n}\n\nexport function makeSideColor(side) {\n  return ORDER_SIDE_LIST[side];\n}\n","import moment from \"moment\";\n\nexport const timeStampToDate = (timeStamp) => {\n  return moment(timeStamp).format(\"DD-MM-YYYY\");\n};\nexport const timeStampToTime = (timeStamp) => {\n  return moment(timeStamp).format(\"HH:mm:ss.SSS\");\n};\n","export const SYMBOLS_INFO = {\n  BTC: {\n    symbol: \"BTC\",\n    title: \"Bitcoin\",\n    precision: 8,\n  },\n  ETH: {\n    symbol: \"ETH\",\n    title: \"Ethereum\",\n    precision: 8,\n  },\n  LTC: {\n    symbol: \"LTC\",\n    title: \"Litecoin\",\n    precision: 8,\n  },\n  USDT: {\n    symbol: \"USDT\",\n    title: \"Tether\",\n    precision: 8,\n  },\n};\n\nexport const ccyPairs = [\n  { key: \"BTC_USDT\", value: \"BTC/USDT\" },\n  { key: \"ETH_USDT\", value: \"ETH/USDT\" },\n  { key: \"LTC_USDT\", value: \"LTC/USDT\" },\n];\n\nexport const ccy = [\n  { key: \"USDT\", value: \"USDT\" },\n  // {key:'BTC', value: 'BTC'},\n  // {key:'ETH', value: 'ETH'},\n];\n\nexport const statementsType = [\n  { key: \"1\", value: \"withdrawal\" },\n  { key: \"2\", value: \"deposit\" },\n  { key: \"3\", value: \"fee\" },\n  { key: \"4\", value: \"duplicate\" },\n];\n\nexport const statementsStatuses = [\n  { key: \"0\", value: \"new\" },\n  { key: \"1\", value: \"pending\" },\n  { key: \"2\", value: \"approved\" },\n  { key: \"3\", value: \"rejected\" },\n  { key: \"4\", value: \"admin account\" },\n];\n\nexport const csvFileStatuses = [\n  { key: \"1\", value: \"processed\" },\n  { key: \"2\", value: \"failed\" },\n  { key: \"3\", value: \"pending\" },\n];\n\nexport const abaFilesStatuses = [\n  { key: \"7\", value: \"Rejected\" },\n  { key: \"3\", value: \"Pending\" },\n];\n\nexport const abaArchiveFilesStatuses = [\n  { key: \"7\", value: \"Approved\" },\n  { key: \"8\", value: \"Partially Approved\" },\n  { key: \"9\", value: \"Returned\" },\n];\n\nexport const sideValues = [\n  { key: \"sell\", value: \"sell\" },\n  { key: \"buy\", value: \"buy\" },\n];\n\nexport const withdrawalHistoryStatuses = [\n  { key: \"2\", value: \"Approved\" },\n  { key: \"4\", value: \"Returned\" },\n];\n\nexport const reportsWithdrawalsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"Returned\" },\n  { key: \"5\", value: \"AdminAccount\" },\n];\n\nexport const reportsDepositsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"AdminAccount\" },\n  { key: \"5\", value: \"Archive\" },\n];\n"],"names":["getPlatformTradesFailure","error","type","platformReportsActions","payload","getPlatformOrdersFailure","getPlatformWithdrawalsFailure","getPlatformDepositsFailure","axios","GetAxios","getPlatformDeposits","params","dispatch","get","BuildAPIUrl","URLS","REPORTS","headers","then","res","deposits","data","catch","response","message","getPlatformWithdrawals","withdrawals","getPlatformOrders","orders","getPlatformTrades","trades","columns","Header","accessor","Filter","_ref","filter","onChange","customSelectFilter","options","reportsDepositsStatuses","getProps","style","textAlign","filterable","width","Cell","row","_jsx","children","timeStampToDate","original","time","timeStampToTime","timestamp","_ref2","ccy","DepositsReports","useDispatch","depositsData","useSelector","store","platformReports","isFetchData","setIsFetchData","useState","setDeposits","pages","setPages","dateRange","setDateRange","dateRangeObj","setParams","page","perPage","sorted","filtered","useEffect","urlParams","concat","_jsxs","className","DatePicker","value","id","el","DownloadReportsButton","url","ReactTable","defaultPageSize","loading","manual","sortable","onFetchData","state","Number","pageSize","bounce","rowInfo","undefined","ccyPairs","symbol","replace","sideValues","color","makeSideColor","side","props","tradesData","setTrades","console","log","dateRangeFilter","setDateRangeFilter","defaultFilterMethod","String","clearTimeout","setTimeout","createdAt","updatedAt","column","makeStatusColor","status","OrdersReports","ordersData","setOrders","defaultSorted","desc","reportsWithdrawalsStatuses","WithdrawalsReports","withdrawalsList","setWithdrawals","dateRangeState","setDateRangeState","Reports","useParams","NavLink","to","URLS_LOCAL_GROUPS","reports","classNames","active","TradesReports","docs","token","user","accessToken","target","action","BuildUrl","method","name","now","Date","yesterdayBegin","getFullYear","getMonth","getDate","todayEnd","setValue","DateRangePicker","newValue","valueToTimestamp","map","getTime","toString","format","dateOptions","days","i","push","label","length","months","start","moment","getMilliseconds","add","years","lastYear","optsMapper","opt","prepareOptions","event","height","padding","background","item","s","lastIndexOf","key","COLOR_RED","COLOR_GREEN","COLOR_YELLOW","ORDER_STATUS_LIST","ORDER_SIDE_LIST","timeStamp","SYMBOLS_INFO","BTC","title","precision","ETH","LTC","USDT","statementsType","statementsStatuses","csvFileStatuses","abaFilesStatuses","abaArchiveFilesStatuses","withdrawalHistoryStatuses"],"sourceRoot":""}