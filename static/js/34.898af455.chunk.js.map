{"version":3,"file":"static/js/34.898af455.chunk.js","mappings":"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","sources":["components/Common/DownloadFilesButtonTableStyle.js","store/actions/manualBankingActions/index.js","requests/manualBanking/index.js","components/AdminCabinet/ManualBanking/BankStatements/CsvStatements/index.js","components/AdminCabinet/ManualBanking/BankStatements/BankDeposits/index.js","components/AdminCabinet/ManualBanking/BankStatements/index.js","components/AdminCabinet/ManualBanking/Deposits/NewDeposits/index.js","components/AdminCabinet/ManualBanking/Deposits/PendingDeposits/index.js","components/AdminCabinet/ManualBanking/Deposits/ApprovedDeposits/index.js","components/AdminCabinet/ManualBanking/Deposits/RejectedDeposits/index.js","components/AdminCabinet/ManualBanking/Deposits/index.js","components/AdminCabinet/ManualBanking/Withdrawals/WithdrawalsRequests/index.js","components/AdminCabinet/ManualBanking/Withdrawals/WithdrawalsHistory/index.js","components/AdminCabinet/ManualBanking/Withdrawals/AbaFiles/AbaFile/index.js","components/AdminCabinet/ManualBanking/Withdrawals/AbaFiles/index.js","components/AdminCabinet/ManualBanking/Withdrawals/AbaArchive/index.js","components/AdminCabinet/ManualBanking/Withdrawals/index.js","components/AdminCabinet/ManualBanking/AdminAccount/index.js","helpers/copyToClipboard.js","components/AdminCabinet/ManualBanking/BankDetails/index.js","components/AdminCabinet/ManualBanking/Archive/index.js","components/AdminCabinet/ManualBanking/index.js","components/Common/DownloadReportsButton.js","helpers/DataPicker/index.js","helpers/ModalPopup/index.js","helpers/reactSelectStyles.js","helpers/selectOptions.js","helpers/setDefaultDateRangeFilterQuery.js","helpers/timeStampToDate.js","utils/config/exchange_ids.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DownloadFilesButtonTableStyle.less\";\nimport { BuildUrl } from \"../../helpers/axios\";\nimport { useSelector } from \"react-redux\";\n\nconst DownloadFilesButtonTableStyle = ({ url, params }) => {\n  const token = useSelector((store) => store.user.accessToken);\n  return (\n    <form action={BuildUrl(url, params)} method=\"POST\">\n      <input type=\"hidden\" name=\"_token\" value={`Bearer ${token}`} />\n      <button type=\"submit\" className=\"\">\n        <img\n          className=\"newDepositActions-icons\"\n          src=\"/img/svg/download.svg\"\n          title={\"Download\"}\n          alt={\"Download\"}\n        />\n      </button>\n    </form>\n  );\n};\n\nDownloadFilesButtonTableStyle.propTypes = {\n  url: PropTypes.string,\n  params: PropTypes.object,\n};\n\nexport default DownloadFilesButtonTableStyle;\n","import * as actions from \"./constants.js\";\n\nexport function getNewDepositsSuccess(newDeposits) {\n  return {\n    type: actions.ADMIN_GET_NEW_DEPOSITS_SUCCESS,\n    payload: newDeposits,\n  };\n}\n\nexport function getNewDepositsFailure(error) {\n  return {\n    type: actions.ADMIN_GET_NEW_DEPOSITS_FAILURE,\n    payload: error,\n  };\n}\n\nexport function getPendingDepositsSuccess(pendingDeposits) {\n  return {\n    type: actions.ADMIN_GET_PENDING_DEPOSITS_SUCCESS,\n    payload: pendingDeposits,\n  };\n}\n\nexport function getPendingDepositsFailure(error) {\n  return {\n    type: actions.ADMIN_GET_PENDING_DEPOSITS_FAILURE,\n    payload: error,\n  };\n}\n\nexport function changePendingDepositStatusSuccess() {\n  return {\n    type: actions.ADMIN_CHANGE_PENDING_DEPOSIT_STATUS_SUCCESS,\n  };\n}\n\nexport function changePendingDepositStatusFailure(error) {\n  return {\n    type: actions.ADMIN_CHANGE_PENDING_DEPOSIT_STATUS_FAILURE,\n  };\n}\n\nexport function getRejectedDepositsSuccess(rejectedDeposits) {\n  return {\n    type: actions.ADMIN_GET_REJECTED_DEPOSITS_SUCCESS,\n    payload: rejectedDeposits,\n  };\n}\n\nexport function getRejectedDepositsFailure() {\n  return {\n    type: actions.ADMIN_GET_REJECTED_DEPOSITS_FAILURE,\n  };\n}\n\nexport function getApprovedDepositsSuccess(approvedDeposits) {\n  return {\n    type: actions.ADMIN_GET_APPROVED_DEPOSITS_SUCCESS,\n    payload: approvedDeposits,\n  };\n}\n\nexport function getApprovedDepositsFailure() {\n  return {\n    type: actions.ADMIN_GET_APPROVED_DEPOSITS_FAILURE,\n  };\n}\n\nexport function getAbaFilesSuccess(abaFiles) {\n  return {\n    type: actions.ADMIN_GET_ABA_FILES_SUCCESS,\n    payload: abaFiles,\n  };\n}\n\nexport function getAbaFilesFailure() {\n  return {\n    type: actions.ADMIN_GET_ABA_FILES_FAILURE,\n  };\n}\n\nexport function getArchiveAbaFilesSuccess(abaFiles) {\n  return {\n    type: actions.ADMIN_GET_ARCHIVE_ABA_FILES_SUCCESS,\n    payload: abaFiles,\n  };\n}\n\nexport function getArchiveAbaFilesFailure() {\n  return {\n    type: actions.ADMIN_GET_ARCHIVE_ABA_FILES_FAILURE,\n  };\n}\n\nexport function getAbaFileByIdSuccess(abaFile) {\n  return {\n    type: actions.ADMIN_GET_ABA_FILE_BY_ID_SUCCESS,\n    payload: abaFile,\n  };\n}\n\nexport function getAbaFileByIdFailure() {\n  return {\n    type: actions.ADMIN_GET_ABA_FILE_BY_ID_FAILURE,\n  };\n}\n\nexport function approveRejectAbaFileByIdSuccess(abaFile) {\n  return {\n    type: actions.ADMIN_APPROVE_REJECT_ABA_FILE_BY_ID_SUCCESS,\n    payload: abaFile,\n  };\n}\n\nexport function approveRejectAbaFileByIdFailure() {\n  return {\n    type: actions.ADMIN_APPROVE_REJECT_ABA_FILE_BY_ID_FAILURE,\n  };\n}\n\nexport function getWithdrawalsRequestsSuccess(withdrawalsRequests) {\n  return {\n    type: actions.ADMIN_GET_WITHDRAWALS_REQUESTS_SUCCESS,\n    payload: withdrawalsRequests,\n  };\n}\n\nexport function getWithdrawalsRequestsFailure() {\n  return {\n    type: actions.ADMIN_GET_WITHDRAWALS_REQUESTS_FAILURE,\n  };\n}\n\nexport function getWithdrawalsHistorySuccess(withdrawalsHistory) {\n  return {\n    type: actions.ADMIN_GET_WITHDRAWALS_HISTORY_SUCCESS,\n    payload: withdrawalsHistory,\n  };\n}\n\nexport function getWithdrawalsHistoryFailure() {\n  return {\n    type: actions.ADMIN_GET_WITHDRAWALS_HISTORY_FAILURE,\n  };\n}\n\nexport function handlerWithdrawalRequestActionSuccess() {\n  return {\n    type: actions.ADMIN_HANDLER_WITHDRAWAL_REQUEST_ACTION_SUCCESS,\n  };\n}\n\nexport function handlerWithdrawalRequestActionFailure() {\n  return {\n    type: actions.ADMIN_HANDLER_WITHDRAWAL_REQUEST_ACTION_FAILURE,\n  };\n}\n\nexport function uploadCsvFileSuccess(data) {\n  return {\n    type: actions.ADMIN_UPLOAD_CSV_FILE_SUCCESS,\n    payload: data,\n  };\n}\n\nexport function uploadCsvFileFailure() {\n  return {\n    type: actions.ADMIN_UPLOAD_CSV_FILE_FAILURE,\n  };\n}\n\nexport function getBankStatementsSuccess(statements) {\n  return {\n    type: actions.ADMIN_GET_BANK_STATEMENTS_SUCCESS,\n    payload: statements,\n  };\n}\n\nexport function getBankStatementsFailure() {\n  return {\n    type: actions.ADMIN_GET_BANK_STATEMENTS_FAILURE,\n  };\n}\n\nexport function getCsvFilesSuccess(files) {\n  return {\n    type: actions.ADMIN_GET_CSV_FILES_SUCCESS,\n    payload: files,\n  };\n}\n\nexport function getCsvFilesFailure() {\n  return {\n    type: actions.ADMIN_GET_CSV_FILES_FAILURE,\n  };\n}\n\nexport function adminAccountGetCsvBankStatementsSuccess(scvBankStatements) {\n  return {\n    type: actions.ADMIN_GET_CSV_BANK_STATEMENTS_SUCCESS,\n    payload: scvBankStatements,\n  };\n}\n\nexport function adminAccountGetCsvBankStatementsFailure() {\n  return {\n    type: actions.ADMIN_GET_CSV_BANK_STATEMENTS_FAILURE,\n  };\n}\n\nexport function adminAccountGetDepositsRequestsSuccess(scvBankStatements) {\n  return {\n    type: actions.ADMIN_GET_ADMIN_ACCOUNT_DEPOSITS_REQUEST_SUCCESS,\n    payload: scvBankStatements,\n  };\n}\n\nexport function adminAccountGetDepositsRequestsFailure() {\n  return {\n    type: actions.ADMIN_GET_ADMIN_ACCOUNT_DEPOSITS_REQUEST_FAILURE,\n  };\n}\n\nexport function matchRequestSuccess() {\n  return {\n    type: actions.ADMIN_MATCH_REQUEST_SUCCESS,\n  };\n}\n\nexport function matchRequestFailure() {\n  return {\n    type: actions.ADMIN_MATCH_REQUEST_FAILURE,\n  };\n}\n\nexport function archiveRequestSuccess() {\n  return {\n    type: actions.ADMIN_ARCHIVE_REQUEST_SUCCESS,\n  };\n}\n\nexport function archiveRequestFailure() {\n  return {\n    type: actions.ADMIN_ARCHIVE_REQUEST_FAILURE,\n  };\n}\n\nexport function getArchiveSuccess(archive) {\n  return {\n    type: actions.ADMIN_GET_ARCHIVE_SUCCESS,\n    payload: archive,\n  };\n}\n\nexport function getArchiveFailure() {\n  return {\n    type: actions.ADMIN_GET_ARCHIVE_FAILURE,\n  };\n}\n\nexport function createAbaFileSuccess(abaFile) {\n  return {\n    type: actions.ADMIN_CREATE_ABA_FILE_SUCCESS,\n    payload: abaFile,\n  };\n}\n\nexport function createAbaFileFailure() {\n  return {\n    type: actions.ADMIN_CREATE_ABA_FILE_FAILURE,\n  };\n}\n","import { BuildAPIUrl, URLS, URLS_ADMIN_GROUPS } from \"../../utils/config/URLS\";\nimport { toast } from \"react-toastify\";\nimport { handleRespErr } from \"../../helpers/respErrorsHandler\";\nimport { GetAxios } from \"../../helpers/axios\";\nimport {\n  adminAccountGetCsvBankStatementsFailure,\n  adminAccountGetCsvBankStatementsSuccess,\n  adminAccountGetDepositsRequestsFailure,\n  adminAccountGetDepositsRequestsSuccess,\n  approveRejectAbaFileByIdFailure,\n  approveRejectAbaFileByIdSuccess,\n  archiveRequestFailure,\n  archiveRequestSuccess,\n  changePendingDepositStatusFailure,\n  changePendingDepositStatusSuccess,\n  createAbaFileFailure,\n  createAbaFileSuccess,\n  getAbaFileByIdFailure,\n  getAbaFileByIdSuccess,\n  getAbaFilesFailure,\n  getAbaFilesSuccess,\n  getApprovedDepositsFailure,\n  getApprovedDepositsSuccess,\n  getArchiveAbaFilesFailure,\n  getArchiveAbaFilesSuccess,\n  getArchiveFailure,\n  getArchiveSuccess,\n  getBankStatementsFailure,\n  getBankStatementsSuccess,\n  getCsvFilesFailure,\n  getCsvFilesSuccess,\n  getNewDepositsFailure,\n  getNewDepositsSuccess,\n  getPendingDepositsFailure,\n  getPendingDepositsSuccess,\n  getRejectedDepositsFailure,\n  getRejectedDepositsSuccess,\n  getWithdrawalsHistoryFailure,\n  getWithdrawalsHistorySuccess,\n  getWithdrawalsRequestsFailure,\n  getWithdrawalsRequestsSuccess,\n  handlerWithdrawalRequestActionFailure,\n  handlerWithdrawalRequestActionSuccess,\n  matchRequestFailure,\n  matchRequestSuccess,\n  uploadCsvFileFailure,\n  uploadCsvFileSuccess,\n} from \"../../store/actions/manualBankingActions\";\n\nconst axios = GetAxios();\n\nexport function createAbaFile(ids) {\n  return (dispatch) => {\n    let data = {\n      ids: ids,\n    };\n    axios\n      .post(\n        BuildAPIUrl(URLS.BANKING + `/withdrawals/aba-files/generate-group`),\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        toast.success(res.data.message);\n        dispatch(createAbaFileSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, createAbaFileFailure));\n  };\n}\n\nexport function getArchive(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/archive/deposits\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getArchiveSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, getArchiveFailure));\n  };\n}\n\nexport function archiveRequest(id) {\n  return (dispatch) => {\n    axios\n      .put(\n        BuildAPIUrl(\n          URLS_ADMIN_GROUPS.admin_account + `/deposits/${id}/archive`\n        ),\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        dispatch(archiveRequestSuccess(res.data));\n        toast.success(res.data.message);\n      })\n      .catch(handleRespErr(dispatch, archiveRequestFailure));\n  };\n}\n\nexport function matchRequest(id, hash, trxType) {\n  return (dispatch) => {\n    let data = new FormData();\n    data.append(\"hash\", hash || \"\");\n    data.append(\"type\", trxType);\n    axios\n      .put(\n        BuildAPIUrl(\n          URLS_ADMIN_GROUPS.admin_account + `/bank-statements/${id}/match`\n        ),\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        dispatch(matchRequestSuccess(res.data));\n        toast.success(res.data.message);\n      })\n      .catch(handleRespErr(dispatch, matchRequestFailure));\n  };\n}\n\nexport function adminAccountGetDepositsRequests(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS_ADMIN_GROUPS.admin_account + \"/deposits\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(adminAccountGetDepositsRequestsSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, adminAccountGetDepositsRequestsFailure));\n  };\n}\n\nexport function adminAccountGetCsvBankStatements(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS_ADMIN_GROUPS.admin_account + \"/bank-statements\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(adminAccountGetCsvBankStatementsSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, adminAccountGetCsvBankStatementsFailure));\n  };\n}\n\nexport function getCsvFiles(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/statements/csv-files\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getCsvFilesSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, getCsvFilesFailure));\n  };\n}\n\nexport function getBankStatements(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/statements\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getBankStatementsSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, getBankStatementsFailure));\n  };\n}\n\nexport function uploadCsvFile(file) {\n  return (dispatch) => {\n    let data = new FormData();\n    data.append(\"csvDoc\", file);\n    axios\n      .put(BuildAPIUrl(URLS.BANKING + \"/statements\"), data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        dispatch(uploadCsvFileSuccess(res.data));\n        toast.success(res.data.message);\n      })\n      .catch(handleRespErr(dispatch, uploadCsvFileFailure));\n  };\n}\n\nexport function handlerWithdrawalRequestAction(params) {\n  let data = {\n    ids: params.ids,\n    status: params.status,\n  };\n  return (dispatch) => {\n    axios\n      .put(\n        BuildAPIUrl(\n          URLS.BANKING + `/withdrawals/aba-files/${params.abaId}/bulk-update`\n        ),\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        dispatch(handlerWithdrawalRequestActionSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, handlerWithdrawalRequestActionFailure));\n  };\n}\n\nexport function getWithdrawalsHistory(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/withdrawals/history\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getWithdrawalsHistorySuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getWithdrawalsHistoryFailure(res.response.data.error));\n        } else {\n          dispatch(getWithdrawalsHistoryFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getWithdrawalsRequests(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/withdrawals/user-requests\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getWithdrawalsRequestsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getWithdrawalsRequestsFailure(res.response.data.error));\n        } else {\n          dispatch(getWithdrawalsRequestsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function approveRejectAbaFileById(params) {\n  return (dispatch) => {\n    axios\n      .put(\n        BuildAPIUrl(\n          URLS.BANKING +\n            `/withdrawals/aba-files/${params.id}/general-update?status=${params.status}`\n        ),\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        toast.success(res.data.message);\n        dispatch(approveRejectAbaFileByIdSuccess(res.data));\n      })\n      .catch(handleRespErr(dispatch, approveRejectAbaFileByIdFailure));\n  };\n}\n\nexport function getAbaFileById(id, params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + `/withdrawals/aba-files/${id}`), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getAbaFileByIdSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getAbaFileByIdFailure(res.response.data.error));\n        } else {\n          dispatch(getAbaFileByIdFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getArchiveAbaFiles(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/withdrawals/aba-files/archive\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getArchiveAbaFilesSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getArchiveAbaFilesFailure(res.response.data.error));\n        } else {\n          dispatch(getArchiveAbaFilesFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getAbaFiles(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/withdrawals/aba-files\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getAbaFilesSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getAbaFilesFailure(res.response.data.error));\n        } else {\n          dispatch(getAbaFilesFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getApprovedDeposits(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/deposits\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getApprovedDepositsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getApprovedDepositsFailure(res.response.data.error));\n        } else {\n          dispatch(getApprovedDepositsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getRejectedDeposits(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/deposits\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getRejectedDepositsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getRejectedDepositsFailure(res.response.data.error));\n        } else {\n          dispatch(getRejectedDepositsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function changePendingDepositStatus(params) {\n  let data = {\n    status: params.status,\n    notes: params.notes,\n  };\n  return (dispatch) => {\n    axios\n      .put(BuildAPIUrl(URLS.BANKING + `/deposits/${params.id}`), data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(changePendingDepositStatusSuccess(res.data));\n        toast.success(res.data.message);\n      })\n      .catch(handleRespErr(dispatch, changePendingDepositStatusFailure));\n  };\n}\n\nexport function getPendingDeposits(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/deposits\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getPendingDepositsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getPendingDepositsFailure(res.response.data.error));\n        } else {\n          dispatch(getPendingDepositsFailure(res.message));\n        }\n      });\n  };\n}\n\nexport function getNewDeposits(params) {\n  return (dispatch) => {\n    axios\n      .get(BuildAPIUrl(URLS.BANKING + \"/deposits/user-requests\"), {\n        params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch(getNewDepositsSuccess(res.data));\n      })\n      .catch((res) => {\n        if (res.response && res.response.data && res.response.data.error) {\n          dispatch(getNewDepositsFailure(res.response.data.error));\n        } else {\n          dispatch(getNewDepositsFailure(res.message));\n        }\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../../helpers/timeStampToDate\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { BuildAPIUrl, URLS } from \"../../../../../utils/config/URLS\";\nimport \"./index.less\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { csvFileStatuses } from \"../../../../../utils/config/exchange_ids\";\nimport DownloadFilesButtonTableStyle from \"../../../../../components/Common/DownloadFilesButtonTableStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCsvFiles } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"Bank Statement id \",\n    accessor: \"publicId\",\n    width: 150,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Uploaded\",\n    accessor: \"uploadedAt\",\n    width: 200,\n    filterable: false,\n    Cell: (row) => (\n      <span>\n        {timeStampToDate(row.original.uploadedAt) +\n          \" \" +\n          timeStampToTime(row.original.uploadedAt)}\n      </span>\n    ),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    width: 150,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: csvFileStatuses }),\n  },\n  {\n    Header: \"File\",\n    width: 80,\n    filterable: false,\n    sortable: false,\n    Cell: (row) => (\n      <DownloadFilesButtonTableStyle\n        url={\n          BuildAPIUrl(URLS.BANKING) +\n          `/statements/${row.original.publicId}/download`\n        }\n      />\n    ),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            padding: 0,\n          },\n        };\n      }\n    },\n  },\n];\n\nconst CsvStatements = () => {\n  const dispatch = useDispatch();\n  const csvFilesData = useSelector((store) => store.manualBanking.csvFiles);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [pages, setPages] = useState(1);\n  const [currentCsvFiles, setCurrentCsvFiles] = useState(\n    csvFilesData.data || []\n  );\n  const [currentDateRange, setCurrentDateRange] = useState(dateRangeObj);\n  const [queryParams, setQueryParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  const handleDateRange = (value) => {\n    if (value) {\n      setCurrentDateRange([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setQueryParams({\n        ...queryParams,\n        filtered: queryParams.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setCurrentDateRange([]);\n      setQueryParams({\n        ...queryParams,\n        filtered: queryParams.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n  useEffect(() => {\n    setPages(csvFilesData.pages);\n    setCurrentCsvFiles(csvFilesData.data);\n    setIsFetchData(false);\n  }, [csvFilesData]);\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRange} />\n        </div>\n      </div>\n      <div className=\"tab-wrap\">\n        <ReactTable\n          defaultPageSize={20}\n          columns={columns}\n          loading={isFetchData}\n          data={currentCsvFiles}\n          pages={pages}\n          filterable={true}\n          sortable={true}\n          manual\n          onFetchData={(state) => {\n            setIsFetchData(true);\n\n            setQueryParams({\n              ...queryParams,\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: [...state.filtered, ...currentDateRange],\n            });\n\n            clearTimeout(bounce);\n            bounce = setTimeout(() => {\n              dispatch(\n                getCsvFiles({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: [...state.filtered, ...currentDateRange],\n                })\n              );\n            }, 200);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CsvStatements;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport {\n  statementsStatuses,\n  statementsType,\n} from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBankStatements } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\nconst columns = [\n  {\n    Header: \"File id\",\n    accessor: \"fileId\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Statement id \",\n    accessor: \"publicId\",\n    width: 120,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Uploaded\",\n    accessor: \"uploadedAt\",\n    width: 150,\n    filterable: false,\n    Cell: (row) => (\n      <span>\n        {timeStampToDate(row.original.uploadedAt) +\n          \" \" +\n          timeStampToTime(row.original.uploadedAt)}\n      </span>\n    ),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Posting Date\",\n    accessor: \"postedAt\",\n    width: 150,\n    filterable: false,\n    Cell: (row) => (\n      <span>\n        {timeStampToDate(row.original.postedAt) +\n          \" \" +\n          timeStampToTime(row.original.postedAt)}\n      </span>\n    ),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Value Date\",\n    accessor: \"evaluatedAt\",\n    filterable: false,\n    width: 150,\n    Cell: (row) => (\n      <span>\n        {timeStampToDate(row.original.evaluatedAt) +\n          \" \" +\n          timeStampToTime(row.original.evaluatedAt)}\n      </span>\n    ),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Description\",\n    accessor: \"description\",\n    width: 150,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Debit\",\n    accessor: \"debit\",\n    width: 150,\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Credit\",\n    accessor: \"credit\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Trx Id\",\n    accessor: \"requestId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Trx Type\",\n    accessor: \"type\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: statementsType }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: statementsStatuses }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst BankDeposits = () => {\n  const dispatch = useDispatch();\n  const bankStatementsData = useSelector(\n    (store) => store.manualBanking.bankStatements\n  );\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [pages, setPages] = useState(1);\n  const [currentBankStatements, setCurrentBankStatements] = useState(\n    bankStatementsData.data || []\n  );\n  const [currentDateRange, setCurrentDateRange] = useState(dateRangeObj);\n  const [queryParams, setQueryParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  const handleDateRange = (value) => {\n    if (value) {\n      setCurrentDateRange([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setQueryParams({\n        ...queryParams,\n        filtered: queryParams.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setCurrentDateRange([]);\n      setQueryParams({\n        ...queryParams,\n        filtered: queryParams.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n  const onInputChange = (e) => {\n    let file = e.target.files[0];\n    dispatch(getBankStatements(file));\n  };\n  useEffect(() => {\n    setPages(bankStatementsData.pages);\n    setCurrentBankStatements(bankStatementsData.data);\n    setIsFetchData(false);\n  }, [bankStatementsData]);\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <input\n          onChange={(e) => onInputChange(e)}\n          className=\"uploadCsv\"\n          type=\"file\"\n          id=\"uploadCsv\"\n          name=\"uploadCsv\"\n        />\n        <label htmlFor=\"uploadCsv\">Upload CSV file</label>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRange} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={currentBankStatements}\n        pages={pages}\n        filterable={true}\n        sortable={true}\n        manual\n        onFetchData={(state) => {\n          setIsFetchData(true);\n\n          setQueryParams({\n            ...queryParams,\n            page: Number(state.page) + 1,\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: [...state.filtered, ...currentDateRange],\n          });\n\n          clearTimeout(bounce);\n          bounce = setTimeout(() => {\n            dispatch(\n              getBankStatements({\n                page: Number(state.page) + 1,\n                perPage: state.pageSize,\n                sorted: state.sorted,\n                filtered: [...state.filtered, ...currentDateRange],\n              })\n            );\n          }, 200);\n        }}\n      />\n    </div>\n  );\n};\n\nBankDeposits.propTypes = {\n  bankStatements: PropTypes.any,\n};\n\nexport default BankDeposits;\n","import React from \"react\";\nimport { URLS_LOCAL_GROUPS } from \"../../../../utils/config/URLS\";\nimport { NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport CsvStatements from \"./CsvStatements\";\nimport BankDeposits from \"./BankDeposits\";\nimport PropTypes from \"prop-types\";\n\nconst BankStatements = ({ tab }) => {\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta reports\">\n          <ul className=\"tabList\">\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking +\n                  \"/bank-statements\" +\n                  \"/bank-deposits\"\n                }\n                className={classNames({\n                  active: tab === \"bank-deposits\",\n                })}\n              >\n                Bank Deposits\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking +\n                  \"/bank-statements\" +\n                  \"/CSV-statements\"\n                }\n                className={classNames({\n                  active: tab === \"CSV-statements\",\n                })}\n              >\n                CSV Bank Statements\n              </NavLink>\n            </li>\n          </ul>\n\n          {(() => {\n            switch (tab) {\n              case \"bank-deposits\":\n                return <BankDeposits />;\n              case \"CSV-statements\":\n                return <CsvStatements />;\n              default:\n                return <BankDeposits />;\n            }\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBankStatements.propTypes = {\n  tab: PropTypes.any,\n};\n\nexport default BankStatements;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getNewDeposits } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"Deposit id\",\n    accessor: \"publicId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Hash ID\",\n    accessor: \"hashId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"time\",\n    width: \"100\",\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.time)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    width: \"100\",\n    filterable: false,\n    sortable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.time)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client id\",\n    accessor: \"clientId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client Name\",\n    accessor: \"clientName\",\n    width: \"auto\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit Currency\",\n    accessor: \"currency\",\n    width: \"150\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Account Number\",\n    accessor: \"accountNumber\",\n    sortable: false,\n    width: \"auto\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Name\",\n    accessor: \"bankName\",\n    width: \"auto\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nfunction NewDeposits() {\n  const dispatch = useDispatch();\n  const depositsData = useSelector((store) => store.manualBanking.deposits);\n  const [state, setState] = useState({\n    isFetchData: false,\n    newDeposits: depositsData.newDeposits.data || [],\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"0\" }]],\n    },\n  });\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      pages: depositsData.newDeposits.pages,\n      newDeposits: depositsData.newDeposits.data,\n      isFetchData: false,\n    }));\n  }, [depositsData]);\n\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getNewDeposits(state.params))\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getNewDeposits(state.params))\n      );\n    }\n  };\n  const { newDeposits, pages, isFetchData, dateRange } = state;\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={newDeposits}\n        pages={pages}\n        filterable={true}\n        sortable={true}\n        manual\n        onFetchData={(state) => {\n          setState((prevState) => ({\n            ...prevState,\n            isFetchData: true,\n            params: {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: [...state.filtered, ...[{ id: \"status\", value: \"0\" }]],\n            },\n          }));\n\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getNewDeposits({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: [\n                    ...state.filtered,\n                    ...[{ id: \"status\", value: \"0\" }],\n                    ...dateRange,\n                  ],\n                })\n              ),\n            200\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nexport default NewDeposits;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport ReactTable from \"react-table\";\nimport ModalPopup from \"../../../../../helpers/ModalPopup\";\nimport \"./index.less\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../utils/config/exchange_ids\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changePendingDepositStatus,\n  getPendingDeposits,\n} from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nfunction Columns({ handlerShowPopup }) {\n  return [\n    {\n      Header: \"Deposit id\",\n      accessor: \"publicId\",\n      width: \"100\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Hash ID\",\n      accessor: \"hashId\",\n      width: \"100\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Date\",\n      width: \"120\",\n      accessor: \"createdAt\",\n      filterable: false,\n      Cell: (row) => {\n        return <span>{timeStampToDate(row.original.createdAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Time\",\n      width: \"120\",\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return <span>{timeStampToTime(row.original.createdAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Received Date\",\n      width: \"120\",\n      accessor: \"receivedAt\",\n      filterable: false,\n      Cell: (row) => {\n        return <span>{timeStampToDate(row.original.receivedAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Received Time\",\n      width: \"120\",\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return <span>{timeStampToTime(row.original.receivedAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client id\",\n      accessor: \"clientId\",\n      width: \"100\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"clientName\",\n      width: \"120\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Deposit Amount\",\n      accessor: \"amount\",\n      width: \"auto\",\n      filterable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Received Amount\",\n      accessor: \"amount\",\n      width: \"auto\",\n      filterable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Fee\",\n      accessor: \"fee\",\n      width: \"80\",\n      filterable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Deposit Currency\",\n      accessor: \"currency\",\n      width: \"100\",\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: ccy }),\n    },\n    {\n      Header: \"Account Number\",\n      accessor: \"accountNumber\",\n      width: \"100\",\n    },\n    {\n      Header: \"Bank Name\",\n      accessor: \"bankName\",\n      width: \"200\",\n    },\n    {\n      Header: \"Action\",\n      width: \"200\",\n      filterable: false,\n      sortable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <div className=\"newDepositActions\">\n            <span\n              onClick={() =>\n                handlerShowPopup(row.original.publicId, 3, \"reject\")\n              }\n              className=\"newDepositActions-reject\"\n            >\n              Reject\n            </span>\n            <span\n              onClick={() =>\n                handlerShowPopup(row.original.publicId, 2, \"approve\")\n              }\n              className=\"newDepositActions-approve\"\n            >\n              Approve\n            </span>\n          </div>\n        );\n      },\n    },\n  ];\n}\n\nfunction PendingDeposits() {\n  const dispatch = useDispatch();\n  const depositsData = useSelector((store) => store.manualBanking.deposits);\n  const [state, setState] = useState({\n    isFetchData: false,\n    pendingDeposits: depositsData.pendingDeposits.data || [],\n    pages: 1,\n    showPopup: false,\n    id: \"\",\n    type: \"\",\n    dateRange: dateRange,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"1\" }], ...dateRangeObj],\n    },\n  });\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      pages: depositsData.pendingDeposits.pages,\n      pendingDeposits: depositsData.pendingDeposits.data,\n      isFetchData: false,\n    }));\n  }, [depositsData]);\n\n  const handlerShowPopup = (id, status, type) => {\n    setState((prevState) => ({\n      ...prevState,\n      showPopup: true,\n      id: id,\n      type: type,\n      status: status,\n    }));\n  };\n\n  const handlerClosePopup = () => {\n    setState((prevState) => ({\n      ...prevState,\n      showPopup: false,\n    }));\n  };\n\n  const onChange = (e) => {\n    setState((prevState) => ({\n      ...prevState,\n      notes: e.target.value,\n    }));\n  };\n\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getPendingDeposits(state.params))\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getPendingDeposits(state.params))\n      );\n    }\n  };\n\n  const {\n    pendingDeposits,\n    pages,\n    isFetchData,\n    showPopup,\n    id,\n    type,\n    notes,\n    status,\n    dateRange,\n  } = state;\n\n  let params = {\n    notes: notes,\n    status: status,\n    id: id,\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table scr\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={Columns({ handlerShowPopup })}\n        loading={isFetchData}\n        data={pendingDeposits}\n        pages={pages}\n        filterable={true}\n        sortable={true}\n        manual\n        onFetchData={(state, instance) => {\n          setState((prevState) => ({\n            ...prevState,\n            isFetchData: true,\n            params: {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: [\n                ...state.filtered,\n                ...[{ id: \"status\", value: \"1\" }],\n                ...dateRange,\n              ],\n            },\n          }));\n\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getPendingDeposits({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: [\n                    ...state.filtered,\n                    ...[{ id: \"status\", value: \"1\" }],\n                    ...dateRange,\n                  ],\n                })\n              ),\n            200\n          );\n        }}\n      />\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            dispatch(changePendingDepositStatus(params));\n            setTimeout(() => dispatch(getPendingDeposits(state.params)), 200);\n          }}\n          onClose={handlerClosePopup}\n          title={\n            type === \"reject\"\n              ? \"Are you sure you want to reject the request?\"\n              : \"Approve the request?\"\n          }\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          onChange={onChange}\n          id={id}\n          type={type}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default PendingDeposits;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getApprovedDeposits } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"Deposit id\",\n    accessor: \"publicId\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Hash ID\",\n    accessor: \"hashId\",\n    width: 140,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"createdAt\",\n    width: 80,\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    width: 90,\n    filterable: false,\n    sortable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Received Date\",\n    width: 120,\n    accessor: \"receivedAt\",\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.receivedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Received Time\",\n    width: 120,\n    sortable: false,\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.receivedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Approved Date\",\n    width: 120,\n    accessor: \"updatedAt\",\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.updatedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Approved Time\",\n    width: 120,\n    sortable: false,\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.updatedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client ID\",\n    width: 80,\n    accessor: \"clientId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client Name\",\n    width: 120,\n    accessor: \"clientName\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    width: 80,\n    accessor: \"fee\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Received Amount\",\n    width: 150,\n    accessor: \"amount\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit Currency\",\n    width: 150,\n    accessor: \"currency\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Account Number\",\n    width: 150,\n    accessor: \"accountNumber\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Name\",\n    width: 150,\n    accessor: \"bankName\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nfunction ApprovedDeposits() {\n  const dispatch = useDispatch();\n  const depositsData = useSelector((store) => store.manualBanking.deposits);\n  const [state, setState] = useState({\n    isFetchData: false,\n    approvedDeposits: depositsData.approvedDeposits.data || [],\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"2\" }]],\n    },\n  });\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      pages: depositsData.approvedDeposits.pages,\n      approvedDeposits: depositsData.approvedDeposits.data,\n      isFetchData: false,\n    }));\n  }, [depositsData]);\n\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getApprovedDeposits(state.params))\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getApprovedDeposits(state.params))\n      );\n    }\n  };\n\n  const { approvedDeposits, pages, isFetchData, dateRange } = state;\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={approvedDeposits}\n        pages={pages}\n        manual\n        filterable={true}\n        sortable={true}\n        onFetchData={(tableState) => {\n          setState((prevState) => ({\n            ...prevState,\n            isFetchData: true,\n            params: {\n              page: Number(tableState.page) + 1,\n              perPage: tableState.pageSize,\n              sorted: tableState.sorted,\n              filtered: [\n                ...tableState.filtered,\n                ...[{ id: \"status\", value: \"2\" }],\n              ],\n            },\n          }));\n\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getApprovedDeposits({\n                  page: Number(tableState.page) + 1,\n                  perPage: tableState.pageSize,\n                  sorted: tableState.sorted,\n                  filtered: [\n                    ...tableState.filtered,\n                    ...[{ id: \"status\", value: \"2\" }],\n                    ...dateRange,\n                  ],\n                })\n              ),\n            200\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ApprovedDeposits;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport ReactTable from \"react-table\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport \"./index.less\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRejectedDeposits } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\nconst columns = [\n  {\n    Header: \"Deposit id\",\n    accessor: \"publicId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Hash ID\",\n    accessor: \"hashId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"createdAt\",\n    filterable: false,\n    width: \"100\",\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    sortable: false,\n    filterable: false,\n    width: \"100\",\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Received Date\",\n    accessor: \"receivedAt\",\n    filterable: false,\n    width: \"150\",\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.receivedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Received Time\",\n    sortable: false,\n    filterable: false,\n    width: \"150\",\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.receivedAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client id\",\n    accessor: \"clientId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client Name\",\n    accessor: \"clientName\",\n    width: \"150\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit Amount\",\n    accessor: \"amount\",\n    filterable: false,\n    width: \"150\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit Currency\",\n    accessor: \"currency\",\n    width: \"150\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Account Number\",\n    accessor: \"accountNumber\",\n    width: \"150\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Name\",\n    accessor: \"bankName\",\n    width: \"120\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Notes\",\n    accessor: \"notes\",\n    sortable: false,\n    filterable: false,\n    width: \"auto\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        };\n      }\n    },\n  },\n];\nconst RejectedDeposits = () => {\n  const dispatch = useDispatch();\n  const deposits = useSelector((store) => store.manualBanking.deposits);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [rejectedDeposits, setRejectedDeposits] = useState(\n    deposits.rejectedDeposits.data || []\n  );\n  const [pages, setPages] = useState(1);\n  const [dateRangeState, setDateRangeState] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [...[{ id: \"status\", value: \"3\" }]],\n  });\n  useEffect(() => {\n    if (deposits.rejectedDeposits !== rejectedDeposits) {\n      setPages(deposits.rejectedDeposits.pages);\n      setRejectedDeposits(deposits.rejectedDeposits.data);\n      setIsFetchData(false);\n    }\n  }, [deposits]);\n  const handleDateRange = (value) => {\n    if (value) {\n      setDateRangeState([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setDateRangeState([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n  const handleFetchData = (state) => {\n    setIsFetchData(true);\n    setParams({\n      ...params,\n      page: Number(state.page) + 1,\n      perPage: state.pageSize,\n      sorted: state.sorted,\n      filtered: [\n        ...state.filtered,\n        ...[{ id: \"status\", value: \"3\" }],\n        ...dateRangeState,\n      ],\n    });\n    clearTimeout(bounce);\n    bounce = setTimeout(\n      () =>\n        dispatch(\n          getRejectedDeposits({\n            page: Number(state.page) + 1,\n            perPage: state.pageSize,\n            sorted: state.sorted,\n            filtered: [\n              ...state.filtered,\n              ...[{ id: \"status\", value: \"3\" }],\n              ...dateRangeState,\n            ],\n          })\n        ),\n      200\n    );\n  };\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={handleDateRange} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={rejectedDeposits}\n        pages={pages}\n        manual\n        filterable={true}\n        sortable={true}\n        onFetchData={handleFetchData}\n        getTdProps={(state, rowInfo, column) => {\n          return {\n            style:\n              column.id === \"notes\"\n                ? { overflow: \"visible\", padding: \"0 7px\" }\n                : {},\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RejectedDeposits;\n","import React from \"react\";\nimport { URLS_LOCAL_GROUPS } from \"../../../../utils/config/URLS\";\nimport { NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport NewDeposits from \"./NewDeposits\";\nimport PendingDeposits from \"./PendingDeposits\";\nimport ApprovedDeposits from \"./ApprovedDeposits\";\nimport RejectedDeposits from \"./RejectedDeposits\";\nimport PropTypes from \"prop-types\";\n\nconst Deposits = (props) => {\n  const { tab } = props;\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta reports\">\n          <ul className=\"tabList\">\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.manual_banking + \"/deposits\" + \"/new\"}\n                className={classNames({ active: tab === \"new\" })}\n              >\n                New\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={URLS_LOCAL_GROUPS.manual_banking + \"/deposits\" + \"/pending\"}\n                className={classNames({ active: tab === \"pending\" })}\n              >\n                Pending\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking + \"/deposits\" + \"/approved\"\n                }\n                className={classNames({ active: tab === \"approved\" })}\n              >\n                Approved\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking + \"/deposits\" + \"/rejected\"\n                }\n                className={classNames({ active: tab === \"rejected\" })}\n              >\n                Rejected\n              </NavLink>\n            </li>\n          </ul>\n\n          {(() => {\n            switch (tab) {\n              case \"new\":\n                return <NewDeposits />;\n              case \"pending\":\n                return <PendingDeposits />;\n              case \"approved\":\n                return <ApprovedDeposits />;\n              case \"rejected\":\n                return <RejectedDeposits />;\n              default:\n                return <NewDeposits />;\n            }\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeposits.propTypes = {\n  tab: PropTypes.any,\n};\n\nexport default Deposits;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport \"./index.less\";\nimport ModalPopup from \"../../../../../helpers/ModalPopup\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createAbaFile,\n  getWithdrawalsRequests,\n} from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst WithdrawalsRequests = () => {\n  const dispatch = useDispatch();\n  const withdrawalsData = useSelector(\n    (store) => store.manualBanking.withdrawals\n  );\n  const [state, setState] = useState({\n    isFetchData: false,\n    withdrawalsRequests: withdrawalsData.withdrawalsRequests.data || [],\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"0\" }]],\n    },\n    selected: {},\n    selectAll: 0,\n    showPopup: false,\n  });\n  useEffect(() => {\n    setState((prev) => ({\n      ...prev,\n      selected: {},\n      selectAll: 0,\n      pages: withdrawalsData.withdrawalsRequests.pages,\n      withdrawalsRequests: withdrawalsData.withdrawalsRequests.data,\n      isFetchData: false,\n    }));\n  }, [withdrawalsData.withdrawalsRequests, state.withdrawalsRequests]);\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prev) => ({\n          ...prev,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prev.params,\n            filtered: prev.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getWithdrawalsRequests(state.params))\n      );\n    } else {\n      setState(\n        (prev) => ({\n          ...prev,\n          dateRange: [],\n          params: {\n            ...prev.params,\n            filtered: prev.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getWithdrawalsRequests(state.params))\n      );\n    }\n  };\n\n  const toggleRow = (publicId) => {\n    const newSelected = { ...state.selected };\n    newSelected[publicId] = !state.selected[publicId];\n    setState((prev) => ({\n      ...prev,\n      selected: newSelected,\n      selectAll: 2,\n    }));\n  };\n  const toggleSelectAll = () => {\n    let newSelected = {};\n    if (state.selectAll === 0) {\n      state.withdrawalsRequests.forEach((x) => {\n        newSelected[x.publicId] = true;\n      });\n    }\n    setState((prev) => ({\n      ...prev,\n      selected: newSelected,\n      selectAll: state.selectAll === 0 ? 1 : 0,\n    }));\n  };\n  const showPopupHandler = () => {\n    setState((prev) => ({\n      ...prev,\n      showPopup: true,\n    }));\n  };\n  const closePopupHandler = () => {\n    setState((prev) => ({\n      ...prev,\n      showPopup: false,\n    }));\n  };\n  const {\n    withdrawalsRequests,\n    pages,\n    isFetchData,\n    dateRange,\n    showPopup,\n    selected,\n  } = state;\n\n  let ids = [];\n  let selectedIds = Object.keys(selected);\n  selectedIds.map((el) => {\n    if (selected[el]) {\n      ids.push(el);\n    } else {\n      ids.filter((el) => el === selected[el]);\n    }\n  });\n\n  let columns = [\n    {\n      id: \"checkbox\",\n      accessor: \"\",\n      Cell: ({ original }) => {\n        return (\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            checked={state.selected[original.publicId] === true}\n            onChange={() => toggleRow(original.publicId)}\n          />\n        );\n      },\n      Header: \"All\",\n      Filter: () => {\n        return (\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            checked={state.selectAll === 1}\n            ref={(input) => {\n              if (input) {\n                input.indeterminate = state.selectAll === 2;\n              }\n            }}\n            onChange={() => toggleSelectAll()}\n          />\n        );\n      },\n      width: 50,\n      sortable: false,\n    },\n    {\n      Header: \"Withdrawal id\",\n      accessor: \"publicId\",\n      width: 110,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Date\",\n      accessor: \"time\",\n      width: 100,\n      filterable: false,\n      Cell: (row) => {\n        return <span>{timeStampToDate(row.original.time)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Time\",\n      width: 100,\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return <span>{timeStampToTime(row.original.time)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client id\",\n      accessor: \"clientId\",\n      width: 100,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"clientName\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Withdrawal Amount\",\n      accessor: \"amount\",\n      width: 150,\n      filterable: false,\n    },\n    {\n      Header: \"Withdrawal Currency\",\n      accessor: \"currency\",\n      width: 150,\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: ccy }),\n    },\n    {\n      Header: \"to Account Number\",\n      accessor: \"accountNumber\",\n      sortable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Bank Name\",\n      accessor: \"bankName\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n  ];\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap noSpace\">\n        <div onClick={showPopupHandler} className=\"createAba-file\">\n          Create ABA File\n        </div>\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={withdrawalsRequests}\n        pages={pages}\n        filterable={true}\n        sortable={true}\n        manual\n        onFetchData={(state) => {\n          setState((prev) => ({\n            ...prev,\n            isFetchData: true,\n            params: {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: [...state.filtered, ...[{ id: \"status\", value: \"0\" }]],\n            },\n          }));\n\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getWithdrawalsRequests({\n                  page: Number(state.page) + 1,\n                  perPage: state.pageSize,\n                  sorted: state.sorted,\n                  filtered: [\n                    ...state.filtered,\n                    ...[{ id: \"status\", value: \"0\" }],\n                    ...dateRange,\n                  ],\n                })\n              ),\n            200\n          );\n        }}\n      />\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            if (ids.length) {\n              dispatch(createAbaFile(ids));\n              setTimeout(() => {\n                dispatch(\n                  getWithdrawalsRequests({\n                    page: 1,\n                    perPage: 20,\n                    sorted: [],\n                    filtered: [...[{ id: \"status\", value: \"0\" }]],\n                  })\n                );\n              }, 200);\n            } else {\n              closePopupHandler();\n            }\n          }}\n          onClose={(e) => closePopupHandler(e)}\n          title={ids.length ? \"Create ABA File?\" : \"Please select item\"}\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          id=\"\"\n          type=\"\"\n        />\n      )}\n    </div>\n  );\n};\n\nWithdrawalsRequests.propTypes = {\n  original: PropTypes.any,\n};\n\nexport default WithdrawalsRequests;\n","import React, { useState, useEffect } from \"react\";\nimport ReactTable from \"react-table\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport {\n  ccy,\n  withdrawalHistoryStatuses,\n} from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWithdrawalsHistory } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"ABA ID\",\n    accessor: \"fileId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Withdrawal id\",\n    accessor: \"publicId\",\n    width: \"120\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"createdAt\",\n    width: \"100\",\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    width: \"100\",\n    filterable: false,\n    sortable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client id\",\n    accessor: \"clientId\",\n    width: \"100\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client Name\",\n    accessor: \"clientName\",\n    width: \"auto\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Withdrawal Amount\",\n    accessor: \"amount\",\n    width: \"150\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Withdrawal Currency\",\n    accessor: \"currency.name\",\n    width: \"150\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"to Account Number\",\n    accessor: \"clientAccountNumber\",\n    filterable: false,\n    width: \"150\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Name\",\n    accessor: \"bankName\",\n    width: \"150\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Payment Date\",\n    accessor: \"paymentDate\",\n    width: \"120\",\n    filterable: false,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.paymentDate)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Payment Time\",\n    width: \"120\",\n    filterable: false,\n    sortable: false,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.paymentDate)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Paid Amount\",\n    accessor: \"sentAmount\",\n    width: \"100\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Fee\",\n    accessor: \"fee\",\n    width: \"80\",\n    filterable: false,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    width: \"100\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: withdrawalHistoryStatuses,\n      }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst WithdrawalsHistory = () => {\n  const dispatch = useDispatch();\n  const withdrawalsData = useSelector(\n    (store) => store.manualBanking.withdrawals\n  );\n  const [state, setState] = useState({\n    isFetchData: false,\n    withdrawalsHistory: withdrawalsData.withdrawalsHistory.data || [],\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [],\n    },\n  });\n\n  useEffect(() => {\n    setState((prev) => ({\n      ...prev,\n      pages: withdrawalsData.withdrawalsHistory.pages,\n      withdrawalsHistory: withdrawalsData.withdrawalsHistory.data,\n      isFetchData: false,\n    }));\n  }, [withdrawalsData.withdrawalsHistory]);\n\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prev) => ({\n          ...prev,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prev.params,\n            filtered: prev.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getWithdrawalsHistory(state.params))\n      );\n    } else {\n      setState(\n        (prev) => ({\n          ...prev,\n          dateRange: [],\n          params: {\n            ...prev.params,\n            filtered: prev.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getWithdrawalsHistory(state.params))\n      );\n    }\n  };\n\n  const { withdrawalsHistory, pages, isFetchData, dateRange } = state;\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={isFetchData}\n        data={withdrawalsHistory}\n        pages={pages}\n        filterable={true}\n        sortable={true}\n        manual\n        onFetchData={(tableState) => {\n          setState((prev) => ({\n            ...prev,\n            isFetchData: true,\n            params: {\n              page: Number(tableState.page) + 1,\n              perPage: tableState.pageSize,\n              sorted: tableState.sorted,\n              filtered: tableState.filtered,\n            },\n          }));\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getWithdrawalsHistory({\n                  page: Number(tableState.page) + 1,\n                  perPage: tableState.pageSize,\n                  sorted: tableState.sorted,\n                  filtered: [...tableState.filtered, ...dateRange],\n                })\n              ),\n            200\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default WithdrawalsHistory;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../../helpers/timeStampToDate\";\nimport ReactTable from \"react-table\";\nimport { customSelectFilter } from \"../../../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../../../utils/config/exchange_ids\";\nimport ModalPopup from \"../../../../../../helpers/ModalPopup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getAbaFileById,\n  getAbaFiles,\n  handlerWithdrawalRequestAction,\n} from \"../../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst AbaFile = ({ activeAbaFileIdData }) => {\n  const dispatch = useDispatch();\n  const withdrawals = useSelector((store) => store.client.withdrawals);\n  const [state, setState] = useState({\n    isFetchData: false,\n    currentAbaFile: [],\n    pages: 1,\n    params: {\n      page: 1,\n      perPage: 10,\n      sorted: [],\n      filtered: [],\n    },\n    activeAbaFileId: activeAbaFileIdData,\n    selected: {},\n    selectAll: 0,\n    showPopup: false,\n    type: \"\",\n    status: \"\",\n  });\n  const columns = [\n    {\n      Header: \"ABA ID\",\n      Cell: () => {\n        return <span>{state.activeAbaFileId}</span>;\n      },\n      width: \"100\",\n      filterable: false,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Withdrawal id\",\n      accessor: \"publicId\",\n      width: \"100\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Date\",\n      accessor: \"time\",\n      filterable: false,\n      width: \"100\",\n      Cell: (row) => {\n        return <span>{timeStampToDate(row.original.time)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Time\",\n      sortable: false,\n      filterable: false,\n      width: \"100\",\n      Cell: (row) => {\n        return <span>{timeStampToTime(row.original.time)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client id\",\n      accessor: \"clientId\",\n      width: \"100\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"clientName\",\n      width: \"150\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Withdrawal Amount\",\n      accessor: \"amount\",\n      filterable: false,\n      width: \"150\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Withdrawal Currency\",\n      accessor: \"currency\",\n      width: \"150\",\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: ccy }),\n    },\n    {\n      Header: \"to Account Number\",\n      accessor: \"accountNumber\",\n      width: \"150\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Bank Name\",\n      accessor: \"bankName\",\n      width: \"120\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Sent Amount\",\n      accessor: \"sentAmount\",\n      width: \"120\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Sent Amount Trx\",\n      accessor: \"sentAmountTrx\",\n      width: \"120\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Fee Amount\",\n      accessor: \"fee\",\n      width: \"120\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Fee Trx\",\n      accessor: \"feeTrx\",\n      width: \"auto\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n      sortable: false,\n      filterable: false,\n      width: \"150\",\n    },\n    {\n      id: \"checkbox\",\n      accessor: \"\",\n      Cell: (original) => {\n        return (\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            checked={state.selected[original.publicId] === true}\n            disabled={\n              original.status === \"Approved\" || original.status === \"Returned\"\n            }\n            onChange={() => toggleRow(original.publicId)}\n          />\n        );\n      },\n      sortable: false,\n      filterable: false,\n      width: 45,\n    },\n    {\n      Header: \"Actions\",\n      Filter: () => {\n        return (\n          <div className=\"newDepositActions\">\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/reject.svg\"\n              alt=\"reject\"\n              title={\"Reject\"}\n              onClick={() => handlerShowPopup(\"reject\", 3)}\n            />\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/approve.svg\"\n              alt=\"approve\"\n              title={\"Approve\"}\n              onClick={() => handlerShowPopup(\"approve\", 2)}\n            />\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/return.svg\"\n              alt=\"return\"\n              title={\"Return\"}\n              onClick={() => handlerShowPopup(\"return\", 4)}\n            />\n          </div>\n        );\n      },\n      sortable: false,\n      width: 120,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          };\n        }\n      },\n    },\n  ];\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      pages: withdrawals.currentAbaFile.pages,\n      currentAbaFile: withdrawals.currentAbaFile.data,\n      isFetchData: false,\n      activeAbaFileId: activeAbaFileIdData,\n      selected: {},\n    }));\n  }, [withdrawals.currentAbaFile, activeAbaFileIdData]);\n\n  const toggleRow = (publicId) => {\n    const newSelected = { ...state.selected };\n    newSelected[publicId] = !state.selected[publicId];\n    setState({\n      ...state,\n      selected: newSelected,\n      selectAll: 2,\n    });\n  };\n\n  const handlerShowPopup = (type, status) => {\n    setState({\n      ...state,\n      showPopup: true,\n      type: type,\n      status: status,\n    });\n  };\n\n  const handlerClosePopup = () => {\n    setState({\n      ...state,\n      showPopup: false,\n    });\n  };\n  const {\n    currentAbaFile,\n    pages,\n    isFetchData,\n    activeAbaFileId,\n    showPopup,\n    type,\n    status,\n    selected,\n  } = state;\n\n  let params = {\n    abaId: activeAbaFileId,\n    status: status,\n    ids: Object.keys(selected),\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <span>ABA file withdrawals:</span>\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={10}\n        columns={columns}\n        loading={isFetchData}\n        data={currentAbaFile}\n        pages={pages}\n        manual\n        filterable={true}\n        sortable={true}\n        onFetchData={(state) => {\n          setState({\n            ...state,\n            isFetchData: true,\n            params: {\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered,\n            },\n          });\n\n          if (activeAbaFileId) {\n            clearTimeout(bounce);\n            bounce = setTimeout(\n              () =>\n                dispatch(\n                  getAbaFileById(activeAbaFileId, {\n                    page: Number(state.page) + 1,\n                    perPage: state.pageSize,\n                    sorted: state.sorted,\n                    filtered: state.filtered,\n                  })\n                ),\n              200\n            );\n          }\n        }}\n      />\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            dispatch(handlerWithdrawalRequestAction(params));\n            setTimeout(() => {\n              dispatch(getAbaFileById(activeAbaFileId, state.params));\n              dispatch(\n                getAbaFiles({\n                  page: 1,\n                  perPage: 10,\n                  sorted: [],\n                  filtered: [],\n                })\n              );\n            }, 200);\n          }}\n          onClose={(e) => handlerClosePopup(e)}\n          title={\n            type === \"reject\"\n              ? \"Are you sure you want to reject the requests?\"\n              : type === \"approve\"\n              ? \"Approve the requests?\"\n              : \"Return withdrawal requests?\"\n          }\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          id={selected}\n          type=\"\"\n        />\n      )}\n    </div>\n  );\n};\n\nAbaFile.propTypes = {\n  activeAbaFileIdData: PropTypes.any,\n};\n\nexport default AbaFile;\n","import React, { useState, useEffect } from \"react\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { BuildAPIUrl } from \"../../../../../utils/config/URLS\";\nimport { URLS } from \"../../../../../utils/config/URLS\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { abaFilesStatuses } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport ReactTable from \"react-table\";\nimport ModalPopup from \"../../../../../helpers/ModalPopup\";\nimport classNames from \"classnames\";\nimport AbaFile from \"./AbaFile\";\nimport \"./index.less\";\nimport DownloadFilesButtonTableStyle from \"../../../../../components/Common/DownloadFilesButtonTableStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  approveRejectAbaFileById,\n  getAbaFileById,\n  getAbaFiles,\n} from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst AbaFiles = () => {\n  const dispatch = useDispatch();\n  const withdrawalsData = useSelector(\n    (store) => store.manualBanking.withdrawals\n  );\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [abaFiles, setAbaFiles] = useState(withdrawalsData.abaFiles.data || []);\n  const [pages, setPages] = useState(1);\n  const [dateRangeState, setDateRangeState] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 10,\n    sorted: [],\n    filtered: [],\n  });\n  const [activeAbaFileId, setActiveAbaFileId] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [notes, setNotes] = useState(\"\");\n  useEffect(() => {\n    setPages(withdrawalsData.abaFiles.pages);\n    setAbaFiles(withdrawalsData.abaFiles.data);\n    setIsFetchData(false);\n    setActiveAbaFileId(\n      activeAbaFileId ||\n        (withdrawalsData.abaFiles.data[0] &&\n          withdrawalsData.abaFiles.data[0].publicId)\n    );\n  }, [withdrawalsData.abaFiles]);\n\n  const setActiveAbaFile = (id) => {\n    setActiveAbaFileId(id);\n  };\n  const handleShowPopup = (id, type, status) => {\n    setShowPopup(true);\n    setId(id);\n    setType(type);\n    setStatus(status);\n  };\n  const handleClosePopup = (e) => {\n    setShowPopup(false);\n  };\n  const onChange = (e) => {\n    setNotes(e.target.value);\n  };\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setDateRangeState([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setDateRangeState([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n  const columns = [\n    {\n      Header: \"ABA ID\",\n      width: \"auto\",\n      Cell: (row) => {\n        return (\n          <span\n            className={classNames({\n              abaFilesId: true,\n              \"abaFilesId-active\": activeAbaFileId === row.original.publicId,\n            })}\n            onClick={() => {\n              dispatch(getAbaFileById(row.original.publicId, params));\n              setActiveAbaFile(row.original.publicId);\n            }}\n          >\n            {row.original.publicId}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n              padding: 0,\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Date\",\n      accessor: \"createdAt\",\n      filterable: false,\n      width: \"auto\",\n      Cell: (row) => {\n        return (\n          <span>\n            {timeStampToDate(row.original.uploadedAt)}{\" \"}\n            {timeStampToTime(row.original.uploadedAt)}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Amount\",\n      sortable: false,\n      filterable: false,\n      width: \"auto\",\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n      width: \"auto\",\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: abaFilesStatuses }),\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"actions\",\n      sortable: false,\n      filterable: false,\n      width: 150,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          };\n        }\n      },\n      Cell: (row) => {\n        return (\n          <div className=\"newDepositActions\">\n            <DownloadFilesButtonTableStyle\n              url={\n                BuildAPIUrl(URLS.BANKING) +\n                `/withdrawals/aba-files/${row.original.publicId}/download`\n              }\n            />\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/reject.svg\"\n              title={\"Reject\"}\n              alt=\"reject\"\n              onClick={() =>\n                handleShowPopup(row.original.publicId, \"reject\", 3)\n              }\n            />\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/approve.svg\"\n              title={\"Approve\"}\n              alt=\"approve\"\n              onClick={() =>\n                handleShowPopup(row.original.publicId, \"approve\", 2)\n              }\n            />\n            <img\n              className=\"newDepositActions-icons\"\n              src=\"/img/svg/return.svg\"\n              title={\"Return\"}\n              alt=\"return\"\n              onClick={() =>\n                handleShowPopup(row.original.publicId, \"return\", 4)\n              }\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <span>ABA Files:</span>\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <div className=\"abbaFilesTable-size\">\n        <ReactTable\n          defaultPageSize={10}\n          columns={columns}\n          loading={isFetchData}\n          data={abaFiles}\n          pages={pages}\n          manual\n          filterable={true}\n          sortable={true}\n          onFetchData={(state) => {\n            setIsFetchData(true);\n            setParams({\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: [...state.filtered, ...dateRangeState],\n            });\n\n            clearTimeout(bounce);\n            bounce = setTimeout(\n              () =>\n                dispatch(\n                  getAbaFiles({\n                    page: Number(state.page) + 1,\n                    perPage: state.pageSize,\n                    sorted: state.sorted,\n                    filtered: [...state.filtered, ...dateRangeState],\n                  })\n                ),\n              200\n            );\n          }}\n          getTdProps={(state, rowInfo, column) => {\n            return {\n              style:\n                column.id === \"notes\"\n                  ? { overflow: \"visible\", padding: \"0 7px\" }\n                  : {},\n            };\n          }}\n        />\n      </div>\n      {showPopup && (\n        <ModalPopup\n          onYes={() => {\n            dispatch(approveRejectAbaFileById({ status: status, id: id }));\n            setTimeout(() => dispatch(getAbaFiles(params)), 200);\n          }}\n          onClose={(e) => handleClosePopup(e)}\n          title={\n            type === \"reject\"\n              ? \"Are you sure you want to reject the ABA file?\"\n              : type === \"approve\"\n              ? \"Approve the ABA file?\"\n              : \"Return the ABA file?\"\n          }\n          ok={\"Yes\"}\n          cancel={\"No\"}\n          onChange={(e) => onChange(e)}\n          id={id}\n          type=\"\"\n        />\n      )}\n      <AbaFile activeAbaFileId={activeAbaFileId} />\n    </div>\n  );\n};\n\nexport default AbaFiles;\n","import React, { useState, useEffect } from \"react\";\nimport { dateRangeObj } from \"../../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../../helpers/timeStampToDate\";\nimport { BuildAPIUrl } from \"../../../../../utils/config/URLS\";\nimport { URLS } from \"../../../../../utils/config/URLS\";\nimport { customSelectFilter } from \"../../../../../helpers/selectOptions\";\nimport { abaArchiveFilesStatuses } from \"../../../../../utils/config/exchange_ids\";\nimport DatePicker from \"../../../../../helpers/DataPicker\";\nimport ReactTable from \"react-table\";\nimport \"./index.less\";\nimport DownloadFilesButtonTableStyle from \"../../../../../components/Common/DownloadFilesButtonTableStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getArchiveAbaFiles } from \"../../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = () => [\n  {\n    Header: \"ABA ID\",\n    width: \"auto\",\n    accessor: \"publicId\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"updatedAt\",\n    filterable: false,\n    width: \"auto\",\n    Cell: (row) => {\n      return (\n        <span>\n          {timeStampToDate(row.original.updatedAt)}{\" \"}\n          {timeStampToTime(row.original.updatedAt)}\n        </span>\n      );\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    width: \"auto\",\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({\n        filter,\n        onChange,\n        options: abaArchiveFilesStatuses,\n      }),\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"center\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"File\",\n    sortable: false,\n    filterable: false,\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            padding: 0,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          },\n        };\n      }\n    },\n    Cell: (row) => {\n      return (\n        <div className=\"newDepositActions\">\n          <DownloadFilesButtonTableStyle\n            url={\n              BuildAPIUrl(URLS.BANKING) +\n              `/withdrawals/aba-files/${row.original.publicId}/download`\n            }\n          />\n        </div>\n      );\n    },\n  },\n];\n\nconst AbaArchive = () => {\n  const dispatch = useDispatch();\n  const withdrawals = useSelector((store) => store.manualBanking.withdrawals);\n  const [isFetchData, setIsFetchData] = useState(false);\n  const [abaArchiveFiles, setAbaArchiveFiles] = useState(\n    withdrawals.abaArchiveFiles.data || []\n  );\n  const [pages, setPages] = useState(1);\n  const [dateRangeState, setDateRangeState] = useState(dateRangeObj);\n  const [params, setParams] = useState({\n    page: 1,\n    perPage: 20,\n    sorted: [],\n    filtered: [],\n  });\n  useEffect(() => {\n    setPages(withdrawals.abaArchiveFiles.pages);\n    setAbaArchiveFiles(withdrawals.abaArchiveFiles.data);\n    setIsFetchData(false);\n  }, [withdrawals.abaArchiveFiles]);\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setDateRangeState([\n        { id: \"from\", value: value[0] },\n        { id: \"to\", value: value[1] },\n      ]);\n      setParams({\n        ...params,\n        filtered: params.filtered\n          .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n          .concat([\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ]),\n      });\n    } else {\n      setDateRangeState([]);\n      setParams({\n        ...params,\n        filtered: params.filtered.filter(\n          (el) => el.id !== \"from\" && el.id !== \"to\"\n        ),\n      });\n    }\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <div className=\"abaArchiveTable-size\">\n        <ReactTable\n          defaultPageSize={10}\n          columns={columns()}\n          loading={isFetchData}\n          data={abaArchiveFiles}\n          pages={pages}\n          manual\n          filterable={true}\n          sortable={true}\n          onFetchData={(state) => {\n            setIsFetchData(true);\n            setParams({\n              ...params,\n              page: Number(state.page) + 1,\n              perPage: state.pageSize,\n              sorted: state.sorted,\n              filtered: state.filtered.concat(dateRangeState),\n            });\n\n            clearTimeout(bounce);\n            bounce = setTimeout(\n              () =>\n                dispatch(\n                  getArchiveAbaFiles({\n                    page: Number(state.page) + 1,\n                    perPage: state.pageSize,\n                    sorted: state.sorted,\n                    filtered: [...state.filtered, ...dateRangeState],\n                  })\n                ),\n              200\n            );\n          }}\n          getTdProps={(state, rowInfo, column) => {\n            return {\n              style:\n                column.id === \"notes\"\n                  ? { overflow: \"visible\", padding: \"0 7px\" }\n                  : {},\n            };\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AbaArchive;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport WithdrawalsRequests from \"./WithdrawalsRequests\";\nimport WithdrawalsHistory from \"./WithdrawalsHistory\";\nimport AbaFiles from \"./AbaFiles\";\nimport AbaArchive from \"./AbaArchive\";\nimport { URLS_LOCAL_GROUPS } from \"../../../../utils/config/URLS\";\nimport PropTypes from \"prop-types\";\n\nfunction Withdrawals({ tab }) {\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"container-tabs tabs\">\n        <div className=\"ta reports\">\n          <ul className=\"tabList\">\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking +\n                  \"/withdrawals\" +\n                  \"/requests\"\n                }\n                className={classNames({ active: tab === \"requests\" })}\n              >\n                Requests\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking +\n                  \"/withdrawals\" +\n                  \"/aba-files\"\n                }\n                className={classNames({ active: tab === \"aba-files\" })}\n              >\n                ABA Files\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking + \"/withdrawals\" + \"/history\"\n                }\n                className={classNames({ active: tab === \"history\" })}\n              >\n                History\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={\n                  URLS_LOCAL_GROUPS.manual_banking +\n                  \"/withdrawals\" +\n                  \"/aba-archive\"\n                }\n                className={classNames({ active: tab === \"aba-archive\" })}\n              >\n                ABA Archive\n              </NavLink>\n            </li>\n          </ul>\n\n          {(() => {\n            switch (tab) {\n              case \"requests\":\n                return <WithdrawalsRequests />;\n              case \"history\":\n                return <WithdrawalsHistory />;\n              case \"aba-files\":\n                return <AbaFiles />;\n              case \"aba-archive\":\n                return <AbaArchive />;\n              default:\n                return <WithdrawalsRequests />;\n            }\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWithdrawals.propTypes = {\n  tab: PropTypes.any,\n};\n\nexport default Withdrawals;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  timeStampToTime,\n  timeStampToDate,\n} from \"../../../../helpers/timeStampToDate\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport { BuildAPIUrl, URLS_ADMIN_GROUPS } from \"../../../../utils/config/URLS\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport { statementsType, ccy } from \"../../../../utils/config/exchange_ids\";\nimport classNames from \"classnames\";\nimport ReactTable from \"react-table\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport \"./index.less\";\nimport DownloadReportsButton from \"../../../../components/Common/DownloadReportsButton\";\nimport { CopyTextToClipboard } from \"../../../../helpers/copyToClipboard\";\nimport Select from \"react-select\";\nimport { colourStyles } from \"../../../../helpers/reactSelectStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  adminAccountGetCsvBankStatements,\n  adminAccountGetDepositsRequests,\n  archiveRequest,\n  matchRequest,\n} from \"../../../../requests/manualBanking\";\n\nlet requestsBounce;\nlet csvBankStatementsBounce;\nconst AdminAccount = () => {\n  const adminAccountData = useSelector(\n    (store) => store.manualBanking.adminAccount\n  );\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    csvBankStatementsIsFetchData: false,\n    csvBankStatements: adminAccountData.csvBankStatements.data || [],\n    csvBankStatementsPages: 1,\n    csvBankStatementsParams: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [],\n    },\n    csvBankStatementsDateRange: dateRangeObj,\n    requestsIsFetchData: false,\n    requests: adminAccountData.requests.data || [],\n    requestsPages: 1,\n    requestsParams: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"4\" }]],\n    },\n    requestsDateRange: dateRangeObj,\n    hash: {},\n    reqType: \"deposit\",\n    trxType: {},\n    trxTypes: {\n      withdrawal: \"1\",\n      deposit: \"2\",\n      fee: \"3\",\n      duplicate: \"4\",\n    },\n  });\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      requestsPages: adminAccountData.requests.pages,\n      requests: adminAccountData.requests.data,\n      requestsIsFetchData: false,\n      csvBankStatementsPages: adminAccountData.csvBankStatements.pages,\n      csvBankStatements: adminAccountData.csvBankStatements.data,\n      csvBankStatementsIsFetchData: false,\n    }));\n  }, [adminAccountData.requests, adminAccountData.csvBankStatements]);\n  const handleDateRange = (value, type) => {\n    const dateRangeKey =\n      type === \"csv\" ? \"csvBankStatementsDateRange\" : \"requestsDateRange\";\n    const paramsKey =\n      type === \"csv\" ? \"csvBankStatementsParams\" : \"requestsParams\";\n\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          [dateRangeKey]: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          [paramsKey]: {\n            ...prevState[paramsKey],\n            filtered: prevState[paramsKey].filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => {\n          const fetchDataFunction =\n            type === \"csv\"\n              ? adminAccountGetCsvBankStatements\n              : adminAccountGetDepositsRequests;\n\n          fetchDataFunction(state[paramsKey]);\n        }\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          [dateRangeKey]: [],\n          [paramsKey]: {\n            ...prevState[paramsKey],\n            filtered: prevState[paramsKey].filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => {\n          const fetchDataFunction =\n            type === \"csv\"\n              ? adminAccountGetCsvBankStatements\n              : adminAccountGetDepositsRequests;\n\n          fetchDataFunction(state[paramsKey]);\n        }\n      );\n    }\n  };\n  const onSelectChange = (opt, id) => {\n    let newTrxType = { ...state.trxType };\n    newTrxType[id] = { type: opt.value, val: opt.label };\n    setState((prevState) => ({\n      ...prevState,\n      trxType: newTrxType,\n    }));\n  };\n  const onInputChange = (e, id) => {\n    let newHash = { ...state.hash };\n    newHash[id] = e.target.value;\n    setState((prevState) => ({\n      ...prevState,\n      hash: newHash,\n    }));\n  };\n  const copyToClipBoard = (tableDescr) => {\n    CopyTextToClipboard(tableDescr)\n      .then(() => {\n        toast.success(\"Description copied to clipboard\");\n      })\n      .catch(() => {\n        toast.error(\"Something went wrong\");\n      });\n  };\n  const setDefSelectVal = (val, statementsType) => {\n    let value = statementsType.find((el) => el.value === val);\n    return { label: value.value, value: value.key };\n  };\n  const {\n    requests,\n    requestsPages,\n    requestsIsFetchData,\n    requestsParams,\n    csvBankStatements,\n    csvBankStatementsPages,\n    csvBankStatementsIsFetchData,\n    csvBankStatementsParams,\n    csvBankStatementsDateRange,\n    requestsDateRange,\n  } = state;\n  let selectOptions = [];\n  statementsType.forEach((el) =>\n    selectOptions.push({ label: el.value, value: el.key })\n  );\n  let csvBankStatementsColumns = [\n    {\n      Header: \"MATCH\",\n      width: 80,\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return (\n          <img\n            onClick={() => {\n              dispatch(\n                matchRequest(\n                  row.original.publicId,\n                  state.hash[row.original.publicId],\n                  (state.trxType[row.original.publicId] &&\n                    state.trxType[row.original.publicId].type) ||\n                    state.trxTypes[row.original.type]\n                )\n              );\n              dispatch(\n                adminAccountGetCsvBankStatements(csvBankStatementsParams)\n              );\n              adminAccountGetDepositsRequests(requestsParams);\n            }}\n            src=\"/img/svg/match.svg\"\n            title={\"Match\"}\n            className=\"newDepositActions-icons\"\n            alt=\"match\"\n          />\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Trx Type\",\n      width: 100,\n      id: \"trxType\",\n      accessor: \"type\",\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: statementsType }),\n      Cell: (row) => {\n        return (\n          <Select\n            value={\n              (state.trxType[row.original.publicId] &&\n                setDefSelectVal(\n                  state.trxType[row.original.publicId].val,\n                  statementsType\n                )) ||\n              setDefSelectVal(row.original.type, statementsType)\n            }\n            options={selectOptions}\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            onChange={(selectedOption) =>\n              onSelectChange(selectedOption, row.original.publicId)\n            }\n            name=\"purpose\"\n            placeholder=\"\"\n            styles={colourStyles}\n          />\n        );\n      },\n    },\n    {\n      Header: \"Trx Hash ID\",\n      width: 120,\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return (\n          <input\n            id={row.original.publicId}\n            className={classNames({\n              \"csvBankStatements-input\": true,\n              \"csvBankStatements-disableInput\":\n                (state.trxType[row.original.publicId] &&\n                  state.trxType[row.original.publicId].val === \"fee\") ||\n                (state.trxType[row.original.publicId] &&\n                  state.trxType[row.original.publicId].val === \"duplicate\") ||\n                row.original.type === \"fee\" ||\n                row.original.type === \"duplicate\",\n            })}\n            onChange={(e) => onInputChange(e, row.original.publicId)}\n            value={state.hash[row.original.publicId]}\n            disabled={\n              (state.trxType[row.original.publicId] &&\n                state.trxType[row.original.publicId].val === \"fee\") ||\n              (state.trxType[row.original.publicId] &&\n                state.trxType[row.original.publicId].val === \"duplicate\") ||\n              row.original.type === \"fee\" ||\n              row.original.type === \"duplicate\"\n            }\n          />\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: \"0 4px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Bank Statement ID\",\n      accessor: \"publicId\",\n      width: 150,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Uploaded\",\n      accessor: \"uploadedAt\",\n      width: 150,\n      sortable: false,\n      filterable: false,\n      Cell: (row) => {\n        return (\n          <span>\n            {timeStampToDate(row.original.uploadedAt) +\n              \" \" +\n              timeStampToTime(row.original.uploadedAt)}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Posting Date\",\n      accessor: \"postedAt\",\n      sortable: false,\n      filterable: false,\n      width: 150,\n      Cell: (row) => {\n        return (\n          <span>\n            {timeStampToDate(row.original.postedAt) +\n              \" \" +\n              timeStampToTime(row.original.postedAt)}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Value Date\",\n      width: 150,\n      accessor: \"evaluatedAt\",\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return (\n          <span>\n            {timeStampToDate(row.original.evaluatedAt) +\n              \" \" +\n              timeStampToTime(row.original.evaluatedAt)}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Description\",\n      accessor: \"description\",\n      width: 140,\n    },\n    {\n      Header: \"Debit\",\n      width: 80,\n      accessor: \"debit\",\n      filterable: false,\n      sortable: false,\n    },\n    {\n      Header: \"Credit\",\n      width: 150,\n      accessor: \"credit\",\n      filterable: false,\n      sortable: false,\n    },\n    {\n      Header: \"Balance\",\n      accessor: \"balance\",\n      // width: 100,\n      filterable: false,\n      sortable: false,\n    },\n  ];\n  let requestsColumns = [\n    {\n      Header: \"ARCHIVE\",\n      width: 90,\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return (\n          <img\n            onClick={() => {\n              dispatch(archiveRequest(row.original.publicId));\n              dispatch(adminAccountGetDepositsRequests(requestsParams));\n            }}\n            src=\"/img/svg/archive.svg\"\n            title={\"Archive\"}\n            className=\"newDepositActions-icons\"\n            alt=\"archive\"\n          />\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              padding: 0,\n              cursor: \"pointer\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"ID\",\n      accessor: \"publicId\",\n      width: 80,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Hash\",\n      accessor: \"hashId\",\n      Cell: (row) => {\n        return (\n          <span onClick={() => copyToClipBoard(row.original.hashId)}>\n            {row.original.hashId}\n          </span>\n        );\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n              cursor: \"pointer\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Date\",\n      accessor: \"createdAt\",\n      width: 90,\n      filterable: false,\n      Cell: (row) => {\n        return <span>{timeStampToDate(row.original.createdAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Time\",\n      width: 90,\n      filterable: false,\n      sortable: false,\n      Cell: (row) => {\n        return <span>{timeStampToTime(row.original.createdAt)}</span>;\n      },\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client ID\",\n      accessor: \"clientId\",\n      width: 140,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Client Name\",\n      accessor: \"clientName\",\n      width: 150,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Currency\",\n      accessor: \"currency\",\n      width: 80,\n      Filter: ({ filter, onChange }) =>\n        customSelectFilter({ filter, onChange, options: ccy }),\n    },\n    {\n      Header: \"Account Number\",\n      accessor: \"accountNumber\",\n      width: 120,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"right\",\n            },\n          };\n        }\n      },\n    },\n    {\n      Header: \"Bank Name\",\n      accessor: \"bankName\",\n      width: 150,\n      getProps: (state, rowInfo) => {\n        if (rowInfo === undefined) {\n          return state;\n        } else {\n          return {\n            style: {\n              textAlign: \"left\",\n            },\n          };\n        }\n      },\n    },\n  ];\n  let csvUrlParams = csvBankStatementsParams;\n  csvUrlParams.filtered = csvUrlParams.filtered.concat(\n    csvBankStatementsDateRange\n  );\n  let requestsUrlParams = requestsParams;\n  requestsUrlParams.filtered =\n    requestsUrlParams.filtered.concat(requestsDateRange);\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"adminAccountTables-left\">\n        <div className=\"reportsTableHeader-wrap\">\n          <div className=\"datePicker-wrap\">\n            <span>CSV Banks Statements:</span>\n            <DatePicker dateRange={(value) => handleDateRange(value, \"csv\")} />\n            <DownloadReportsButton\n              url={\n                BuildAPIUrl(URLS_ADMIN_GROUPS.admin_account) +\n                \"/bank-statements/csv-download\"\n              }\n              params={csvUrlParams}\n            />\n          </div>\n        </div>\n        <ReactTable\n          defaultPageSize={15}\n          columns={csvBankStatementsColumns}\n          loading={csvBankStatementsIsFetchData}\n          data={csvBankStatements}\n          pages={csvBankStatementsPages}\n          filterable={true}\n          sortable={true}\n          manual\n          onFetchData={(state) => {\n            setState((prevState) => ({\n              ...prevState,\n              csvBankStatementsIsFetchData: true,\n              csvBankStatementsParams: {\n                page: Number(state.page) + 1,\n                perPage: state.pageSize,\n                sorted: state.sorted,\n                filtered: state.filtered,\n              },\n            }));\n\n            clearTimeout(csvBankStatementsBounce);\n            csvBankStatementsBounce = setTimeout(\n              () =>\n                dispatch(\n                  adminAccountGetCsvBankStatements({\n                    page: Number(state.page) + 1,\n                    perPage: state.pageSize,\n                    sorted: state.sorted,\n                    filtered: [\n                      ...state.filtered,\n                      ...csvBankStatementsDateRange,\n                    ],\n                  })\n                ),\n              200\n            );\n          }}\n          getTdProps={(state, rowInfo, column) => {\n            return {\n              style:\n                column.id === \"trxType\"\n                  ? { overflow: \"visible\", padding: \"0 7px\" }\n                  : {},\n            };\n          }}\n        />\n      </div>\n      <div>\n        <div className=\"reportsTableHeader-wrap\">\n          <div className=\"datePicker-wrap\">\n            <span>Requests:</span>\n            <DatePicker\n              dateRange={(value) => handleDateRange(value, \"requests\")}\n            />\n            <DownloadReportsButton\n              url={\n                BuildAPIUrl(URLS_ADMIN_GROUPS.admin_account) +\n                \"/deposits/csv-download\"\n              }\n              params={requestsParams}\n            />\n          </div>\n        </div>\n        <ReactTable\n          defaultPageSize={15}\n          columns={requestsColumns}\n          loading={requestsIsFetchData}\n          data={requests}\n          pages={requestsPages}\n          filterable={true}\n          sortable={true}\n          manual\n          onFetchData={(state) => {\n            setState((prevState) => ({\n              ...prevState,\n              requestsIsFetchData: true,\n              requestsParams: {\n                page: Number(state.page) + 1,\n                perPage: state.pageSize,\n                sorted: state.sorted,\n                filtered: [\n                  ...state.filtered,\n                  ...[{ id: \"status\", value: \"4\" }],\n                ],\n              },\n            }));\n\n            clearTimeout(requestsBounce);\n            requestsBounce = setTimeout(\n              () =>\n                dispatch(\n                  adminAccountGetDepositsRequests({\n                    page: Number(state.page) + 1,\n                    perPage: state.pageSize,\n                    sorted: state.sorted,\n                    filtered: [\n                      ...state.filtered,\n                      ...[{ id: \"status\", value: \"4\" }],\n                      ...requestsDateRange,\n                    ],\n                  })\n                ),\n              200\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AdminAccount;\n","export function CopyTextToClipboard(text) {\n  return new Promise((resolve, reject) => {\n    try {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      textArea.style.opacity = 0;\n      textArea.style.position = \"fixed\";\n      textArea.style.left = \"-100000px\";\n      textArea.style.zIndex = \"-10000\";\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      let successful = document.execCommand(\"copy\");\n      document.body.removeChild(textArea);\n      if (successful) {\n        resolve();\n      } else {\n        reject();\n      }\n    } catch (err) {\n      reject();\n    }\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  adminEditBankDetails,\n  adminGetBankDetails,\n} from \"../../../../requests/adminRequests\";\n\nconst BankDetails = () => {\n  const dispatch = useDispatch();\n  const bankDetailsData = useSelector((store) => store.bankDetails);\n  const [state, setState] = useState({\n    accountNumber: \"\",\n    accountName: \"\",\n    bsb: \"\",\n    bankName: \"\",\n    accountHolder: \"\",\n  });\n  const handleOnChange = (type, value) => {\n    setState({\n      ...state,\n      [type]: value,\n    });\n  };\n  useEffect(() => {\n    dispatch(adminGetBankDetails());\n  }, []);\n  useEffect(() => {\n    setState({\n      ...bankDetailsData,\n    });\n  }, [bankDetailsData]);\n  const { accountNumber, accountName, bsb, bankName, accountHolder } = state;\n  const details = {\n    bankName: bankName,\n    bsb: bsb,\n    accountName: accountName,\n    accountNumber: accountNumber,\n    accountHolder: accountHolder,\n  };\n  return (\n    <div className=\"container-wrap\">\n      <div className=\"addressContainer mb\">\n        <h4>Bank details:</h4>\n        <ul className=\"adminUsersList\">\n          <li>\n            <span>Account Name</span>\n            <input\n              value={accountName}\n              onChange={(e) => handleOnChange(\"accountName\", e.target.value)}\n              className=\"react-select-container\"\n              type=\"text\"\n              name=\"accountName\"\n            />\n          </li>\n          <li>\n            <span>Account Holder</span>\n            <input\n              value={accountHolder}\n              onChange={(e) => handleOnChange(\"accountHolder\", e.target.value)}\n              className=\"react-select-container\"\n              type=\"text\"\n              name=\"accountHolder\"\n            />\n          </li>\n          <li>\n            <span>Account Number</span>\n            <input\n              value={accountNumber}\n              onChange={(e) => handleOnChange(\"accountNumber\", e.target.value)}\n              className=\"react-select-container\"\n              type=\"text\"\n              name=\"accountNumber\"\n            />\n          </li>\n          <li>\n            <span>BSB</span>\n            <input\n              value={bsb}\n              onChange={(e) => handleOnChange(\"bsb\", e.target.value)}\n              className=\"react-select-container\"\n              type=\"text\"\n              name=\"bsb\"\n            />\n          </li>\n          <li>\n            <span>Bank Name</span>\n            <input\n              value={bankName}\n              onChange={(e) => handleOnChange(\"bankName\", e.target.value)}\n              className=\"react-select-container\"\n              type=\"text\"\n              name=\"bankName\"\n            />\n          </li>\n        </ul>\n        <div className=\"profileButton\">\n          <span\n            onClick={() => dispatch(adminEditBankDetails(details))}\n            className=\"profileButton-submit\"\n          >\n            Submit\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  timeStampToDate,\n  timeStampToTime,\n} from \"../../../../helpers/timeStampToDate\";\nimport ReactTable from \"react-table\";\nimport { customSelectFilter } from \"../../../../helpers/selectOptions\";\nimport { ccy } from \"../../../../utils/config/exchange_ids\";\nimport { dateRangeObj } from \"../../../../helpers/setDefaultDateRangeFilterQuery\";\nimport DatePicker from \"../../../../helpers/DataPicker\";\nimport \"./index.less\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getArchive } from \"../../../../requests/manualBanking\";\n\nlet bounce;\n\nconst columns = [\n  {\n    Header: \"Deposit id\",\n    accessor: \"publicId\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"right\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Date\",\n    accessor: \"createdAt\",\n    filterable: false,\n    width: 100,\n    Cell: (row) => {\n      return <span>{timeStampToDate(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Time\",\n    sortable: false,\n    filterable: false,\n    width: 100,\n    Cell: (row) => {\n      return <span>{timeStampToTime(row.original.createdAt)}</span>;\n    },\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client id\",\n    accessor: \"clientId\",\n    width: 100,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Client Name\",\n    accessor: \"clientName\",\n    width: 150,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Deposit Currency\",\n    accessor: \"currency\",\n    width: 150,\n    Filter: ({ filter, onChange }) =>\n      customSelectFilter({ filter, onChange, options: ccy }),\n  },\n  {\n    Header: \"Account Number\",\n    accessor: \"accountNumber\",\n    width: 150,\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n  {\n    Header: \"Bank Name\",\n    accessor: \"bankName\",\n    getProps: (state, rowInfo) => {\n      if (rowInfo === undefined) {\n        return state;\n      } else {\n        return {\n          style: {\n            textAlign: \"left\",\n          },\n        };\n      }\n    },\n  },\n];\n\nconst Archive = () => {\n  const dispatch = useDispatch();\n  const archiveData = useSelector((store) => store.manualBanking.archive);\n  const [state, setState] = useState({\n    isFetchData: false,\n    archive: archiveData.data || [],\n    pages: 1,\n    dateRange: dateRangeObj,\n    params: {\n      page: 1,\n      perPage: 20,\n      sorted: [],\n      filtered: [...[{ id: \"status\", value: \"3\" }]],\n    },\n  });\n\n  useEffect(() => {\n    setState({\n      pages: archiveData.pages,\n      archive: archiveData.data,\n      isFetchData: false,\n    });\n  }, [archiveData]);\n\n  const dateRangeHandler = (value) => {\n    if (value) {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [\n            { id: \"from\", value: value[0] },\n            { id: \"to\", value: value[1] },\n          ],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered\n              .filter((el) => el.id !== \"from\" && el.id !== \"to\")\n              .concat([\n                { id: \"from\", value: value[0] },\n                { id: \"to\", value: value[1] },\n              ]),\n          },\n        }),\n        () => dispatch(getArchive(state.params))\n      );\n    } else {\n      setState(\n        (prevState) => ({\n          ...prevState,\n          dateRange: [],\n          params: {\n            ...prevState.params,\n            filtered: prevState.params.filtered.filter(\n              (el) => el.id !== \"from\" && el.id !== \"to\"\n            ),\n          },\n        }),\n        () => dispatch(getArchive(state.params))\n      );\n    }\n  };\n\n  return (\n    <div className=\"addressContainer deposits-table reports-table\">\n      <div className=\"reportsTableHeader-wrap\">\n        <div className=\"datePicker-wrap\">\n          <DatePicker dateRange={dateRangeHandler} />\n        </div>\n      </div>\n      <ReactTable\n        defaultPageSize={20}\n        columns={columns}\n        loading={state.isFetchData}\n        data={state.archive}\n        pages={state.pages}\n        manual\n        filterable={true}\n        sortable={true}\n        onFetchData={(tableState) => {\n          setState((prevState) => ({\n            ...prevState,\n            isFetchData: true,\n            params: {\n              page: Number(tableState.page) + 1,\n              perPage: tableState.pageSize,\n              sorted: tableState.sorted,\n              filtered: [\n                ...tableState.filtered,\n                ...[{ id: \"status\", value: \"5\" }],\n              ],\n            },\n          }));\n\n          clearTimeout(bounce);\n          bounce = setTimeout(\n            () =>\n              dispatch(\n                getArchive({\n                  page: Number(tableState.page) + 1,\n                  perPage: tableState.pageSize,\n                  sorted: tableState.sorted,\n                  filtered: [\n                    ...tableState.filtered,\n                    ...[{ id: \"status\", value: \"5\" }],\n                    ...state.dateRange,\n                  ],\n                })\n              ),\n            200\n          );\n        }}\n        getTdProps={(state, rowInfo, column) => {\n          return {\n            style:\n              column.id === \"notes\"\n                ? { overflow: \"visible\", padding: \"0 7px\" }\n                : {},\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Archive;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { URLS_LOCAL_GROUPS } from \"../../../utils/config/URLS\";\nimport BankStatements from \"./BankStatements\";\nimport Deposits from \"./Deposits\";\nimport Withdrawals from \"./Withdrawals\";\nimport AdminAccount from \"./AdminAccount\";\nimport BankDetails from \"./BankDetails\";\nimport Archive from \"./Archive\";\nimport \"./index.less\";\n\nfunction ManualBanking() {\n  const [isLoading, setIsLoading] = useState(true);\n  const params = useParams();\n  const { type, tab } = params;\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n  const renderTabContent = () => {\n    switch (type) {\n      case \"bank-statements\":\n        return <BankStatements tab={tab} />;\n      case \"deposits\":\n        return <Deposits tab={tab} />;\n      case \"withdrawals\":\n        return <Withdrawals tab={tab} />;\n      case \"admin-account\":\n        return <AdminAccount />;\n      case \"bank-details\":\n        return <BankDetails />;\n      case \"archive\":\n        return <Archive />;\n      default:\n        return <BankStatements tab={tab} />;\n    }\n  };\n  return (\n    !isLoading && (\n      <div className=\"container-wrap\">\n        <div className=\"container-tabs tabs\">\n          <div className=\"ta reports\">\n            <ul className=\"tabList\">\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.manual_banking +\n                    \"/bank-statements/bank-deposits\"\n                  }\n                  className={classNames({\n                    active: type === \"bank-statements\",\n                  })}\n                >\n                  Bank Statements\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={URLS_LOCAL_GROUPS.manual_banking + \"/deposits/new\"}\n                  className={classNames({ active: type === \"deposits\" })}\n                >\n                  Deposits\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={\n                    URLS_LOCAL_GROUPS.manual_banking + \"/withdrawals/requests\"\n                  }\n                  className={classNames({\n                    active: type === \"withdrawals\",\n                  })}\n                >\n                  Withdrawals\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={URLS_LOCAL_GROUPS.manual_banking + \"/admin-account\"}\n                  className={classNames({\n                    active: type === \"admin-account\",\n                  })}\n                >\n                  Admin Account\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={URLS_LOCAL_GROUPS.manual_banking + \"/bank-details\"}\n                  className={classNames({\n                    active: type === \"bank-details\",\n                  })}\n                >\n                  BankDetails\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={URLS_LOCAL_GROUPS.manual_banking + \"/archive\"}\n                  className={classNames({ active: type === \"archive\" })}\n                >\n                  Archive\n                </NavLink>\n              </li>\n            </ul>\n            {renderTabContent()}\n          </div>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default ManualBanking;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DownloadReportsButton.less\";\nimport { BuildUrl } from \"../../helpers/axios\";\nimport { useSelector } from \"react-redux\";\n\nconst DownloadReportsButton = ({ url, params, docs = false }) => {\n  const token = useSelector((store) => store.user.accessToken);\n  return (\n    <form target=\"_blank\" action={BuildUrl(url, params)} method=\"POST\">\n      <input type=\"hidden\" name=\"_token\" value={`Bearer ${token}`} />\n      {docs ? (\n        <button type=\"submit\" className=\"documentsButton\">\n          document\n        </button>\n      ) : (\n        <button type=\"submit\" className=\"container-tabs-export\">\n          <i className=\"fas fa-cloud-download-alt\" />\n          <span>Export</span>\n        </button>\n      )}\n    </form>\n  );\n};\n\nDownloadReportsButton.propTypes = {\n  url: PropTypes.string,\n  params: PropTypes.object,\n  docs: PropTypes.bool,\n};\n\nexport default DownloadReportsButton;\n","import React, { useState } from \"react\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\nimport \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker.css\";\nimport \"react-calendar/dist/Calendar.css\";\n\nconst now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nconst DatePicker = ({ dateRange }) => {\n  const [value, setValue] = useState([yesterdayBegin, todayEnd]);\n  const onChange = (newValue) => {\n    setValue(newValue);\n    if (newValue) {\n      let valueToTimestamp = newValue.map((el) => el.getTime().toString());\n      dateRange(valueToTimestamp);\n    } else {\n      dateRange();\n    }\n  };\n  return (\n    <div className=\"Sample\">\n      <div className=\"Sample__container\">\n        <main className=\"Sample__container__content\">\n          <DateRangePicker\n            onChange={onChange}\n            value={value}\n            format={\"dd-MM-y\"}\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nDatePicker.propTypes = {\n  dateRange: PropTypes.any,\n};\n\nexport default DatePicker;\n","import React from \"react\";\nimport \"./index.less\";\nimport PropTypes from \"prop-types\";\n\nconst ModalPopup = ({\n  onClose,\n  onYes,\n  id,\n  children,\n  title,\n  ok,\n  cancel,\n  type,\n  onChange,\n}) => {\n  return (\n    <div onClick={(e) => onClose(e)} className=\"popupOverlay\">\n      <div className=\"popupContent\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modalPopup\">\n          <h2>{title}</h2>\n          {type && type === \"reject\" && (\n            <React.Fragment>\n              <label htmlFor=\"modalPopup-comment\">Comment:</label>\n              <textarea\n                onFocus={(e) => e.stopPropagation()}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    onYes(e);\n                  }\n                }}\n                onChange={(e) => onChange(e)}\n                rows=\"3\"\n                id=\"modalPopup-comment\"\n                className=\"modalPopup-comment\"\n              />\n            </React.Fragment>\n          )}\n          <div className=\"modalPopup-buttons\">\n            <span\n              onClick={(e) => {\n                onYes(id);\n                onClose(e);\n              }}\n            >\n              {ok}\n            </span>\n            <span onClick={(e) => onClose(e)}>{cancel}</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalPopup.propTypes = {\n  onClose: PropTypes.any,\n  onYes: PropTypes.any,\n  id: PropTypes.any,\n  children: PropTypes.any,\n  title: PropTypes.any,\n  ok: PropTypes.any,\n  cancel: PropTypes.any,\n  type: PropTypes.any,\n  onChange: PropTypes.any,\n};\n\nexport default ModalPopup;\n","export const colourStyles = {\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isSelected\n        ? \"var(--no-active-tabs)\"\n        : isFocused\n        ? \"var(--no-active-tabs)\"\n        : \"var(--main-bg-color)\",\n      borderTop: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      borderBottom: isSelected ? \"1px solid var(--border-color)\" : \"none\",\n      color: \"#FFF\",\n      cursor: \"pointer\",\n    };\n  },\n  placeholder: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  singleValue: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n    };\n  },\n  input: (styles) => {\n    return {\n      ...styles,\n      color: \"var(--text-white-color)\",\n      padding: \"2px\",\n    };\n  },\n  indicatorSeparator: (styles) => {\n    return {\n      ...styles,\n      display: \"none\",\n    };\n  },\n  dropdownIndicator: (styles) => {\n    return {\n      ...styles,\n      padding: \"0\",\n      color: \"var(--text-white-color)\",\n    };\n  },\n  menu: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      background: \"var(--main-bg-color)\",\n    };\n  },\n  container: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      maxHeight: \"30px\",\n      fontSize: \"12px\",\n      width: \"100%\",\n      marginRight: \"2px\",\n    };\n  },\n  control: (styles) => {\n    return {\n      ...styles,\n      boxSizing: \"border-box\",\n      height: \"30px\",\n      display: \"flex\",\n      minHeight: \"0\",\n      alignItems: \"center\",\n      border: \"none\",\n      borderRadius: \"0\",\n      background: \"var(--main-bg-color)\",\n      boxShadow: \"none\",\n    };\n  },\n};\n","import moment from \"moment\";\nimport React from \"react\";\n\nexport const dateOptions = {\n  days: () => {\n    let days = [];\n    for (let i = 1; i <= 31; i++) {\n      days.push({\n        label: i,\n        value: i.toString().length > 1 ? i.toString() : \"0\" + i,\n      });\n    }\n    return days;\n  },\n  months: () => {\n    let months = [];\n    let start = new Date(1970, 0);\n    for (let i = 0; i < 12; i++) {\n      months.push({\n        label: moment(start.getMilliseconds()).add(i, \"month\").format(\"MMMM\"),\n        value: i.toString().length > 1 ? (i + 1).toString() : \"0\" + (i + 1),\n      });\n    }\n    return months;\n  },\n  years: () => {\n    let years = [];\n    let date = new Date();\n    let lastYear = date.getFullYear() - 18;\n    for (let i = 1920; i <= lastYear; i++) {\n      years.push({ label: i.toString(), value: i.toString() });\n    }\n    return years;\n  },\n};\nfunction optsMapper(opt) {\n  return { value: opt.id, label: opt.name };\n}\nexport const prepareOptions = (options) =>\n  options ? options.map(optsMapper) : [];\nexport const customSelectFilter = ({ filter, onChange, options }) => {\n  return (\n    <select\n      onChange={(event) => onChange(event.target.value)}\n      style={{\n        width: \"100%\",\n        height: \"20px\",\n        padding: 0,\n        background: \"#252f35\",\n        color: \"#fff\",\n      }}\n      value={filter ? filter.value : \"all\"}\n    >\n      <option value=\"\">Show All</option>\n      {options\n        .filter((item, i, s) => s.lastIndexOf(item) == i)\n        .map(function (item) {\n          return (\n            <option key={item.key} value={item.key}>\n              {item.value}\n            </option>\n          );\n        })}\n    </select>\n  );\n};\n","const now = new Date();\nconst yesterdayBegin = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate() - 30\n);\nconst todayEnd = new Date(\n  now.getFullYear(),\n  now.getMonth(),\n  now.getDate(),\n  23,\n  59,\n  59,\n  999\n);\n\nexport const dateRangeObj = [\n  { id: \"from\", value: yesterdayBegin.getTime().toString() },\n  { id: \"to\", value: todayEnd.getTime().toString() },\n];\n","import moment from \"moment\";\n\nexport const timeStampToDate = (timeStamp) => {\n  return moment(timeStamp).format(\"DD-MM-YYYY\");\n};\nexport const timeStampToTime = (timeStamp) => {\n  return moment(timeStamp).format(\"HH:mm:ss.SSS\");\n};\n","export const SYMBOLS_INFO = {\n  BTC: {\n    symbol: \"BTC\",\n    title: \"Bitcoin\",\n    precision: 8,\n  },\n  ETH: {\n    symbol: \"ETH\",\n    title: \"Ethereum\",\n    precision: 8,\n  },\n  LTC: {\n    symbol: \"LTC\",\n    title: \"Litecoin\",\n    precision: 8,\n  },\n  USDT: {\n    symbol: \"USDT\",\n    title: \"Tether\",\n    precision: 8,\n  },\n};\n\nexport const ccyPairs = [\n  { key: \"BTC_USDT\", value: \"BTC/USDT\" },\n  { key: \"ETH_USDT\", value: \"ETH/USDT\" },\n  { key: \"LTC_USDT\", value: \"LTC/USDT\" },\n];\n\nexport const ccy = [\n  { key: \"USDT\", value: \"USDT\" },\n  // {key:'BTC', value: 'BTC'},\n  // {key:'ETH', value: 'ETH'},\n];\n\nexport const statementsType = [\n  { key: \"1\", value: \"withdrawal\" },\n  { key: \"2\", value: \"deposit\" },\n  { key: \"3\", value: \"fee\" },\n  { key: \"4\", value: \"duplicate\" },\n];\n\nexport const statementsStatuses = [\n  { key: \"0\", value: \"new\" },\n  { key: \"1\", value: \"pending\" },\n  { key: \"2\", value: \"approved\" },\n  { key: \"3\", value: \"rejected\" },\n  { key: \"4\", value: \"admin account\" },\n];\n\nexport const csvFileStatuses = [\n  { key: \"1\", value: \"processed\" },\n  { key: \"2\", value: \"failed\" },\n  { key: \"3\", value: \"pending\" },\n];\n\nexport const abaFilesStatuses = [\n  { key: \"7\", value: \"Rejected\" },\n  { key: \"3\", value: \"Pending\" },\n];\n\nexport const abaArchiveFilesStatuses = [\n  { key: \"7\", value: \"Approved\" },\n  { key: \"8\", value: \"Partially Approved\" },\n  { key: \"9\", value: \"Returned\" },\n];\n\nexport const sideValues = [\n  { key: \"sell\", value: \"sell\" },\n  { key: \"buy\", value: \"buy\" },\n];\n\nexport const withdrawalHistoryStatuses = [\n  { key: \"2\", value: \"Approved\" },\n  { key: \"4\", value: \"Returned\" },\n];\n\nexport const reportsWithdrawalsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"Returned\" },\n  { key: \"5\", value: \"AdminAccount\" },\n];\n\nexport const reportsDepositsStatuses = [\n  { key: \"0\", value: \"New\" },\n  { key: \"1\", value: \"Pending\" },\n  { key: \"2\", value: \"Approved\" },\n  { key: \"3\", value: \"Rejected\" },\n  { key: \"4\", value: \"AdminAccount\" },\n  { key: \"5\", value: \"Archive\" },\n];\n"],"names":["_ref","url","params","token","useSelector","store","user","accessToken","_jsxs","action","BuildUrl","method","children","_jsx","type","name","value","concat","className","src","title","alt","getNewDepositsFailure","error","actions","payload","getPendingDepositsFailure","changePendingDepositStatusFailure","getRejectedDepositsFailure","getApprovedDepositsFailure","getAbaFilesFailure","getArchiveAbaFilesFailure","getAbaFileByIdFailure","approveRejectAbaFileByIdFailure","getWithdrawalsRequestsFailure","getWithdrawalsHistoryFailure","handlerWithdrawalRequestActionFailure","getBankStatementsFailure","getCsvFilesFailure","adminAccountGetCsvBankStatementsFailure","adminAccountGetDepositsRequestsFailure","matchRequestFailure","archiveRequestFailure","getArchiveFailure","createAbaFileFailure","axios","GetAxios","createAbaFile","ids","dispatch","data","post","BuildAPIUrl","URLS","BANKING","headers","then","res","abaFile","toast","success","message","catch","handleRespErr","getArchive","get","archive","archiveRequest","id","put","URLS_ADMIN_GROUPS","admin_account","matchRequest","hash","trxType","FormData","append","adminAccountGetDepositsRequests","scvBankStatements","adminAccountGetCsvBankStatements","getCsvFiles","files","getBankStatements","statements","handlerWithdrawalRequestAction","status","abaId","getWithdrawalsHistory","withdrawalsHistory","response","getWithdrawalsRequests","withdrawalsRequests","approveRejectAbaFileById","getAbaFileById","getArchiveAbaFiles","abaFiles","getAbaFiles","getApprovedDeposits","approvedDeposits","getRejectedDeposits","rejectedDeposits","changePendingDepositStatus","notes","getPendingDeposits","pendingDeposits","getNewDeposits","newDeposits","bounce","columns","Header","accessor","width","getProps","state","rowInfo","undefined","style","textAlign","filterable","Cell","row","timeStampToDate","original","uploadedAt","timeStampToTime","Filter","filter","onChange","customSelectFilter","options","csvFileStatuses","sortable","DownloadFilesButtonTableStyle","publicId","padding","CsvStatements","useDispatch","csvFilesData","manualBanking","csvFiles","isFetchData","setIsFetchData","useState","pages","setPages","currentCsvFiles","setCurrentCsvFiles","currentDateRange","setCurrentDateRange","dateRangeObj","queryParams","setQueryParams","page","perPage","sorted","filtered","useEffect","DatePicker","dateRange","el","ReactTable","defaultPageSize","loading","manual","onFetchData","Number","pageSize","clearTimeout","setTimeout","postedAt","evaluatedAt","statementsType","_ref2","statementsStatuses","BankDeposits","bankStatementsData","bankStatements","currentBankStatements","setCurrentBankStatements","e","file","target","onInputChange","htmlFor","tab","NavLink","to","URLS_LOCAL_GROUPS","manual_banking","classNames","active","time","ccy","depositsData","deposits","setState","prevState","Columns","handlerShowPopup","createdAt","receivedAt","display","alignItems","justifyContent","onClick","showPopup","instance","ModalPopup","onYes","onClose","handlerClosePopup","ok","cancel","updatedAt","tableState","textOverflow","whiteSpace","RejectedDeposits","setRejectedDeposits","dateRangeState","setDateRangeState","setParams","getTdProps","column","overflow","props","NewDeposits","PendingDeposits","ApprovedDeposits","WithdrawalsRequests","withdrawalsData","withdrawals","selected","selectAll","prev","closePopupHandler","Object","keys","map","push","checked","newSelected","toggleRow","ref","input","indeterminate","toggleSelectAll","forEach","x","showPopupHandler","length","paymentDate","withdrawalHistoryStatuses","WithdrawalsHistory","activeAbaFileIdData","client","currentAbaFile","activeAbaFileId","disabled","AbaFiles","setAbaFiles","setActiveAbaFileId","setId","setType","setStatus","setShowPopup","setNotes","handleShowPopup","abaFilesId","setActiveAbaFile","abaFilesStatuses","AbaFile","AbaArchive","abaArchiveFiles","setAbaArchiveFiles","abaArchiveFilesStatuses","requestsBounce","csvBankStatementsBounce","AdminAccount","adminAccountData","adminAccount","csvBankStatementsIsFetchData","csvBankStatements","csvBankStatementsPages","csvBankStatementsParams","csvBankStatementsDateRange","requestsIsFetchData","requests","requestsPages","requestsParams","requestsDateRange","reqType","trxTypes","withdrawal","deposit","fee","duplicate","handleDateRange","dateRangeKey","paramsKey","copyToClipBoard","tableDescr","text","Promise","resolve","reject","textArea","document","createElement","opacity","position","left","zIndex","body","appendChild","focus","select","successful","execCommand","removeChild","err","setDefSelectVal","val","find","label","key","selectOptions","csvBankStatementsColumns","Select","classNamePrefix","selectedOption","onSelectChange","opt","newTrxType","placeholder","styles","colourStyles","newHash","requestsColumns","cursor","hashId","csvUrlParams","requestsUrlParams","DownloadReportsButton","BankDetails","bankDetailsData","bankDetails","accountNumber","accountName","bsb","bankName","accountHolder","handleOnChange","adminGetBankDetails","details","adminEditBankDetails","Archive","archiveData","isLoading","setIsLoading","useParams","renderTabContent","BankStatements","Deposits","Withdrawals","docs","now","Date","yesterdayBegin","getFullYear","getMonth","getDate","todayEnd","setValue","DateRangePicker","newValue","valueToTimestamp","getTime","toString","format","stopPropagation","React","onFocus","onKeyPress","rows","option","isDisabled","isFocused","isSelected","backgroundColor","borderTop","borderBottom","color","singleValue","indicatorSeparator","dropdownIndicator","menu","boxSizing","background","container","maxHeight","fontSize","marginRight","control","height","minHeight","border","borderRadius","boxShadow","dateOptions","days","i","months","start","moment","getMilliseconds","add","years","lastYear","optsMapper","prepareOptions","event","item","s","lastIndexOf","timeStamp","SYMBOLS_INFO","BTC","symbol","precision","ETH","LTC","USDT","ccyPairs","sideValues","reportsWithdrawalsStatuses","reportsDepositsStatuses"],"sourceRoot":""}