{"version":3,"file":"static/js/45.c9712796.chunk.js","mappings":"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","sources":["utils/config/language/resert.js","components/SetNewPassword/index.js"],"sourcesContent":["import { CONFIRM_PASSWORD, PASSWORD, NEW_PASSWORD } from \"./index\";\n\nexport const RESET_EN = {\n  [NEW_PASSWORD]: \"Set new Password\",\n  [PASSWORD]: \"password\",\n  [CONFIRM_PASSWORD]: \"confirm password\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { I18n } from \"react-redux-i18n\";\nimport Input from \"../Common/Input\";\nimport Button from \"../Common/Button\";\nimport \"./index.less\";\nimport {\n  PASSWORD,\n  CONFIRM_PASSWORD,\n  SUBMIT,\n  NEW_PASSWORD,\n} from \"../../utils/config/language/\";\nimport { RESET_EN } from \"../../utils/config/language/resert\";\nimport CenteredBlock from \"../Common/CenteredBlock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  onChangeInputData,\n  resetAllErrorMessageAction,\n} from \"../../store/actions/userActions\";\nimport { useNavigate } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport { onSetNewPassword } from \"../../requests/userRequests\";\n\nconst SetNewPassword = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const messages = useSelector((store) => store.user.messages);\n  const [state, setState] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    activationCode: \"\",\n    showPass: false,\n    showConfirmPass: false,\n  });\n  useEffect(() => {\n    dispatch(resetAllErrorMessageAction());\n    getActivationCode();\n  }, []);\n  const handleOnChange = (type, event) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: event.target.value,\n    }));\n    let args = { field: type, value: event.target.value };\n    dispatch(onChangeInputData(args));\n  };\n  const handleOnClick = (event) => {\n    const { password, confirmPassword, activationCode } = state;\n    const userData = {\n      password: password,\n      confirmPassword: confirmPassword,\n      code: activationCode,\n    };\n    event.preventDefault();\n    if (!messages[\"password\"] && !messages[\"confirmPassword\"]) {\n      dispatch(onSetNewPassword(userData, navigate));\n    }\n  };\n  const getActivationCode = () => {\n    let query = location.pathname.split(\"=\");\n    setState((prevState) => ({\n      ...prevState,\n      activationCode: query[query.length - 1],\n    }));\n  };\n  const handleShowPasswordToggle = (type) => {\n    setState((prevState) => ({\n      ...prevState,\n      [type]: !prevState[type],\n    }));\n  };\n  const { password, confirmPassword, showPass, showConfirmPass } = state;\n  return (\n    <CenteredBlock title={I18n.t(`buttons.${RESET_EN[NEW_PASSWORD]}`)}>\n      <form onSubmit={(event) => handleOnClick(event)}>\n        <div className=\"newPassInputs-wrap\">\n          <img\n            onMouseDown={() => handleShowPasswordToggle(\"showPass\")}\n            onMouseUp={() => handleShowPasswordToggle(\"showPass\")}\n            className=\"showPassIcon\"\n            src=\"/img/svg/showPass.svg\"\n            alt=\"show password\"\n          />\n          <Input\n            type={showPass ? \"text\" : \"password\"}\n            name=\"password\"\n            title={`register.${PASSWORD}`}\n            className=\"\"\n            placeholder={`register.${PASSWORD}`}\n            value={password}\n            error={messages[\"password\"]}\n            onChange={(event) => handleOnChange(\"password\", event)}\n            onBlur={(event) => handleOnChange(\"password\", event)}\n          />\n        </div>\n        <div className=\"newPassInputs-wrap\">\n          <img\n            onMouseDown={() => handleShowPasswordToggle(\"showConfirmPass\")}\n            onMouseUp={() => handleShowPasswordToggle(\"showConfirmPass\")}\n            className=\"showPassIcon\"\n            src=\"/img/svg/showPass.svg\"\n            alt=\"show password\"\n          />\n          <Input\n            type={showConfirmPass ? \"text\" : \"password\"}\n            name=\"confirmPassword\"\n            title={`register.${PASSWORD}`}\n            className=\"\"\n            placeholder={`register.${CONFIRM_PASSWORD}`}\n            value={confirmPassword}\n            error={messages[\"confirmPassword\"]}\n            onChange={(event) => handleOnChange(\"confirmPassword\", event)}\n            onBlur={(event) => handleOnChange(\"confirmPassword\", event)}\n          />\n        </div>\n        <div className=\"signin-btn-wrapper\">\n          <Button\n            type=\"submit\"\n            className=\"signin-btn btn-green\"\n            onClick={(event) => handleOnClick(event)}\n          >\n            {I18n.t(`buttons.${SUBMIT}`)}\n          </Button>\n        </div>\n      </form>\n    </CenteredBlock>\n  );\n};\n\nexport default SetNewPassword;\n"],"names":["RESET_EN","NEW_PASSWORD","PASSWORD","CONFIRM_PASSWORD","SetNewPassword","dispatch","useDispatch","navigate","useNavigate","location","useLocation","messages","useSelector","store","user","state","setState","useState","password","confirmPassword","activationCode","showPass","showConfirmPass","useEffect","resetAllErrorMessageAction","getActivationCode","handleOnChange","type","event","prevState","target","value","args","field","onChangeInputData","handleOnClick","userData","code","preventDefault","onSetNewPassword","query","pathname","split","length","handleShowPasswordToggle","_jsx","CenteredBlock","title","I18n","t","concat","children","_jsxs","onSubmit","className","onMouseDown","onMouseUp","src","alt","Input","name","placeholder","error","onChange","onBlur","Button","onClick","SUBMIT"],"sourceRoot":""}